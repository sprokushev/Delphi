Unit depordload;

Interface

Uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DB, OracleData, Oracle, Grids, DBGridEh, ExtCtrls, StdCtrls,
  Mask, ToolEdit, Buttons, ActnList, XPStyleActnCtrls, ActnMan, ADODB,
  dateutils, StrUtils, ComCtrls, ImgList, MemTableDataEh, DataDriverEh, MemTableEh,
  GridsEh;

Type
  TfrmDepord = Class(TForm)
    oraPR17: TOracleDataSet;
    dsPR17: TDataSource;
    Panel1: TPanel;
    Panel2: TPanel;
    dbgPR17: TDBGridEh;
    ActionManager1: TActionManager;
    acFilter: TAction;
    acLoad: TAction;
    BitBtn2: TBitBtn;
    OraQuery: TOracleQuery;
    Panel3: TPanel;
    Splitter3: TSplitter;
    oraCatalog: TOracleDataSet;
    dsCatalog: TDataSource;
    oraQ: TOracleQuery;
    GroupBox1: TGroupBox;
    rbArx: TRadioButton;
    rbSyk: TRadioButton;
    rbInta: TRadioButton;
    rbVor: TRadioButton;
    rbKp: TRadioButton;
    rbKos: TRadioButton;
    rbPech: TRadioButton;
    rbPAZS: TRadioButton;
    rbUh: TRadioButton;
    rbUs: TRadioButton;
    BitBtn1: TBitBtn;
    oraInvIns: TOracleQuery;
    oraInvsIns: TOracleQuery;
    oraPR17NOM_ZD: TStringField;
    oraPR17TONN_DECLARED: TFloatField;
    oraPR17DATE_PLAN: TDateTimeField;
    oraPR17INPUT_DATE: TDateTimeField;
    oraPR17MODIF: TStringField;
    oraPR17MOD_MODIF: TStringField;
    oraProps: TOracleQuery;
    oraPR17STAN_NAME: TStringField;
    oraPR17AGNFIFO: TStringField;
    oraState: TOracleQuery;
    Label2: TLabel;
    deBeg: TDateEdit;
    Label3: TLabel;
    deEnd: TDateEdit;
    oraDelIns: TOracleQuery;
    oraDelsIns: TOracleQuery;
    oraDelCat: TOracleQuery;
    oraPR17PLANSTRU_ID: TFloatField;
    oraPR17TAXGR_CODE_NEW: TStringField;
    oraPR17TAXGR_CODE: TStringField;
    oraDelState: TOracleQuery;
    mteCatalog: TMemTableEh;
    mteCatalogRN: TFloatField;
    mteCatalogCRN: TFloatField;
    mteCatalogNAME: TStringField;
    dsdCatalog: TDataSetDriverEh;
    DBGridEh1: TDBGridEh;
    rbLabyt: TRadioButton;
    rbAviaTran: TRadioButton;
    procedure DBGridEh1Columns0GetCellParams(Sender: TObject; EditMode: Boolean;
      Params: TColCellParamsEh);
    Procedure acFilterExecute(Sender: TObject);
    Procedure FormCreate(Sender: TObject);
    Procedure FormClose(Sender: TObject; Var Action: TCloseAction);
    Procedure acLoadExecute(Sender: TObject);
    Procedure dbgPR17GetCellParams(Sender: TObject; Column: TColumnEh;
      AFont: TFont; Var Background: TColor; State: TGridDrawState);
    Procedure tvCatalogGetImageIndex(Sender: TObject; Node: TTreeNode);
    Procedure deBegChange(Sender: TObject);
    Procedure WriteEvent(Tag: String);
  private
    { Private declarations }
  public
    { Public declarations }
  End;

Var
  frmDepord                             : TfrmDepord;

Implementation

Uses MAIN, DMunit;

{$R *.dfm}

Procedure TfrmDepord.WriteEvent(Tag: String);
Begin
frmMain.WriteEvent(Tag, 'Форма "Заявки в поподразделения в Парус"');
End;

Procedure TfrmDepord.acFilterExecute(Sender: TObject);
Begin
  If oraPR17.Active Then
    oraPR17.Close;
  oraPR17.SQL[15] := 'and m.input_date between TO_DATE(''' + FormatDateTime('dd.mm.yyyy', deBeg.Date) + ''',''dd.mm.yyyy'')';
  oraPR17.SQL[15] := oraPR17.SQL[15] + 'and TO_DATE(''' + FormatDateTime('dd.mm.yyyy', deEnd.Date) + ''',''dd.mm.yyyy'')';
  If rbArx.Checked Then //Архангельск  or (d.predpr_id=3179)
    oraPR17.SQL[16] := 'and (ps.region_id=21 or m.poluch_id in(2889,28))'
      //  oraPR17.SQL[16]:='and (m.planstru_id in (95,178,208) or m.poluch_id=2889)'
//  oraPR17.SQL[16]:='and (m.planstru_id=95 or m.planstru_id=178 or m.poluch_id=2889 or (m.planstru_id=105 and m.poluch_id=2889))'
  Else
    oraPR17.SQL[16] := '';
  If rbVor.Checked Then //Воркута
    oraPR17.SQL[16] := 'and (m.poluch_id in (2729,128) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2729 or m.poluch_id=128)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbInta.Checked Then //Inta
    oraPR17.SQL[16] := 'and (m.poluch_id in (2724,136,745) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2724 or m.poluch_id=136 or m.poluch_id=745)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbKp.Checked Then //KnyagPogost
    oraPR17.SQL[16] := 'and (m.poluch_id in (2728,137,290, 4088) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2728 or m.poluch_id=137)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbKos.Checked Then //koslan
    oraPR17.SQL[16] := 'and (m.poluch_id in (2735,133) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2735 or m.poluch_id=133)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbPech.Checked Then //Pechera
    oraPR17.SQL[16] := 'and (m.poluch_id in (2731,110,2730,857) and not(m.planstru_id in (95,178,208,207)))'
      //oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2731 or m.poluch_id=110 or m.poluch_id=857)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbPAZS.Checked Then //Pechera AZS
    oraPR17.SQL[16] := 'and (m.poluch_id in (174,2730) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=174 or m.poluch_id=2730)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbSyk.Checked Then //Syktyvkar 2364 Аэропорт 131 Агростройконструкция
    oraPR17.SQL[16] := 'and (m.poluch_id in (2364,2732,177,112,750,131, 4089, 4162) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2364 or m.poluch_id=2732 or m.poluch_id=177 or m.poluch_id=112 or m.poluch_id=750)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbUs.Checked Then //Usinsk
    oraPR17.SQL[16] := 'and (m.poluch_id in (2725,2703,2646,3526) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2725 or m.poluch_id=2703 or m.poluch_id=2646)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbUh.Checked Then //Uhta
    oraPR17.SQL[16] := 'and (m.poluch_id in (2723,102,2641,3856) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[16]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2723 or m.poluch_id=102 or m.poluch_id=2641)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbLabyt.Checked Then //labytnangi
    oraPR17.SQL[16] := 'and (m.poluch_id in (2065) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[24]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2723 or m.poluch_id=102 or m.poluch_id=2641)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  If rbAviaTran.Checked Then //комиавиа
    oraPR17.SQL[16] := 'and (m.poluch_id in (2314) and not(m.planstru_id in (95,178,208,207)))'
      //  oraPR17.SQL[24]:='and (m.planstru_id=96 or m.planstru_id=177 or m.planstru_id=105) and (m.poluch_id=2723 or m.poluch_id=102 or m.poluch_id=2641)'
  Else
    oraPR17.SQL[16] := oraPR17.SQL[16];
  oraPR17.Open;
End;

Procedure TfrmDepord.FormCreate(Sender: TObject);
Begin
  deBeg.Date := date - 1;
  deEnd.Date := date;
  WriteEvent('Форма открыта');
  frmMain.acConnectToMaster.Execute;
  frmMain.acConnectToParus.Execute;
  //oraPR17.SQL[15]:='and m.date_plan=TO_DATE('''+FormatDateTime('dd.mm.yyyy',deBeg.Date)+''',''dd.mm.yyyy'')';
  //oraPR17.Open;
  oraCatalog.Open;
  mteCatalog.Open;
End;

Procedure TfrmDepord.FormClose(Sender: TObject; Var Action: TCloseAction);
Begin
  oraPR17.Close;
  oraCatalog.Close;
  frmMain.acDisconnectFromMaster.Execute;
  frmMain.acDisconnectFromParus.Execute;
  WriteEvent('Форма закрыта');
  action := caFree;
End;

Procedure TfrmDepord.acLoadExecute(Sender: TObject);
Var
  summ                                  : String;
  st1, st2, rn_crn, rn_crn2             : String;
  rn_sved                               : integer;
  rn_store,rn_subdiv                    : String;
  pref, numb, rn_doc                    : String;
  ss                                    : ^TOracleDataSet;
Begin

  oraInvIns.ClearVariables;
  rn_doc := 'ЗАЯВКА_ВН';
  rn_store := 'УХТА_ЦА';
  rn_crn := mtecatalog.fieldbyname('RN').asstring;  oraPR17.First;
  //Поиск каталога для заказа поставщика
  oraDelCat.ClearVariables;
  oraDelCat.SetVariable(':nFLAG_SMART',1);
  oraDelCat.SetVariable(':nCOMPANY',2);
  oraDelCat.SetVariable(':sUNITCODE','DeliveryOrders');
  oraDelCat.SetVariable(':sNAME','Ж/Д УНП');
  oraDelCat.Execute;
  rn_crn2 := inttostr(oraDelCat.GetVariable(':nRN'));
  oraDelCat.Close;
  ss := @oraPR17;
  ss^.First;
  While Not ss^.Eof Do
    Begin
      If rbArx.Checked Then
        Begin
          //Архангельск
          oraInvIns.SetVariable(':sAGENT', 'Бородин И.В.');
          oraInvIns.SetVariable(':sFACEACC', 'АРХАН_НБ_02/Т');
          oraInvIns.SetVariable(':sACC_AGENT', 'Захваткина Е.А.');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_ПОСТАВОК');
          oraInvIns.SetVariable(':sSUBDIV', 'АРХАНГЕЛЬСК');
          rn_subdiv:='АРХАНГЕЛЬСК';
          oraInvIns.SetVariable(':sORD_PREF', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_NUMB', 'СНП');
        End;
      If rbVor.Checked Then
        Begin
          //Воркута
          oraInvIns.SetVariable(':sAGENT', 'Колотов В.Н.');
          oraInvIns.SetVariable(':sFACEACC', 'ВОРКУТА_НБ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'ВОРКУТА');
          rn_subdiv:='ВОРКУТА';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'ворк_н/б');
        End;
      If rbInta.Checked Then
        Begin
          //Inta
          oraInvIns.SetVariable(':sAGENT', 'Катилов Н.И.');
          oraInvIns.SetVariable(':sFACEACC', 'ИНТА_НБ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'ИНТА');
          rn_subdiv:='ИНТА';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'инта_н/б');
        End;
      If rbKp.Checked Then
        Begin
          //KnyagPogost
          oraInvIns.SetVariable(':sFACEACC', 'КНЯЖ-ПОГ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'КНЯЖПОГОСТ_ЦЕХ');
          rn_subdiv:='КНЯЖПОГОСТ_ЦЕХ';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'кнп_цех');
        End;
      If rbKos.Checked Then
        Begin
          //koslan
          oraInvIns.SetVariable(':sAGENT', 'Буцик И.А.');
          oraInvIns.SetVariable(':sFACEACC', 'КОСЛАН_НБ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'КОСЛАН');
          rn_subdiv:='КОСЛАН';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'кослан_н/б');
        End;
      If rbPech.Checked Then
        Begin
          //Pechera
          oraInvIns.SetVariable(':sAGENT', 'Филиппов Н.А.');
          oraInvIns.SetVariable(':sFACEACC', 'ПЕЧОРА_НБ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'ПЕЧОРА');
          rn_subdiv:='ПЕЧОРА';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'печора_н/б');
        End;
      If rbPAZS.Checked Then
        Begin
          //Pechera  AZS
          oraInvIns.SetVariable(':sAGENT', 'Филиппов Н.А.');
          oraInvIns.SetVariable(':sFACEACC', 'ПЕЧОРА_АЗС_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'ПЕЧ_ АЗС');
          rn_subdiv:='ПЕЧ_ АЗС';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'печора_азс');
        End;
      If rbSyk.Checked Then
        Begin
          //Syktyvkar
          oraInvIns.SetVariable(':sAGENT', 'Хамзин Р.Р.');
          oraInvIns.SetVariable(':sFACEACC', 'СЫКТ_НБ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'СЫКТЫВКАР');
          rn_subdiv:='СЫКТЫВКАР';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'сыкт_н/б');
        End;
      If rbUs.Checked Then
        Begin
          //Usinsk
          oraInvIns.SetVariable(':sAGENT', 'Абмаев В.С.');
          oraInvIns.SetVariable(':sFACEACC', 'УСИНСК_НБ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'УСН');
          rn_subdiv:='УСН';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'усинск_н/б');
        End;
      If rbUh.Checked Then
        Begin
          //Uhta
          oraInvIns.SetVariable(':sFACEACC', 'УХТА_НБ_01/Т');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'УХТА_НБ');
          rn_subdiv:='УХТА_НБ';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'ухта_н/б');
        End;
      If rbLabyt.Checked Then
        Begin
          //labytnangi
          oraInvIns.SetVariable(':sAGENT', 'Кульбицкая И.Н.');  //
          oraInvIns.SetVariable(':sFACEACC', '');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'ЯНАО');
          rn_subdiv:='ЯНАО';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'лаб_н/б');
        End;
      If rbAviaTran.Checked Then
        Begin
          //комиавиа
          oraInvIns.SetVariable(':sAGENT', 'Кульбицкая И.Н.');  //
          oraInvIns.SetVariable(':sFACEACC', '');
          oraInvIns.SetVariable(':sACC_SUBDIV', 'ОТДЕЛ_МАРКЕТИНГА');
          oraInvIns.SetVariable(':sSUBDIV', 'УХТА_НБ');
          rn_subdiv:='УХТА_НБ';
          oraInvIns.SetVariable(':sORD_NUMB', trim(ss^.fieldbyname('nom_zd').asString));
          oraInvIns.SetVariable(':sORD_PREF', 'ухта_н/б');
        End;

      WriteEvent('Закачка в Парус заявки № ' + ss^.fieldbyname('nom_zd').AsString);
      rn_sved := 0;
      oraInvIns.SetVariable(':nCOMPANY', 2);
      oraInvIns.SetVariable(':nCRN', rn_crn);
      oraInvIns.SetVariable(':sORD_DOCTYPE', rn_doc);
      oraInvIns.SetVariable(':dORD_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
      oraInvIns.SetVariable(':nORD_STATE', 0);
      oraInvIns.SetVariable(':dSTATE_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
      oraInvIns.SetVariable(':sCURRENCY', 'Руб.');
      oraInvIns.SetVariable(':sSTORE', rn_store);
      oraInvIns.SetVariable(':dRELEASE_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('date_plan').asDateTime + 30));
      oraInvIns.SetVariable(':nORD_PERIOD', 0);
      oraInvIns.SetVariable(':nPERIOD_CORR', 0);
      oraInvIns.SetVariable(':nPERIOD_QUANT', 1);
      oraInvIns.SetVariable(':nPERIOD_TYPE', 0);
      oraInvIns.SetVariable(':nPERIOD_LEN', 1);
      oraInvIns.SetVariable(':nEMERGORD', 0);
      oraInvIns.SetVariable(':nATSAMETIME', 1);
      Try
        Begin
          oraInvIns.Execute;
          WriteEvent('Заголовок загружен успешно!');
          rn_sved := oraInvIns.GetVariable(':nRN');
          oraProps.ClearVariables;
          oraProps.SetVariable(':NCOMPANY', 2);
          oraProps.SetVariable(':NRN', rn_sved);
          oraProps.SetVariable(':SUNITCODE', 'DepartmentsOrders');
          oraProps.SetVariable(':SCODE', 'Код ТУ');
          oraProps.SetVariable(':NFORMAT', 0);
          oraProps.SetVariable(':SSTR_VALUE', '770800476705');
          Try
            Begin
              oraProps.Execute;
              WriteEvent('Код ТУ загружен');
            End;
          Except On E: EOracleError Do
              ShowMessage(E.Message);
          End;
          //ЖД станция
          oraProps.ClearVariables;
          st1 := AnsiUpperCase(leftStr(ss^.fieldbyname('stan_name').asString, 1));
          st2 := rightStr(trim(ss^.fieldbyname('stan_name').asString), length(trim(ss^.fieldbyname('stan_name').asString)) - 1);
          st1 := st1 + AnsiLowerCase(st2);
          oraQ.SQL.Clear;
          oraQ.SQL.Add('select str_value from extra_dicts_values where');
          oraQ.SQL.Add('note=''' + st1 + '''');
          oraQ.execute;
          If (oraQ.RowCount > 0) Then
            Begin
              oraProps.SetVariable(':NCOMPANY', 2);
              oraProps.SetVariable(':NRN', rn_sved);
              oraProps.SetVariable(':SUNITCODE', 'DepartmentsOrders');
              oraProps.SetVariable(':SCODE', 'Код станции');
              oraProps.SetVariable(':NFORMAT', 0);
              oraProps.SetVariable(':SSTR_VALUE', oraQ.FieldAsString(0));
              Try
                Begin
                  oraProps.Execute;
                  WriteEvent('Код станции загружен');
                End;
              Except On E: EOracleError Do
                  ShowMessage(E.Message);
              End;
            End;
          oraQ.Clear;
          oraProps.ClearVariables;
          oraProps.SetVariable(':NCOMPANY', 2);
          oraProps.SetVariable(':NRN', rn_sved);
          oraProps.SetVariable(':SUNITCODE', 'DepartmentsOrders');
          oraProps.SetVariable(':SCODE', 'Грузополучатели');
          oraProps.SetVariable(':NFORMAT', 0);
          oraProps.SetVariable(':SSTR_VALUE', trim(ss^.fieldbyname('agnfifo').asString));
          Try
            Begin
              oraProps.Execute;
              WriteEvent('Грузополучатель загружен');
            End;
          Except On E: EOracleError Do
              ShowMessage(E.Message);
          End;
          // Спецификация
          oraInvsIns.ClearVariables;
          oraInvsIns.SetVariable(':nCOMPANY', 2);
          oraInvsIns.SetVariable(':nPRN', rn_sved);
          oraInvsIns.SetVariable(':sNOMEN', trim(ss^.fieldbyname('modif').asString));
          oraInvsIns.SetVariable(':sNOM_MODIF', trim(ss^.fieldbyname('mod_modif').asString));
          oraInvsIns.SetVariable(':nEXP_PRICE', 0);
          oraInvsIns.SetVariable(':nPR_MEAS', 1);
          oraInvsIns.SetVariable(':nACTM_QUANT', trim(floatToStr(ss^.fieldbyname('tonn_declared').asFloat * 1000)));
          oraInvsIns.SetVariable(':nACTA_QUANT', trim(floatToStr(ss^.fieldbyname('tonn_declared').asFloat * 1000)));
          oraInvsIns.SetVariable(':nACTSUMM', 0);
          oraInvsIns.SetVariable(':dACTPF_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
          Try
            Begin
              oraInvsIns.Execute;
              WriteEvent('Спецификация заявки загружена!');
              oraQuery.SQL.Clear;
              oraQuery.SQL.Add('insert into parus_fin (task,rn,subtask,month_id,date_kvit,authid) values (');
              oraQuery.SQL.Add('''DepartmentsOrders'',');
              oraQuery.SQL.Add(inttostr(rn_sved) + ',');
              oraQuery.SQL.Add('1,');
              oraQuery.SQL.Add('''' + ss^.fieldbyname('nom_zd').asString + ''',');
              oraQuery.SQL.Add('TO_DATE(''' + FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').AsDateTime) + ''',''dd.mm.yyyy''),');
              oraQuery.SQL.Add('''' + DM.oraParus.LogonUsername + ''')');
              oraQuery.Execute;
              oraQuery.SQL.Clear;
              oraQuery.Session.Commit;
              oraQ.SQL.Clear;
              oraQ.Session.Commit;
              WriteEvent('Заказ подразделений сформирван успешно!');
              oraState.ClearVariables;
              oraState.SetVariable(':NFLAG_SMART', 0);
              oraState.SetVariable(':NCOMPANY', 2);
              oraState.SetVariable(':NRN', rn_sved);
              oraState.SetVariable(':NFLAG_MODE', 0);
              oraState.SetVariable(':NNEW_STATE', 1);
              oraState.SetVariable(':nRESERV_SIGN', 0);
              oraState.SetVariable(':nSIGN_WARN', 0);
              oraState.SetVariable(':DSTATE_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
              Try
                oraState.Execute
              Except On E: EOracleError Do
                  ShowMessage(E.Message);
              End;
              oraQ.Session.Commit;
              WriteEvent('Утверждена Заказ подразделений № ' + ss^.fieldbyname('nom_zd').AsString + #13#10);
            End
          Except On E: EOracleError Do
              ShowMessage(E.Message);
          End
        End;
      Except On E: EOracleError Do
          ShowMessage(E.Message);
      End;
//************************** Заказ поставщика****************************************************
      WriteEvent('Закачка в Парус заказа поставщика №' + ss^.fieldbyname('nom_zd').AsString + #13#10);
      rn_sved := 0;
      oraDelIns.ClearVariables;
      oraDelIns.SetVariable(':nCOMPANY', 2);
      oraDelIns.SetVariable(':nCRN', rn_crn2);
      oraDelIns.SetVariable(':sJUR_PERS', 'СЕВЕРНЕФТЕПРОДУКТ');
      oraDelIns.SetVariable(':sORD_DOCTYPE', 'ЗАКПОСТ');
      oraDelIns.SetVariable(':sORD_PREF', ss^.fieldbyname('nom_zd').asString);
      oraDelIns.SetVariable(':sORD_NUMB', '1');
      oraDelIns.SetVariable(':sAGENT', 'ЛУКОЙЛ-УХТАНЕФТЕПЕРЕ');
      oraDelIns.SetVariable(':sFACEACC', '050250001/1');
      oraDelIns.SetVariable(':dORD_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
      oraDelIns.SetVariable(':nORD_STATE', 0);
      oraDelIns.SetVariable(':dSTATE_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
      oraDelIns.SetVariable(':sDISP_TYPE', 'Ж/Д_ТРАНЗ');
      oraDelIns.SetVariable(':sPAY_TYPE', 'ПО ФАКТУ 22');
//      oraDelIns.SetVariable(':sTARIF', trim(ss^.fieldbyname('starif').asString));
      oraDelIns.SetVariable(':sCURRENCY', 'Руб.');
      oraDelIns.SetVariable(':sSTORE', 'УХТА_ЦА');
      oraDelIns.SetVariable(':sACC_AGENT', 'Кульбицкая И.Н.');
      oraDelIns.SetVariable(':sSUBDIV', rn_subdiv);
      oraDelIns.SetVariable(':dPAY_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('date_plan').asDateTime + 30));
      oraDelIns.SetVariable(':dRELEASE_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('date_plan').asDateTime + 30));
//      oraDelIns.SetVariable(':dPRICE_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('date_plan').asDateTime));
      oraDelIns.SetVariable(':nORD_PERIOD', 0);
      oraDelIns.SetVariable(':nPERIOD_CORR', 1);
      oraDelIns.SetVariable(':nPERIOD_QUANT', 1);
      oraDelIns.SetVariable(':nPERIOD_TYPE', 0);
      oraDelIns.SetVariable(':nPERIOD_LEN', 1);
      oraDelIns.SetVariable(':nATSAMETIME', 1);
      oraDelIns.SetVariable(':NINCLUDETAX', 1);
      oraDelIns.SetVariable(':nREDUCTION', 0);
      Try
        Begin
          oraDelIns.Execute;
          rn_sved := oraDelIns.GetVariable(':nRN');
          WriteEvent('Заголовок Заказа загружен...' + #13#10);
          oraProps.ClearVariables;
          oraProps.SetVariable(':NCOMPANY', 2);
          oraProps.SetVariable(':NRN', rn_sved);
          oraProps.SetVariable(':SUNITCODE', 'DeliveryOrders');
          oraProps.SetVariable(':SCODE', 'ПЛАН ПОСТАВКИ');
          oraProps.SetVariable(':NFORMAT', 0);
          oraProps.SetVariable(':SSTR_VALUE', trim(ss^.fieldbyname('planstru_id').asString));
          Try
            Begin
              oraProps.Execute;
              WriteEvent('Код Плана Поставки загружен...');
            End;
          Except On E: EOracleError Do
              ShowMessage(E.Message);
          End;

          // Спецификация
          oraDelsIns.ClearVariables;
          oraDelsIns.SetVariable(':nCOMPANY', 2);
          oraDelsIns.SetVariable(':nPRN', rn_sved);
          oraDelsIns.SetVariable(':sNOMEN', trim(ss^.fieldbyname('modif').asString));
					oraDelsIns.SetVariable(':sNOM_MODIF', trim(ss^.fieldbyname('mod_modif').asString));
          oraDelsIns.SetVariable(':nEXP_PRICE', 0);
          oraDelsIns.SetVariable(':nPR_MEAS', 1);
          if (ss^.fieldbyname('date_plan').asDateTime >= StrToDate('01.01.2006')) and (ss^.fieldbyname('date_plan').asDateTime < StrToDate('01.01.2007')) then
    					oraDelsIns.SetVariable(':sTAX_GROUP', trim(ss^.fieldbyname('taxgr_code_new').asString))
          else
    					oraDelsIns.SetVariable(':sTAX_GROUP', trim(ss^.fieldbyname('taxgr_code').asString));
          oraDelsIns.SetVariable(':sSTORE', 'УХТА_ЦА');
          oraDelsIns.SetVariable(':dACTPF_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
          oraDelsIns.SetVariable(':nACTM_QUANT', trim(floatToStr(ss^.fieldbyname('tonn_declared').asFloat * 1000)));
          oraDelsIns.SetVariable(':nACTA_QUANT', trim(floatToStr(ss^.fieldbyname('tonn_declared').asFloat * 1000)));
          oraDelsIns.SetVariable(':nACTSWTAX', 0);
          oraDelsIns.SetVariable(':nACTSWOTAX', 0);
          Try
            Begin
              oraDelsIns.Execute;
              WriteEvent('Спецификация заказа поставщику загружена...');

              //Сохраняем все
              oraQuery.SQL.Clear;
              oraQuery.SQL.Add('insert into parus_fin (month_id,task,rn,subtask,date_kvit,authid) values (');
              oraQuery.SQL.Add('''' + trim(ss^.fieldbyname('nom_zd').AsString) + ''',');
              oraQuery.SQL.Add('''DeliveryOrders'',');
              oraQuery.SQL.Add(inttostr(rn_sved) + ',');
              oraQuery.SQL.Add('1,');
              oraQuery.SQL.Add('TO_DATE(''' + FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').AsDateTime) + ''',''dd.mm.yyyy''),');
              oraQuery.SQL.Add('''' + DM.oraParus.LogonUsername + ''')');
              oraQuery.Execute;
              oraQuery.SQL.Clear;
              oraQuery.Session.Commit;
              oraQ.SQL.Clear;
              oraQ.Session.Commit;
              WriteEvent('Заказ поставщику сформирван успешно!');
              oraDelState.ClearVariables;
              oraDelState.SetVariable(':NFLAG_SMART', 0);
              oraDelState.SetVariable(':NCOMPANY', 2);
              oraDelState.SetVariable(':NRN', rn_sved);
              oraDelState.SetVariable(':NFLAG_MODE', 0);
              oraDelState.SetVariable(':NNEW_STATE', 1);
              oraDelState.SetVariable(':DSTATE_DATE', FormatDateTime('dd.mm.yyyy', ss^.fieldbyname('input_date').asDateTime));
              Try
                oraDelState.Execute
              Except On E: EOracleError Do
                  ShowMessage(E.Message);
              End;
              oraQ.Session.Commit;
              WriteEvent('Утверждена Заказ Поставщику!' + #13#10);
						End
					Except On E: EOracleError Do
							ShowMessage(E.Message);
          End
        End;
      Except On E: EOracleError Do
          ShowMessage(E.Message);
      End;
      ss^.Next;
    End;
  DM.oraParus.commit;
  acFilterExecute(Self);
End;

Procedure TfrmDepord.dbgPR17GetCellParams(Sender: TObject;
  Column: TColumnEh; AFont: TFont; Var Background: TColor;
  State: TGridDrawState);
Begin
  If odd(oraPR17.RecNo) Then
    background := clMoneyGreen;
End;

Procedure TfrmDepord.tvCatalogGetImageIndex(Sender: TObject;
  Node: TTreeNode);
Begin
  If node.Expanded Then
    node.ImageIndex := 1
  Else
    node.ImageIndex := 2;
  If Not node.HasChildren Then
    node.ImageIndex := 3;
End;

Procedure TfrmDepord.deBegChange(Sender: TObject);
Begin
  deBeg.Date := deBeg.date - dayOf(deBeg.date) + 1;
End;

procedure TfrmDepord.DBGridEh1Columns0GetCellParams(Sender: TObject;
  EditMode: Boolean; Params: TColCellParamsEh);
begin
 if mteCatalog.TreeNodeExpanded  then
   params.ImageIndex:=1
 else
  if mteCatalog.TreeNodeHasChildren then
   params.ImageIndex:=2
  else
   params.ImageIndex:=3;
end;

End.
