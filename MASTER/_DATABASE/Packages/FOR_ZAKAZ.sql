--
-- FOR_ZAKAZ  (Package) 
--
CREATE OR REPLACE PACKAGE MASTER.For_Zakaz AS

  -- Очистить временную таблицу
  PROCEDURE EmptyTemp(pIS_AGENT NUMBER);

  -- Добавить данные во временную таблицу
  PROCEDURE FillTemp(pIS_AGENT NUMBER, pBEGIN_DATE DATE, pEND_DATE DATE, pZAKAZ_ID NUMBER DEFAULT NULL);

  -- Добавить номер разнарядки к списку
  FUNCTION CHANGE_NOM_ZD(pNOM_ZD_LIST VARCHAR2,pOLD_NOM_ZD VARCHAR2,pNEW_NOM_ZD VARCHAR2) RETURN VARCHAR2;

  -- Присвоить/снять NOM_ZD позиции "К отгрузке"
  PROCEDURE SetNOM_ZD(pCOMMIT NUMBER, pZAKAZ_ID NUMBER, pZAKAZ_HIST_ID NUMBER, pOLD_ZD VARCHAR2, pNEW_ZD VARCHAR2, pLOAD_VES NUMBER, pLOAD_KOL NUMBER, pFACT_VES NUMBER, pFACT_KOL NUMBER);

  -- Обновить факт исполнения разнарядки
  PROCEDURE FillFact (pCOMMIT NUMBER, pBEGIN_DATE DATE, pEND_DATE DATE, pNOM_ZD VARCHAR2 DEFAULT NULL);

  -- Обновить факт исполнения разнарядки ФИНАНСЫ для реестра контроля СНП
  PROCEDURE FillFactThisMonth;
  
  /* ДОБАВИТЬ/ИЗМЕНИТЬ ЗАКАЗ */
 FUNCTION AddZakaz(pCOMMIT NUMBER, pID NUMBER, pIS_AUTO NUMBER, pIS_AGENT NUMBER, pDATE_PLAN DATE, pCLIENT_NUMBER VARCHAR2,
    pCLIENT_DATE DATE, pINPUT_NUMBER VARCHAR2, pINPUT_DATE DATE, pBEGIN_DATE DATE,
	pIS_ACCEPT NUMBER, pFILIAL_ID NUMBER, pPLAT_ID NUMBER, pDOG_ID NUMBER,
	pPROD_ID_NPR VARCHAR2, pUSL_OPL_ID NUMBER, pLOAD_ABBR VARCHAR2, pSTAN_ID NUMBER,
	pVETKA_ID NUMBER, pPOLUCH_ID NUMBER, pPOTREB_ID NUMBER, pPOTREB_NAME VARCHAR2,
	pNEFTEBASA VARCHAR2, pPAYFORM_ID NUMBER, pPLANSTRU_ID NUMBER, pPRICE_CLIENT NUMBER,
	pPRICE NUMBER, pVES NUMBER, pKOL NUMBER, pSPEED_VES NUMBER, pSPEED_KOL NUMBER,
	pPRIM VARCHAR2, pGR4 VARCHAR2, pZAKAZ_PREV_ID NUMBER,pGOSPROG_ID NUMBER,pGP_NAPR_ID NUMBER,
	pLUKDOG_ID NUMBER, pLINK_ID NUMBER, pLINK_HIST_ID NUMBER, pPERIOD_ID NUMBER DEFAULT 1, pTIP_CORP_ID NUMBER DEFAULT 1, pISU_ADD NUMBER DEFAULT 0) RETURN NUMBER;

  /* УДАЛИТЬ ЗАКАЗ */
  PROCEDURE DelZakaz(pCOMMIT NUMBER, pID NUMBER, pIS_AUTO NUMBER DEFAULT 0);

  /* ДОБАВИТЬ/ИЗМЕНИТЬ ПОЗИЦИЮ ЗАКАЗА */
  FUNCTION AddZakazHist(pCOMMIT NUMBER, pID NUMBER, pIS_AUTO NUMBER, pSORTBY NUMBER, pZAKAZ_ID NUMBER, pSTATUS_ZAKAZ_ID NUMBER, pCLIENT_NUMBER VARCHAR2,
    pCLIENT_DATE DATE, pINPUT_NUMBER VARCHAR2, pINPUT_DATE DATE, pPROD_ID_NPR VARCHAR2,
	pOLD_STAN_ID NUMBER, pSTAN_ID NUMBER, pPOLUCH_ID NUMBER, pPOTREB_ID NUMBER, pPRICE NUMBER, pVES NUMBER,
	pKOL NUMBER, pSPEED_VES NUMBER, pSPEED_KOL NUMBER, pNOM_ZD VARCHAR2,
	pLOAD_VES NUMBER, pLOAD_KOL NUMBER, pFACT_VES NUMBER, pFACT_KOL NUMBER,
	pGU12_A_ID NUMBER,  pBEGIN_DATE DATE,pLINK_ID NUMBER, pLINK_HIST_ID NUMBER, pKOD_ISU VARCHAR2 DEFAULT '*', pISU_ADD NUMBER DEFAULT 0) RETURN NUMBER;

  /* УДАЛИТЬ ПОЗИЦИЮ ЗАКАЗА */
  PROCEDURE DelZakazHist(pCOMMIT NUMBER, pID NUMBER, pIS_AUTO NUMBER DEFAULT 0);

  /* Отказ */
  FUNCTION CancelZakaz(pCOMMIT NUMBER, pCANCEL_ID NUMBER, pIS_AUTO NUMBER, pCLIENT_NUMBER VARCHAR2,
    pCLIENT_DATE DATE, pINPUT_NUMBER VARCHAR2, pINPUT_DATE DATE,
	pBEGIN_DATE DATE,
    pVES NUMBER, pKOL NUMBER, pSPEED_VES NUMBER, pSPEED_KOL NUMBER) RETURN NUMBER;

  /* Отказ+Добавить */
  FUNCTION CancelAddZakaz(pCOMMIT NUMBER, pCANCEL_ID NUMBER, pIS_AUTO NUMBER, pIS_AGENT NUMBER, pDATE_PLAN DATE, pCLIENT_NUMBER VARCHAR2,
    pCLIENT_DATE DATE, pINPUT_NUMBER VARCHAR2, pINPUT_DATE DATE, pBEGIN_DATE DATE,
	pFILIAL_ID NUMBER, pPLAT_ID NUMBER, pDOG_ID NUMBER,
	pPROD_ID_NPR VARCHAR2, pUSL_OPL_ID NUMBER, pLOAD_ABBR VARCHAR2, pSTAN_ID NUMBER,
	pVETKA_ID NUMBER, pPOLUCH_ID NUMBER, pPOTREB_ID NUMBER, pPOTREB_NAME VARCHAR2,
	pNEFTEBASA VARCHAR2, pPAYFORM_ID NUMBER, pPLANSTRU_ID NUMBER, pPRICE_CLIENT NUMBER,
	pPRICE NUMBER, pVES NUMBER, pKOL NUMBER, pSPEED_VES NUMBER, pSPEED_KOL NUMBER,
	pPRIM VARCHAR2, pGR4 VARCHAR2,pGOSPROG_ID NUMBER,pGP_NAPR_ID NUMBER,pLUKDOG_ID NUMBER) RETURN NUMBER;

  /* Переадресация */
  FUNCTION ReAddrZakaz(pCOMMIT NUMBER, pZAKAZ_ID NUMBER, pIS_AUTO NUMBER, pSTATUS_ZAKAZ_ID NUMBER, pCLIENT_NUMBER VARCHAR2,
    pCLIENT_DATE DATE, pINPUT_NUMBER VARCHAR2, pINPUT_DATE DATE, pBEGIN_DATE DATE, pSTAN_ID NUMBER) RETURN NUMBER;

  /* Переадресация+Добавить */
  FUNCTION ReAddrAddZakaz(pCOMMIT NUMBER, pZAKAZ_ID NUMBER, pIS_AUTO NUMBER, pSTATUS_ZAKAZ_ID NUMBER,
    pIS_AGENT NUMBER, pDATE_PLAN DATE, pCLIENT_NUMBER VARCHAR2,
    pCLIENT_DATE DATE, pINPUT_NUMBER VARCHAR2, pINPUT_DATE DATE, pBEGIN_DATE DATE,
	pFILIAL_ID NUMBER, pPLAT_ID NUMBER, pDOG_ID NUMBER,
	pPROD_ID_NPR VARCHAR2, pUSL_OPL_ID NUMBER, pLOAD_ABBR VARCHAR2, pSTAN_ID NUMBER,
	pVETKA_ID NUMBER, pPOLUCH_ID NUMBER, pPOTREB_ID NUMBER, pPOTREB_NAME VARCHAR2,
	pNEFTEBASA VARCHAR2, pPAYFORM_ID NUMBER, pPLANSTRU_ID NUMBER, pPRICE_CLIENT NUMBER,
	pPRICE NUMBER, pVES NUMBER, pKOL NUMBER, pSPEED_VES NUMBER, pSPEED_KOL NUMBER,
	pPRIM VARCHAR2, pGR4 VARCHAR2,pGOSPROG_ID NUMBER,pGP_NAPR_ID NUMBER,pLUKDOG_ID NUMBER) RETURN NUMBER;

  /* К отгрузке */
  FUNCTION ToLoadZakaz(pCOMMIT NUMBER, pZAKAZ_ID NUMBER, pIS_AUTO NUMBER, pINPUT_NUMBER VARCHAR2, pINPUT_DATE DATE, pBEGIN_DATE DATE, pPROD_ID_NPR VARCHAR2,
	pSTAN_ID NUMBER, pPOLUCH_ID NUMBER, pPOTREB_ID NUMBER, pPRICE NUMBER,
	pNOM_ZD VARCHAR2, pLOAD_VES NUMBER, pLOAD_KOL NUMBER, pSPEED_VES NUMBER, pSPEED_KOL NUMBER, pFACT_VES NUMBER, pFACT_KOL NUMBER,
	pGU12_A_ID NUMBER, pKOD_ISU VARCHAR2 DEFAULT '*') RETURN NUMBER;

  /* Подготовить график к заполнению */
  PROCEDURE FillGrafik(pZAKAZ_HIST_ID NUMBER);

  /* Очистить график */
  PROCEDURE EmptyGrafik;

  /* Добавить запись в график */
  PROCEDURE AddGrafik(pDATE_LOAD DATE, pTONN_LOAD NUMBER, pCIST_LOAD NUMBER);

  /* Удалить запись из графика */
  PROCEDURE DelGrafik(pDATE_LOAD DATE);

  /* Сохранить график */
  PROCEDURE SaveGrafik(pZAKAZ_HIST_ID NUMBER);

  -- Загрузка заказов потребителей из Паруса в Заказы потребителей в Master
  PROCEDURE LOAD_CONSORDS (DATE_BEG VARCHAR2,DATE_END VARCHAR2);

  -- Заполнить график из заказа на перевозку
  PROCEDURE FillGrafikFromGU (pPLAT_ID NUMBER, pPROD_GU12_ID VARCHAR2, pSTAN_ID NUMBER, pGU12_A_ID NUMBER);

  -- Максимальный номер позиции "К отгрузке"
  FUNCTION GetMaxNum(pZAKAZ_ID NUMBER) RETURN NUMBER;

  -- Проверка наличия заказа
  FUNCTION ZakazExist(pID IN OUT NUMBER, pIS_AUTO IN OUT NUMBER) RETURN BOOLEAN;

  -- Проверка наличия позиции заказа
  FUNCTION ZakazHistExist(pID IN OUT NUMBER, pIS_AUTO IN OUT NUMBER) RETURN BOOLEAN;

  /* ИНИЦИИРОВАТЬ ОБНОВЛЕНИЕ ЗАКАЗА */
  PROCEDURE RefreshZakazHist(pCOMMIT NUMBER, pID NUMBER, pIS_AUTO NUMBER DEFAULT 0);

  /* График в виде строки */
  FUNCTION GrafikToStr(pNOM_ZD VARCHAR2, pGRAFIK_TO DATE) RETURN VARCHAR2;

  /* Создать в заказе СНП позицию "К отгрузке", привязанную к уже имеющемуся непривязанному заказу УНП */
  PROCEDURE LinkSNPWithUNP(pSNP_ZAKAZ_ID NUMBER, pNOM_ZD VARCHAR2);

  PROCEDURE SetZakazLink(pID NUMBER,pLINK_ID NUMBER,pLINK_HIST_ID NUMBER);
  PROCEDURE SetZakazHistLink(pID NUMBER,pLINK_ID NUMBER,pLINK_HIST_ID NUMBER);
 
END; 
/

