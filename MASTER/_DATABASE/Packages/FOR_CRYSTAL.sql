--
-- FOR_CRYSTAL  (Package) 
--
CREATE OR REPLACE PACKAGE MASTER.For_Crystal AS

TYPE CURSTYPE IS REF CURSOR;

PROCEDURE CRYSTAL_SVED_GD(ASVEDNUM VARCHAR2, ANOMZD VARCHAR2,
  CRS IN OUT CURSTYPE);
PROCEDURE CRYSTAL_SVED_SAM(ASVEDNUM VARCHAR2, ANOMZD VARCHAR2,
  CRS IN OUT CURSTYPE);
PROCEDURE CRYSTAL_PASP(APASP_ID VARCHAR2, AMESTO_ID NUMBER,
  CRS IN OUT CURSTYPE);

PROCEDURE CR_DISP_COMMON(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_ROSINSP(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);
  
PROCEDURE CR_lukoma(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_FIN_PRED(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_DOG VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  CAT_CEN VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);
  
PROCEDURE CR_ISP_ZD(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_IVR_REP(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2,NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_LIST_ZAD_IN_NAR(ANARIAD_ID NUMBER,
  CRS IN OUT CURSTYPE);

PROCEDURE CR_KTU_UNP(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2,NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_NPR_CEN(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2,NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_SF_PRINT(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,DOG_ID VARCHAR2,
  NUM_SF1 VARCHAR2,NUM_SF2 VARCHAR2,
  CRS IN OUT CURSTYPE);

PROCEDURE CR_REZ_REPORT(DATE_BEG VARCHAR2,
  CRS IN OUT CURSTYPE);

PROCEDURE CR_CHECK_PRICES(ACAT_CEN VARCHAR2,
  CRS IN OUT CURSTYPE);

PROCEDURE CR_CHECK_SNP_SF(ACAT_CEN VARCHAR2,
  CRS IN OUT CURSTYPE);

PROCEDURE CR_GKH(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);
  
PROCEDURE CR_REG_POL(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, REGION_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_REGIONS(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, REGION_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_REG_14(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_REG_148(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_REG_1489(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);

PROCEDURE CR_REG_ALL(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE);
  
PROCEDURE CR_PLOTNOST(DATE_BEG VARCHAR2, DATE_END VARCHAR2, 
  CRS IN OUT CURSTYPE);

PROCEDURE CR_R3_BILLS(DATE_BEG VARCHAR2, DATE_END VARCHAR2, 
  IS_AGENT VARCHAR2, CRS IN OUT CURSTYPE);
  
END;

/

