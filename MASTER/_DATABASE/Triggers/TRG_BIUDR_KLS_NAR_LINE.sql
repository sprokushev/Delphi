--
-- TRG_BIUDR_KLS_NAR_LINE  (Trigger) 
--
CREATE OR REPLACE TRIGGER MASTER.TRG_BIUDR_KLS_NAR_LINE
BEFORE INSERT OR DELETE OR UPDATE
ON MASTER.KLS_NAR_LINE
FOR EACH ROW
DECLARE 
 vLOAD_TYPE_ID NUMBER;
 vNUM_NAR KLS_NARIAD.NUM_NAR%TYPE;
 vDATE_NAR KLS_NARIAD.DATE_NAR%TYPE;
 vID_GROUP_NPR KLS_PROD.ID_GROUP_NPR%TYPE;
BEGIN
  -- Данные о разрешении
  SELECT NUM_NAR,DATE_NAR INTO vNUM_NAR,vDATE_NAR
    FROM KLS_NARIAD
   WHERE ID=:NEW.NARIAD_ID;	

  -- Проверяем возможность отгрузки
  IF UPDATING() AND
     (NVL(:NEW.KOL,0)<NVL(:OLD.KOL,0) OR NVL(:NEW.FACT_KOL,0)>NVL(:OLD.FACT_KOL,0)) THEN 

    IF NVL(:NEW.KOL,0)<NVL(:NEW.FACT_KOL,0) THEN
      RAISE_APPLICATION_ERROR(For_Scripts.SG$NO_CORRECT, 
	    'Кол-во отгруженных вагонов по заданию '||:NEW.NOM_ZD||' ('||TO_CHAR(:NEW.FACT_KOL)||' в/ц) '||CHR(13)||' не должно превышать кол-во вагонов '||CHR(13)||'в разрешении на отгрузку № ' || TO_CHAR(vNUM_NAR) || ' от ' || TO_CHAR(vDATE_NAR,'dd.mm.yyyy') || ' ('||TO_CHAR(:NEW.KOL)||' в/ц)!'||CHR(10)||CHR(13));
	END IF;
  END IF;	  
	 
  IF UPDATING() AND
     (NVL(:NEW.VES,0)<NVL(:OLD.VES,0) OR NVL(:NEW.FACT_VES,0)>NVL(:OLD.FACT_VES,0)) THEN 

	-- Данные о заявке
    SELECT KLS_VID_OTGR.LOAD_TYPE_ID,KLS_PROD.ID_GROUP_NPR INTO vLOAD_TYPE_ID,vID_GROUP_NPR
      FROM MONTH,KLS_VID_OTGR,KLS_PROD
	 WHERE MONTH.NOM_ZD=:NEW.NOM_ZD
	   AND MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR
	   AND MONTH.PROD_ID_NPR=KLS_PROD.ID_NPR;
		 
    IF NVL(:NEW.VES,0)<(NVL(:OLD.FACT_VES,0)+FOR_SVED.GET_MIN_OSTAT_VES(vLOAD_TYPE_ID,vID_GROUP_NPR)) AND NVL(:NEW.VES,0)<NVL(:NEW.FACT_VES,0) THEN
      RAISE_APPLICATION_ERROR(For_Scripts.SG$NO_CORRECT, 
	    'Перегруз задания '||:NEW.NOM_ZD||' ('||TO_CHAR(:NEW.FACT_VES)||' тн) '||CHR(13)||'в разрешении на отгрузку № ' || TO_CHAR(vNUM_NAR) || ' от ' || TO_CHAR(vDATE_NAR,'dd.mm.yyyy') || ' ('||TO_CHAR(:NEW.VES)||' тн)!'||CHR(10)||CHR(13));
	END IF;
  END IF;


END;
/


