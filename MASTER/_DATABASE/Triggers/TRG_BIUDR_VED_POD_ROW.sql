--
-- TRG_BIUDR_VED_POD_ROW  (Trigger) 
--
CREATE OR REPLACE TRIGGER MASTER.TRG_BIUDR_VED_POD_ROW
BEFORE INSERT OR DELETE OR UPDATE
ON MASTER.VED_POD_ROW
FOR EACH ROW
DECLARE
 vLOAD_TYPE_ID VED_POD.LOAD_TYPE_ID%TYPE;
 vREESTR_ID REESTR.ID%TYPE;
 vSVED_NUM SVED.SVED_NUM%TYPE;
 vOTHER_POD_NUM VED_POD.POD_NUM%TYPE;
 vPOD_DATE VED_POD.POD_DATE%TYPE;
BEGIN
  -- Считываем значения из других таблиц
  BEGIN
	SELECT LOAD_TYPE_ID,POD_DATE INTO vLOAD_TYPE_ID,vPOD_DATE
	  FROM VED_POD
	 WHERE ID=:NEW.VED_POD_ID;
  EXCEPTION
    WHEN OTHERS THEN
	  vLOAD_TYPE_ID:=NULL;
	  vPOD_DATE:=NULL;
  END;

  BEGIN
	SELECT b.ID, a.SVED_NUM INTO vREESTR_ID, vSVED_NUM
	  FROM REESTR b, SVED a
	 WHERE b.SVED_ID=a.ID AND b.VED_POD_ROW_ID=:NEW.ID;
  EXCEPTION
    WHEN OTHERS THEN
	  vREESTR_ID:=NULL;
  END;

  -- Корректируем значения полей
  IF INSERTING() OR UPDATING('CAPACITY') THEN
	BEGIN
      :NEW.CAPACITY:=ORA_NUM_TO_CHAR(ora_char_to_num(:NEW.CAPACITY,'999.999'));
	EXCEPTION
	  WHEN OTHERS THEN
	    RAISE_APPLICATION_ERROR(For_Scripts.SG$NO_CORRECT, 'Неверное значение грузоподъемности!');
	END;
  END IF;

  IF UPDATING('NUM_CIST') AND vREESTR_ID IS NOT NULL THEN
    RAISE_APPLICATION_ERROR(For_Scripts.SG$NO_CORRECT, 'Нельзя изменить номер вагона в ведомости подачи! Вагон '||:OLD.NUM_CIST||' уже включен в сведение N '||TO_CHAR(vSVED_NUM));
  END IF;

  IF UPDATING('NUM_CIST') AND :NEW.VED_OSMOTR_ROW_ID IS NOT NULL THEN
    RAISE_APPLICATION_ERROR(For_Scripts.SG$NO_CORRECT, 'Нельзя изменить номер вагона в ведомости подачи! Вагон '||:OLD.NUM_CIST||' связан с ведомостью предварительного осмотра!');
  END IF;
  
  IF INSERTING() OR UPDATING('VES_CIST') THEN
    :NEW.VES_CIST:=NVL(:NEW.VES_CIST,0);
  END IF;

  IF INSERTING() OR UPDATING('NUM_CIST') THEN
    IF FOR_CIST.CHECK_NUM_CIST(:NEW.NUM_CIST, vLOAD_TYPE_ID, :NEW.VAGONTYPE_ID)=0 THEN
      :NEW.BAD_NUM:=1;
	ELSE
	  :NEW.BAD_NUM:=0;
	END IF;
	vOTHER_POD_NUM:=FOR_PODACHA.CHECK_UNIQ(vLOAD_TYPE_ID,:NEW.NUM_CIST,:NEW.ID,vPOD_DATE);
	IF vOTHER_POD_NUM||' '<>' ' THEN
      RAISE_APPLICATION_ERROR(For_Scripts.SG$NO_CORRECT, 'Вагон '||:NEW.NUM_CIST||' уже есть в ведомости подачи N '||TO_CHAR(vOTHER_POD_NUM));
	END IF;
  END IF;

  IF INSERTING() OR UPDATING('KALIBR_ID') OR UPDATING('VAGONTYPE_ID') THEN
    :NEW.KALIBR_ID:=NLS_UPPER(:NEW.KALIBR_ID);
	IF :NEW.KALIBR_ID='25A' THEN
	  :NEW.KALIBR_ID:='25А';
	END IF;
	IF :NEW.VAGONTYPE_ID IN (1,2,5,9) THEN
	  :NEW.KALIBR_ID:=FOR_CIST.GET_KALIBR_BY_VAGONTYPE(vLOAD_TYPE_ID, :NEW.VAGONTYPE_ID);
	END IF;
  END IF;

  IF INSERTING() OR UPDATING('KALIBR_ID') OR UPDATING('VZLIV') THEN
    :NEW.VOLUME:=FOR_CIST.GET_VOLUME(:NEW.KALIBR_ID, :NEW.VZLIV, vLOAD_TYPE_ID, :NEW.VAGONTYPE_ID);
  END IF;

  IF INSERTING() OR UPDATING('AXES') THEN
    IF vLOAD_TYPE_ID=1 AND :NEW.AXES NOT IN (4,8) THEN
	  :NEW.AXES:=4;
	END IF;
  END IF;

  IF INSERTING() OR UPDATING('ZPU_TYPE1') THEN
    :NEW.ZPU_TYPE1:=NVL(:NEW.ZPU_TYPE1,FOR_ENVIRONMENT.GET_ENV('MASTER','VARI','ZPU_TYPE1',FOR_INIT.GetCurrUser));
  END IF;
  IF INSERTING() OR UPDATING('ZPU_TYPE2') THEN
--    IF :NEW.AXES>4 THEN
      :NEW.ZPU_TYPE2:=NVL(:NEW.ZPU_TYPE2,FOR_ENVIRONMENT.GET_ENV('MASTER','VARI','ZPU_TYPE2',FOR_INIT.GetCurrUser));
--	END IF;
  END IF;


  -- Уникальный ID
  IF INSERTING() OR UPDATING('ID') THEN
    IF :new.ID=0 OR :new.ID IS NULL THEN
      SELECT SEQ_ID.nextval INTO :new.ID FROM DUAL;
    END IF;
  END IF;

END;
/


