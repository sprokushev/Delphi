--
-- TRG_AIUDR_VED_OSMOTR_ROW  (Trigger) 
--
CREATE OR REPLACE TRIGGER MASTER.TRG_AIUDR_VED_OSMOTR_ROW
AFTER INSERT OR DELETE OR UPDATE
ON MASTER.VED_OSMOTR_ROW
FOR EACH ROW
DECLARE
 vLOAD_TYPE_ID NUMBER;
BEGIN
  -- Обновляем кол-во и веса в заголовке документа
  IF INSERTING() THEN
    UPDATE VED_OSMOTR
	   SET KOL=NVL(KOL,0)+1
 	 WHERE ID=:NEW.VED_ID;
  END IF;
  IF DELETING() THEN
    UPDATE VED_OSMOTR
	   SET KOL=NVL(KOL,0)-1
	 WHERE ID=:OLD.VED_ID;
  END IF;
  IF UPDATING('VED_ID') THEN
    -- "минус" со старого
    UPDATE VED_OSMOTR
	   SET KOL=NVL(KOL,0)-1
	 WHERE ID=:OLD.VED_ID;
    -- "плюс" на новый
    UPDATE VED_OSMOTR
	   SET KOL=NVL(KOL,0)+1
	 WHERE ID=:NEW.VED_ID;
  END IF;

  -- Сохранить изменения в справочнике вагонов
  BEGIN
	SELECT LOAD_TYPE_ID INTO vLOAD_TYPE_ID
	  FROM VED_OSMOTR
	 WHERE ID=:NEW.VED_ID;
  EXCEPTION
    WHEN OTHERS THEN
	  vLOAD_TYPE_ID:=NULL;
  END;

  IF INSERTING() OR UPDATING('NUM_CIST') OR UPDATING('NCISTDOP') OR UPDATING('AXES') OR UPDATING('CAPACITY') OR 
     UPDATING('VES_CIST') OR UPDATING('VAGONTYPE_ID') OR UPDATING('KALIBR_ID') OR UPDATING('VAGOWNER_ID') OR UPDATING('PROD_ID_NPR') THEN
	FOR_CIST.ADD_CIST(0,:NEW.NUM_CIST,vLOAD_TYPE_ID,:NEW.VAGONTYPE_ID,:NEW.KALIBR_ID,'',:NEW.CAPACITY,'',:NEW.NCISTDOP,:NEW.AXES,:NEW.VES_CIST,:NEW.VAGOWNER_ID,:NEW.PROD_ID_NPR);
  END IF;

  IF INSERTING() OR UPDATING('RAZMET_PER') THEN
    IF :NEW.RAZMET_PER IS NOT NULL THEN
      UPDATE KLS_PROD_RAZMET SET RAZMET=NLS_UPPER(:NEW.RAZMET_PER) 
   	   WHERE RAZMET=NLS_UPPER(:NEW.RAZMET_PER);
	  IF SQL%NOTFOUND THEN
	    INSERT INTO KLS_PROD_RAZMET (RAZMET) VALUES (NLS_UPPER(:NEW.RAZMET_PER));
  	  END IF;
	END IF;     
  END IF;

END;
/


