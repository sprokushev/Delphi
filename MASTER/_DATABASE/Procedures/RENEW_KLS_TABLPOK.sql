--
-- RENEW_KLS_TABLPOK  (Procedure) 
--
CREATE OR REPLACE PROCEDURE MASTER.RENEW_KLS_TABLPOK (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
BEGIN
-- RETURN;
 UPDATE KLS_TABLPOK
    SET (NPP,SORTBY,NORMTU,DATEUPLOAD) =
	    (SELECT A.NPP,A.SORTBY,RTRIM(LTRIM(A.NORMTU || A.MNORMTU)),nvl(A.DATEUPLOAD,sysdate) FROM load_buffer.NTABLPOK A
		  WHERE A.KOD_NPR=KLS_TABLPOK.PROD_ID_NPR AND
		        A.KODIF_ID=KLS_TABLPOK.KODIF_ID)
  WHERE EXISTS (SELECT * FROM load_buffer.NTABLPOK B
                 where B.KOD_NPR=KLS_TABLPOK.PROD_ID_NPR AND
				       B.KODIF_ID=KLS_TABLPOK.KODIF_ID);

  COMMIT;

  INSERT INTO KLS_TABLPOK (PROD_ID_NPR,KODIF_ID,NPP,SORTBY,NORMTU,DATEUPLOAD)
    (SELECT C.KOD_NPR,C.KODIF_ID,C.NPP,C.SORTBY,RTRIM(LTRIM(C.NORMTU || C.MNORMTU)),NVL(C.DATEUPLOAD,sysdate) FROM load_buffer.NTABLPOK C
      WHERE not exists (SELECT * FROM KLS_TABLPOK
                 WHERE C.KOD_NPR=KLS_TABLPOK.PROD_ID_NPR AND
				       C.KODIF_ID=KLS_TABLPOK.KODIF_ID));

  COMMIT;

  DELETE FROM KLS_TABLPOK WHERE NOT EXISTS
    (SELECT * from load_buffer.NTABLPOK E WHERE E.KOD_NPR = KLS_TABLPOK.PROD_ID_NPR AND
	                                            E.KODIF_ID=KLS_TABLPOK.KODIF_ID);

  COMMIT;
END RENEW_KLS_TABLPOK;
/

