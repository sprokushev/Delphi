--
-- RENEW_KLS_NAR_LINE  (Procedure) 
--
CREATE OR REPLACE PROCEDURE MASTER.Renew_Kls_Nar_Line (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
BEGIN
 RETURN ;

 UPDATE KLS_NAR_LINE
    SET (VES,NOM_ZD,NARIAD_ID) =
	    (SELECT A.VES,A.NOM_ZD,A.ID_NARIAD FROM load_buffer.NAR_LINE A, load_buffer.NARIAD B
		  WHERE A.ID_NAR_LIN=KLS_NAR_LINE.ID AND A.ID_NARIAD=B.ID_NARIAD)
  WHERE IS_LOADED=1
    AND EXISTS (SELECT C.ID_NAR_LIN FROM load_buffer.NAR_LINE C, load_buffer.NARIAD D
                 WHERE C.ID_NAR_LIN=KLS_NAR_LINE.ID AND C.ID_NARIAD=D.ID_NARIAD);

  COMMIT;

  INSERT INTO KLS_NAR_LINE (ID,VES,NOM_ZD,NARIAD_ID,IS_LOADED)
    (SELECT A.ID_NAR_LIN,A.VES,A.NOM_ZD,A.ID_NARIAD,1 FROM load_buffer.NAR_LINE A, load_buffer.NARIAD B
      WHERE NOT EXISTS (SELECT NULL FROM KLS_NAR_LINE WHERE KLS_NAR_LINE.ID=A.ID_NAR_LIN AND IS_LOADED=1)
	    AND EXISTS (SELECT NULL FROM KLS_NARIAD WHERE KLS_NARIAD.ID=A.ID_NARIAD AND IS_LOADED=1)
	    AND A.ID_NARIAD=B.ID_NARIAD);
			
  COMMIT;
  

  DELETE FROM KLS_NAR_LINE WHERE IS_LOADED=1 AND NOT EXISTS (SELECT E.ID_NAR_LIN FROM load_buffer.NAR_LINE E WHERE E.ID_NAR_LIN = KLS_NAR_LINE.ID);

  COMMIT;
END Renew_Kls_Nar_Line;

/

