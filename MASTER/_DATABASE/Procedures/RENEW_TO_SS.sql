--
-- RENEW_TO_SS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE MASTER.Renew_to_ss (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  date_inc DATE;
BEGIN
return;

IF DATE_BEG>=TO_DATE('01.01.2005','dd.mm.yyyy') OR
   DATE_END>=TO_DATE('01.01.2005','dd.mm.yyyy')  THEN
  RETURN;
END IF;     

UPDATE master.TO_SS SET
  (NOM_SF, DATA_DOK, DATA_KVIT, SUMMA_DOK, NOM_DOG, DATA_DOG, K_USL, KOD_PLAT, PRIM,
   PRIZN_CEN, KATEG_PR, KOD_NFP, CENA_NFP, DATE_CEN, VES, KOD_ZATAR, CEN_ZATAR, SUM_ZATAR, NACENKA,
   SUM_NACEN, D_41, SUM_AKCIZ, D_191, D_67, D_441, D_442, D_443, D_194, CPEC_PROD, CPEC_TARIF,
   SUMMA_POR, TIP_OTGR, KOD_GROTP, KOD_POTR, KOD_STAN, KOD_GD, FIO_ISPOL, M_VS, OLD_SF, OLD_NOM,
   OLD_DATA, DATA_BUXG, WRITE, GR_DVZ, OGR_TAR, KOD_USL, KSOB_USL, SUM_NALIV, NDC_NAL20, NDC_NAL03,
   NDC_VN20, NDC_VN03, NDC_TR20, NDC_TR03, VID_OPL, KOL_DN, USL_PPZT, NDC_PPZT, CN_PPZT, KOD_OTGR,
   VES_KOM, KOM_V, NDS_KOM, NDF_KOM, CN_KOM, PATH, T_DATE, T_TIME, VES_NAL, MESTO, M_KORR, G_KORR,
   G_KORR4, K_VARPOST, VIDOG, DEN_SOD, NOM_ZD, NOM_ZV, UN_CODE, MOSC_OUT, KOD_POST, KOD_SOB, SOB_GD,
   TAX_SALE, PRICE_GET, SUM_PGET, NDS_PGET, GSM_PGET, M_SS, Y_SS, PR_DIVIDE, NUM_SS, BILL_POS, DOG_ID,DOP_TARIF, NDC_DOPTAR)
 = (SELECT NOM_SF, DATA_DOK, DATA_KVIT, SUMMA_DOK, NOM_DOG, DATA_DOG, K_USL, to_ss.KOD_PLAT, to_ss.PRIM,
     PRIZN_CEN, KATEG_PR, KOD_NFP, CENA_NFP, DATE_CEN, VES, KOD_ZATAR, CEN_ZATAR, SUM_ZATAR, NACENKA,
     SUM_NACEN, D_41, SUM_AKCIZ, D_191, D_67, D_441, D_442, D_443, D_194, CPEC_PROD, CPEC_TARIF,
     SUMMA_POR, TIP_OTGR, KOD_GROTP, KOD_POTR, KOD_STAN, KOD_GD, FIO_ISPOL, M_VS, OLD_SF, OLD_NOM,
     OLD_DATA, DATA_BUXG, WRITE, GR_DVZ, OGR_TAR, KOD_USL, KSOB_USL, SUM_NALIV, NDC_NAL20, NDC_NAL03,
     NDC_VN20, NDC_VN03, NDC_TR20, NDC_TR03, VID_OPL, KOL_DN, USL_PPZT, NDC_PPZT, CN_PPZT, KOD_OTGR,
     VES_KOM, KOM_V, NDS_KOM, NDF_KOM, CN_KOM, PATH, T_DATE, T_TIME, VES_NAL, MESTO, M_KORR, G_KORR,
     G_KORR4, K_VARPOST, VIDOG, DEN_SOD, NOM_ZD, NOM_ZV, UN_CODE, MOSC_OUT, KOD_POST, KOD_SOB, SOB_GD,
     TAX_SALE, PRICE_GET, SUM_PGET, NDS_PGET, GSM_PGET, M_SS, Y_SS, PR_DIVIDE, NUM_SS, BILL_POS, DOG.ID,DOP_TARIF, NDC_DOPTAR
    FROM load_buffer.to_ss,load_buffer.dog WHERE to_ss.NOM_DOK=master.to_ss.NOM_DOK AND TO_SS.nom_dog=dog.NUM_DOG)
WHERE EXISTS (SELECT to_ss.NOM_DOK FROM load_buffer.to_ss,load_buffer.dog WHERE to_ss.NOM_DOK=master.to_ss.NOM_DOK AND TO_SS.nom_dog=dog.NUM_DOG);

COMMIT;


INSERT  INTO master.TO_SS
     (NOM_DOK,NOM_SF, DATA_DOK, DATA_KVIT, SUMMA_DOK, NOM_DOG, DATA_DOG, K_USL, KOD_PLAT, PRIM,
      PRIZN_CEN, KATEG_PR, KOD_NFP, CENA_NFP, DATE_CEN, VES, KOD_ZATAR, CEN_ZATAR, SUM_ZATAR, NACENKA,
      SUM_NACEN, D_41, SUM_AKCIZ, D_191, D_67, D_441, D_442, D_443, D_194, CPEC_PROD, CPEC_TARIF,
      SUMMA_POR, TIP_OTGR, KOD_GROTP, KOD_POTR, KOD_STAN, KOD_GD, FIO_ISPOL, M_VS, OLD_SF, OLD_NOM,
      OLD_DATA, DATA_BUXG, WRITE, GR_DVZ, OGR_TAR, KOD_USL, KSOB_USL, SUM_NALIV, NDC_NAL20, NDC_NAL03,
      NDC_VN20, NDC_VN03, NDC_TR20, NDC_TR03, VID_OPL, KOL_DN, USL_PPZT, NDC_PPZT, CN_PPZT, KOD_OTGR,
      VES_KOM, KOM_V, NDS_KOM, NDF_KOM, CN_KOM, PATH, T_DATE, T_TIME, VES_NAL, MESTO, M_KORR, G_KORR,
      G_KORR4, K_VARPOST, VIDOG, DEN_SOD, NOM_ZD, NOM_ZV, UN_CODE, MOSC_OUT, KOD_POST, KOD_SOB, SOB_GD,
      TAX_SALE, PRICE_GET, SUM_PGET, NDS_PGET, GSM_PGET, M_SS, Y_SS, PR_DIVIDE, NUM_SS, BILL_POS, DOG_ID,DOP_TARIF, NDC_DOPTAR)
     (SELECT NOM_DOK,NOM_SF, DATA_DOK, DATA_KVIT, SUMMA_DOK, NOM_DOG, DATA_DOG, K_USL, to_ss.KOD_PLAT, to_ss.PRIM,
          PRIZN_CEN, KATEG_PR, KOD_NFP, CENA_NFP, DATE_CEN, VES, KOD_ZATAR, CEN_ZATAR, SUM_ZATAR, NACENKA,
          SUM_NACEN, D_41, SUM_AKCIZ, D_191, D_67, D_441, D_442, D_443, D_194, CPEC_PROD, CPEC_TARIF,
          SUMMA_POR, TIP_OTGR, KOD_GROTP, KOD_POTR, KOD_STAN, KOD_GD, FIO_ISPOL, M_VS, OLD_SF, OLD_NOM,
          OLD_DATA, DATA_BUXG, WRITE, GR_DVZ, OGR_TAR, KOD_USL, KSOB_USL, SUM_NALIV, NDC_NAL20, NDC_NAL03,
          NDC_VN20, NDC_VN03, NDC_TR20, NDC_TR03, VID_OPL, KOL_DN, USL_PPZT, NDC_PPZT, CN_PPZT, KOD_OTGR,
          VES_KOM, KOM_V, NDS_KOM, NDF_KOM, CN_KOM, PATH, T_DATE, T_TIME, VES_NAL, MESTO, M_KORR, G_KORR,
          G_KORR4, K_VARPOST, VIDOG, DEN_SOD, NOM_ZD, NOM_ZV, UN_CODE, MOSC_OUT, KOD_POST, KOD_SOB, SOB_GD,
          TAX_SALE, PRICE_GET, SUM_PGET, NDS_PGET, GSM_PGET, M_SS, Y_SS, PR_DIVIDE, NUM_SS, BILL_POS, DOG.ID,DOP_TARIF, NDC_DOPTAR
        FROM load_buffer.to_ss, load_buffer.dog WHERE TO_SS.nom_dog=dog.NUM_DOG
         AND NOT EXISTS (SELECT master.to_ss.NOM_DOK FROM master.to_ss WHERE master.to_ss.NOM_DOK=load_buffer.to_ss.NOM_DOK));

COMMIT;

DELETE FROM master.TO_SS A WHERE
    NOT EXISTS (SELECT k.NOM_DOK FROM load_buffer.to_ss k WHERE k.NOM_DOK = A.NOM_DOK) ;

COMMIT;

END Renew_TO_SS;
/

