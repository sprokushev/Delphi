--
-- RENEW_USL_DOG  (Procedure) 
--
CREATE OR REPLACE PROCEDURE MASTER.Renew_Usl_Dog (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
BEGIN

  UPDATE USL_DOG
    SET (USL_NUMBER, PROC_PRED, USL_UTV, USL_BAZ, USL_AKT, PROC_PENI, USL_BEGIN_DATE, PROC_INSURE,
		 NEUST, USL_NAME, PAYDELAY_DATE, USL_SUM, KOL_DN, USL_END_DATE, PAYDELAY_ID, PAYFORM_ID,
		 DOG_ID, CAT_CEN_ID, VID_USL_ID, ID, NPOCAT_CEN_ID,R3_NUM_ISP,USL_SUM_AREND)
 	 = (SELECT A.K_USL, A.PROC_PRED, A.P_UT, A.P_BAZ, A.P_AKT, A.PROC_PENI, A.DATE_BEGIN, A.PROC_ST,
	    A.NEUST2, A.NM_USL, A.D_OTSR,  A.US_T, A.KOL_DAYS, A.DATE_END, A.P_OTSR, A.K_FOPL,
		B.ID, A.KATEG_CEN, A.K_US_T, A.ID, A.KAT_CENNPO, A.R3_NAPR,A.US_T_AREND FROM load_buffer.u_dog A, load_buffer.v_dog_2009 B
		WHERE A.N_DOG = B.NUM_DOG AND a.k_usl=USL_DOG.USL_NUMBER AND B.ID=USL_DOG.DOG_ID)
	WHERE EXISTS (SELECT * FROM load_buffer.u_dog A, load_buffer.v_dog_2009 B WHERE A.K_USL = USL_DOG.USL_NUMBER AND B.ID=USL_DOG.DOG_ID AND A.N_DOG = B.NUM_DOG);

  COMMIT;

  INSERT INTO USL_DOG (USL_NUMBER, PROC_PRED, USL_UTV, USL_BAZ, USL_AKT, PROC_PENI, USL_BEGIN_DATE, PROC_INSURE,
		 NEUST, USL_NAME, PAYDELAY_DATE, USL_SUM, KOL_DN, USL_END_DATE, PAYDELAY_ID, PAYFORM_ID,
		 DOG_ID, CAT_CEN_ID, VID_USL_ID, ID, NPOCAT_CEN_ID,R3_NUM_ISP,USL_SUM_AREND)
   (SELECT C.K_USL, C.PROC_PRED, C.P_UT, C.P_BAZ, C.P_AKT, C.PROC_PENI, C.DATE_BEGIN, C.PROC_ST,
           C.NEUST2, C.NM_USL, C.D_OTSR,  C.US_T, C.KOL_DAYS, C.DATE_END, C.P_OTSR, C.K_FOPL,
           D.ID, C.KATEG_CEN, C.K_US_T, C.ID, c.KAT_CENNPO,C.R3_NAPR,C.US_T_AREND FROM load_buffer.u_dog C, load_buffer.v_dog_2009 D
     WHERE C.N_DOG = D.NUM_DOG AND
		NOT EXISTS (SELECT USL_DOG.USL_NUMBER, USL_DOG.DOG_ID FROM USL_DOG WHERE C.K_USL = USL_DOG.USL_NUMBER AND D.ID=USL_DOG.DOG_ID));

  COMMIT;
  
  UPDATE USL_DOG
    SET (USL_NUMBER, PROC_PRED, USL_UTV, USL_BAZ, USL_AKT, PROC_PENI, USL_BEGIN_DATE, PROC_INSURE,
		 NEUST, USL_NAME, PAYDELAY_DATE, USL_SUM, KOL_DN, USL_END_DATE, PAYDELAY_ID, PAYFORM_ID,
		 DOG_ID, CAT_CEN_ID, VID_USL_ID, ID, NPOCAT_CEN_ID,R3_NUM_ISP,USL_SUM_AREND)
 	 = (SELECT A.K_USL, A.PROC_PRED, A.P_UT, A.P_BAZ, A.P_AKT, A.PROC_PENI, A.DATE_BEGIN, A.PROC_ST,
	    A.NEUST2, A.NM_USL, A.D_OTSR,  A.US_T, A.KOL_DAYS, A.DATE_END, A.P_OTSR, A.K_FOPL,
		B.ID, A.KATEG_CEN, A.K_US_T, 100000+A.ID, A.KAT_CENNPO, A.R3_NAPR,A.US_T_AREND 
        FROM load_buffer.u_dog A, load_buffer.v_dog_2009 B
		WHERE '.'||A.N_DOG = B.NUM_DOG AND a.k_usl=USL_DOG.USL_NUMBER AND B.ID=USL_DOG.DOG_ID)
	WHERE EXISTS (SELECT * FROM load_buffer.u_dog A, load_buffer.v_dog_2009 B 
               WHERE A.K_USL = USL_DOG.USL_NUMBER AND B.ID=USL_DOG.DOG_ID AND '.'||A.N_DOG = B.NUM_DOG);

  COMMIT;

  INSERT INTO USL_DOG (USL_NUMBER, PROC_PRED, USL_UTV, USL_BAZ, USL_AKT, PROC_PENI, USL_BEGIN_DATE, PROC_INSURE,
		 NEUST, USL_NAME, PAYDELAY_DATE, USL_SUM, KOL_DN, USL_END_DATE, PAYDELAY_ID, PAYFORM_ID,
		 DOG_ID, CAT_CEN_ID, VID_USL_ID, ID, NPOCAT_CEN_ID,R3_NUM_ISP,USL_SUM_AREND)
   (SELECT C.K_USL, C.PROC_PRED, C.P_UT, C.P_BAZ, C.P_AKT, C.PROC_PENI, C.DATE_BEGIN, C.PROC_ST,
           C.NEUST2, C.NM_USL, C.D_OTSR,  C.US_T, C.KOL_DAYS, C.DATE_END, C.P_OTSR, C.K_FOPL,
           D.ID, C.KATEG_CEN, C.K_US_T, 100000+C.ID, c.KAT_CENNPO,C.R3_NAPR,C.US_T_AREND FROM load_buffer.u_dog C, load_buffer.v_dog_2009 D
     WHERE '.'||C.N_DOG = D.NUM_DOG AND
		NOT EXISTS (SELECT USL_DOG.USL_NUMBER, USL_DOG.DOG_ID FROM USL_DOG WHERE C.K_USL = USL_DOG.USL_NUMBER AND D.ID=USL_DOG.DOG_ID));

  COMMIT;

  --- Добавить базовые условия для договоров без условий 
  INSERT INTO USL_DOG (USL_NUMBER, PROC_PRED, USL_UTV, USL_BAZ, USL_AKT, PROC_PENI, USL_BEGIN_DATE, PROC_INSURE,
		 NEUST, USL_NAME, PAYDELAY_DATE, USL_SUM, KOL_DN, USL_END_DATE, PAYDELAY_ID, PAYFORM_ID,
		 DOG_ID, CAT_CEN_ID, VID_USL_ID, ID, NPOCAT_CEN_ID)
   (SELECT 1, D.PROC_PRED, 0, 1, 0, D.PROC_PENI, D.DATE_BEGIN, D.PROC_ST,
           D.NEUST2, 'БАЗОВОЕ УСЛОВИЕ', NULL,  0, NVL(UO.KOL_DN,D.KOL_DAYS), D.DATE_END, 1, 10,
           D.ID, D.KATEG_CEN, 0, 600000+D.ID, 999 
           FROM load_buffer.v_dog_2009 D, KLS_USL_OPL UO
     WHERE D.KOD_OPL=UO.ID(+) AND NOT EXISTS (SELECT USL_DOG.ID FROM USL_DOG WHERE D.ID=USL_DOG.DOG_ID AND 1=USL_DOG.USL_NUMBER));

  COMMIT;	  
---  DELETE FROM usl_dog WHERE NOT EXISTS (SELECT E.K_USL, F.ID from load_buffer.u_dog E, load_buffer.dog F
---    WHERE E.K_USL = usl_dog.USL_NUMBER AND F.ID=usl_dog.DOG_ID);
  UPDATE USL_DOG SET NPOCAT_CEN_ID=999 WHERE NPOCAT_CEN_ID=0; 
  COMMIT;
END Renew_Usl_Dog; 
/

