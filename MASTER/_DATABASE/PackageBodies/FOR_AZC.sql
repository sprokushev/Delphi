--
-- FOR_AZC  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_Azc AS

FUNCTION GET_AZC_OST_VES(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pSOBSTV_ID NUMBER,  pDATE_OPER DATE DEFAULT SYSDATE, FIRST_DAY NUMBER DEFAULT 1) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  IF pSOBSTV_ID IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER);
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;
  
  IF  v_lastost = pDate_oper OR  v_lastost = pDate_oper-1 THEN
  v_lastost:=v_lastost;
  ELSE
  v_lastost:=TRUNC(v_lastost,'MONTH');
  END IF; 


  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT SUM(VES) INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  IF FIRST_DAY=0 THEN 
    RETURN NVL(v_ost,0);
  END IF;
  
  -- Приход и расход
  v_prih_rash:=0;
  IF v_lastost<=pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VES,2,-A.VES,0)) INTO v_prih_rash 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
  	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
	     AND A.SOBSTV_ID=pSOBSTV_ID
	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2)
	     AND A.DATE_OPER>=v_lastost
	     AND A.DATE_OPER<=pDATE_OPER;
  END IF;   		 

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;

FUNCTION GET_AZC_OST_VOL(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pSOBSTV_ID NUMBER, pDATE_OPER DATE DEFAULT SYSDATE,FIRST_DAY NUMBER DEFAULT 1) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  IF pSOBSTV_ID IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER);
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;
  IF  v_lastost = pDate_oper  OR  v_lastost = pDate_oper-1 THEN
  v_lastost:=v_lastost;
  ELSE
  v_lastost:=TRUNC(v_lastost,'MONTH');
  END IF; 

  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT SUM(VOLUME) INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  IF FIRST_DAY=0 THEN 
    RETURN NVL(v_ost,0);
  END IF;
  
  -- Приход и расход
  v_prih_rash:=0;
  IF v_lastost<=pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VOLUME,2,-A.VOLUME,0)) INTO v_prih_rash 
     FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
       AND (B.KIND_OPER=1 OR B.KIND_OPER=2)
	   AND A.DATE_OPER>=v_lastost
	   AND A.DATE_OPER<=pDATE_OPER;
  END IF;	   

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;

FUNCTION GET_AZC_HRAN_VES(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pSOBSTV_ID NUMBER, pDATE_OPER DATE DEFAULT SYSDATE,FIRST_DAY NUMBER DEFAULT 1) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih NUMBER;
  v_rash NUMBER;  
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  IF pSOBSTV_ID IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER)
	   AND B.KIND_OPER=3;
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT VES INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=3
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  IF FIRST_DAY=0 THEN 
  	 RETURN NVL(v_ost,0)+NVL(v_prih,0)-NVL(v_rash,0);
  END IF;

  
  -- Приход
  SELECT SUM(A.VES) INTO v_prih 
     FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=4
	   AND A.DATE_OPER>=v_lastost
	   AND A.DATE_OPER<=pDATE_OPER;

  -- Расход
  SELECT SUM(A.VES) INTO v_rash 
     FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=5
	   AND A.DATE_OPER>=v_lastost
	   AND A.DATE_OPER<=pDATE_OPER;

  RETURN NVL(v_ost,0)+NVL(v_prih,0)-NVL(v_rash,0);	   	     			
END;

FUNCTION GET_AZC_HRAN_VOL(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pSOBSTV_ID NUMBER, pDATE_OPER DATE DEFAULT SYSDATE,FIRST_DAY NUMBER DEFAULT 1) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih NUMBER;
  v_rash NUMBER;  
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  IF pSOBSTV_ID IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER)
	   AND B.KIND_OPER=3;
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT VOLUME INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=3
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  IF FIRST_DAY=0 THEN 
  	 RETURN NVL(v_ost,0)+NVL(v_prih,0)-NVL(v_rash,0);
  END IF;
  
  -- Приход
  SELECT SUM(A.VOLUME) INTO v_prih 
     FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=4
	   AND A.DATE_OPER>=v_lastost
	   AND A.DATE_OPER<=pDATE_OPER;

  -- Расход
  SELECT SUM(A.VOLUME) INTO v_rash 
     FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=5
	   AND A.DATE_OPER>=v_lastost
	   AND A.DATE_OPER<=pDATE_OPER;

  RETURN NVL(v_ost,0)+NVL(v_prih,0)-NVL(v_rash,0);	   	     			
END;

FUNCTION GET_AZC_OST_VES_all(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE_OPER DATE DEFAULT SYSDATE) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	


  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER)
	   AND B.KIND_OPER=0;
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT SUM(VES) INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  -- Приход - Расход
  v_prih_rash:=0;
  IF v_lastost<pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VES,2,-A.VES,0)) INTO v_prih_rash 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
  	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2) 
	     AND A.DATE_OPER>v_lastost
	     AND A.DATE_OPER<=pDATE_OPER;
  END IF;		 

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;

FUNCTION GET_AZC_OST_VOL_ALL(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE_OPER DATE DEFAULT SYSDATE) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER);
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT SUM(VOLUME) INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  -- Приход - Расход
  v_prih_rash:=0;
  IF v_lastost<pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VOLUME,2,-A.VOLUME,0)) INTO v_prih_rash 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
  	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2)
	     AND A.DATE_OPER>v_lastost
	     AND A.DATE_OPER<=pDATE_OPER;
  END IF;		 

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;

-- по продукту, типу собственника (АЗС), вес/обхем
FUNCTION get_azc_ost_allv (pPROD_ID VARCHAR2, pID_KIND_ORG NUMBER, pID_SOBSTV NUMBER,pTYPE VARCHAR2, pDATE_OPER DATE DEFAULT SYSDATE) RETURN NUMBER IS
  v_datefirst DATE;
  v_itog NUMBER;
    
BEGIN
  IF pPROD_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pID_SOBSTV  IS NULL THEN
    RETURN 0;
  END IF;	

  IF pID_KIND_ORG IS NULL THEN
    RETURN 0;
  END IF;	
  
  IF pTYPE NOT IN ('VES', 'VOL') THEN
   RETURN 0;
  END IF;
  
  
SELECT TRUNC (pDATE_OPER, 'MONTH') INTO v_datefirst FROM DUAL;
BEGIN 
	SELECT SUM( DECODE(pTYPE, 'VES', ves, 'VOL', vol, vol)) INTO v_itog FROM 
	(SELECT  A.PROD_ID_NPR,C.ABBR_NPR, A.SOBSTV_ID,e.ID AS ID_KIND_ORG, E.NAME,B.ID,
	For_Azc.GET_AZC_OST_VES(A.ORG_STRU_ID, A.PROD_ID_NPR,A.SOBSTV_ID, pDATE_OPER)  AS VES,
	For_Azc.GET_AZC_OST_VOL(A.ORG_STRU_ID, A.PROD_ID_NPR,A.SOBSTV_ID, pDATE_OPER) AS VOL
	FROM AZC_OPERATION A, ORG_STRUCTURE B, KLS_PROD C, AZC_PROD_GROUP D, KLS_ORG_KIND E
	WHERE A.DATE_OPER >=v_datefirst
	AND A.DATE_OPER <=pDATE_OPER
	AND A.ORG_STRU_ID = B.ID 
	AND C.ID_NPR = A.PROD_ID_NPR
	AND A.PROD_ID_NPR = pPROD_ID 
	AND A.SOBSTV_ID = pID_SOBSTV
	AND B.ORG_KIND_ID = E.ID
	GROUP BY A.ORG_STRU_ID,A.PROD_ID_NPR,C.ABBR_NPR,A.SOBSTV_ID,E.ID,E.NAME,B.ID) JJ
	WHERE ID_KIND_ORG=pID_KIND_ORG
	GROUP BY  id_kind_org, NAME, PROD_ID_NPR,ABBR_NPR;
END;

  RETURN v_itog;   	     			
END; 

FUNCTION get_vol_rez(pID_ORG VARCHAR2, pID_PROD NUMBER, pTYPE VARCHAR2 DEFAULT 'DEAD', pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
v_itog NUMBER;
v_date DATE;
BEGIN
  IF pID_ORG IS NULL THEN
    RETURN 0;
  END IF;	

  IF pID_PROD  IS NULL THEN
    RETURN 0;
  END IF;	

 SELECT MAX(DATEUPLOAD) INTO v_date
 FROM ARC_REZ B
 WHERE 
 B.ORG_STRU_ID = pID_ORG
 AND B.PROD_ID_NPR = pID_PROD
 AND B.DATEUPLOAD<=pDATE;

SELECT SUM (DECODE (pTYPE, 'VOL', VOL, 'DEAD', DEAD_VOL, 'VOL')) INTO v_itog  
FROM ARC_REZ B
WHERE 
B.DATEUPLOAD = v_date
AND B.PROD_ID_NPR = pID_PROD
AND B.ORG_STRU_ID = pID_ORG;
RETURN v_itog;

END;


PROCEDURE for_rec_ostatki (DATE_FROM DATE, DATE_TO DATE)  IS
CURSOR c1 IS
SELECT
For_Azc.GET_AZC_OST_VOL( select_.ORG_STRU_ID,select_.PROD_ID_NPR,select_.SOBSTV_ID, LAST_DAY(DATE_FROM)) AS VOL,
For_Azc.GET_AZC_OST_VES (select_.ORG_STRU_ID,select_.PROD_ID_NPR,select_.SOBSTV_ID, LAST_DAY(DATE_FROM)) AS VES,
select_.PROD_ID_NPR,select_.SOBSTV_ID, select_.ORG_STRU_ID
FROM
(SELECT SOBSTV_ID, ORG_STRU_ID, PROD_ID_NPR FROM AZC_OPERATION WHERE
AZC_OPERATION.DATE_OPER >=	TRUNC (DATE_FROM, 'MONTH')
AND AZC_OPERATION.DATE_OPER <= LAST_DAY(DATE_FROM)
GROUP BY SOBSTV_ID, ORG_STRU_ID, PROD_ID_NPR) select_,
ORG_RELATIONS B
WHERE 
B.ORG_STRU_1_ID = select_.org_stru_id
AND B.ORG_STRU_2_ID = 31
ORDER BY select_.SOBSTV_ID, select_.ORG_STRU_ID,select_.PROD_ID_NPR;
VOLUME_ AZC_OPERATION.VOLUME%TYPE;
VES_ AZC_OPERATION.VES%TYPE;
PROD_ID_NPR_  AZC_OPERATION.PROD_ID_NPR%TYPE;
SOBSTV_ID_  AZC_OPERATION.SOBSTV_ID%TYPE;
ORG_STRU_ID_  AZC_OPERATION.ORG_STRU_ID%TYPE;
COUNT_VAR NUMBER;
BEGIN
OPEN c1;
LOOP
FETCH c1 INTO VOLUME_ ,VES_,PROD_ID_NPR_ ,SOBSTV_ID_,ORG_STRU_ID_;
EXIT WHEN c1%NOTFOUND;
SELECT COUNT (A.ID) INTO COUNT_VAR 
FROM AZC_OPERATION A WHERE 
A.SOBSTV_ID = SOBSTV_ID_
AND A.PROD_ID_NPR = PROD_ID_NPR_
AND A.ORG_STRU_ID = ORG_STRU_ID_
AND A.TYPE_OPER_ID = 3
AND A.DATE_INTO>=TRUNC(SYSDATE, 'MONTH');
IF COUNT_VAR<1 THEN 
INSERT  INTO AZC_OPERATION (DATE_OPER, VOLUME, VES, TYPE_OPER_ID,PROD_ID_NPR, SOBSTV_ID, ORG_STRU_ID, PLACE_SEND_ID) VALUES
( TRUNC(DATE_TO, 'MONTH'), VOLUME_ ,VES_, 3 ,PROD_ID_NPR_ ,SOBSTV_ID_, ORG_STRU_ID_, 1);
COMMIT;
END IF;
END LOOP;
CLOSE c1;
END for_rec_ostatki ;


FUNCTION get_ves_last(pID_SOBSTV NUMBER, pID_ORG NUMBER, pID_PROD NUMBER,pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
v_datefirst DATE;
v_lastdate DATE;
v_ves NUMBER;
BEGIN

  IF pID_SOBSTV IS NULL THEN
    RETURN 0;
  END IF;	

  IF pID_ORG  IS NULL THEN
    RETURN 0;
  END IF;
  
  IF pID_PROD  IS NULL THEN
    RETURN 0;
  END IF;
  
  SELECT TRUNC (pDATE, 'MONTH') INTO v_datefirst FROM DUAL;
 
  SELECT MAX(A.DATE_OPER) INTO v_lastdate
	   FROM AZC_OPERATION A	
	   WHERE A.ORG_STRU_ID=pID_ORG
	   AND A.PROD_ID_NPR=pID_PROD
	   AND A.SOBSTV_ID=pID_SOBSTV
	   AND A.DATE_OPER>=v_datefirst
	   AND A.DATE_OPER<=pDate;
	   
  SELECT A.VES INTO v_ves
    FROM AZC_OPERATION A
	WHERE A.ORG_STRU_ID=pID_ORG
	   AND A.PROD_ID_NPR=pID_PROD
	   AND A.SOBSTV_ID=pID_SOBSTV
	   AND A.DATE_OPER = v_lastdate;

RETURN v_ves;
  
END;

PROCEDURE for_rec_catalog (DATE_TO DATE)  IS
CURSOR c1 IS SELECT A.IS_ROOT,a.ORG_STRU_1_ID  FROM ORG_RELATIONS A;
IS_NUM_ NUMBER;
id_ ORG_RELATIONS.ORG_STRU_1_ID%TYPE;
is_root NUMBER;
BEGIN
OPEN c1;
LOOP
FETCH c1 INTO is_root, Id_;
EXIT WHEN c1%NOTFOUND;
SELECT (COUNT (B.ORG_STRU_1_ID)) INTO IS_NUM_ FROM ORG_RELATIONS B 
WHERE b.ORG_STRU_2_ID=Id_;
UPDATE ORG_RELATIONS SET is_root=DECODE(is_num_,0,0,1)
WHERE ORG_RELATIONS.ORG_STRU_1_ID=id_;
END LOOP;
COMMIT;
CLOSE c1;
END for_rec_catalog;


FUNCTION GET_AZC_WEEK_PARUS(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pID_OPERATION NUMBER,pDateFirst DATE, pDateLast DATE DEFAULT SYSDATE) RETURN NUMBER IS
  v_ves NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  IF pID_OPERATION IS NULL THEN
    RETURN 0;
 END IF;
	
  IF pDateFirst IS NULL THEN
    RETURN 0;
  END IF;	

SELECT  SUM (A.VES) INTO v_ves  
FROM AZC_OPERATION A 
WHERE
A.DATE_OPER>= pDateFirst
AND A.DATE_OPER<=PDateLast
AND A.PROD_ID_NPR = pPROD_ID_NPR
AND A.TYPE_OPER_ID = pID_OPERATION
AND a.ORG_STRU_ID = pORG_STRU_ID;
IF v_ves IS NULL 
THEN v_ves:=0;
END IF;
RETURN v_ves;	   	     			
END;

-----
PROCEDURE for_week_parus (DATE_FROM VARCHAR2, DATE_TO VARCHAR2)  IS

vDATE_FROM DATE;
vDATE_TO DATE;

CURSOR c1 IS 
SELECT A.ORG_STRU_ID,C.GROUP_KIND_ID ,A.PROD_ID_NPR
FROM AZC_OPERATION A, ORG_STRUCTURE B , KLS_ORG_KIND C
WHERE 
A.date_oper<=vDATE_TO
AND A.date_oper>=vDATE_FROM
AND A.ORG_STRU_ID = B.ID
AND B.ORG_KIND_ID = C.ID
GROUP BY A.ORG_STRU_ID,C.GROUP_KIND_ID,A.PROD_ID_NPR;
--===========================
c_org_stru_id AZC_OPERATION.ORG_STRU_ID%TYPE;
c_prod_id_npr AZC_OPERATION.PROD_ID_NPR%TYPE;
c_org_kind_id ORG_STRUCTURE.ORG_KIND_ID%TYPE;
ostatok_ AZC_OPERATION.VES%TYPE;
q_realiz_AZC_sum NUMERIC;
q_realiz_opt_sum NUMERIC;
q_realiz NUMERIC;
ostatok NUMERIC;
BEGIN

vDATE_TO:=TO_DATE(DATE_TO,'dd.mm.yyyy');
vDATE_FROM:=TO_DATE(DATE_FROM,'dd.mm.yyyy');
 
DELETE FROM AZC_WEEK_PARUS;
COMMIT;
q_realiz_opt_sum:=0;
q_realiz_azc_sum:=0;
OPEN c1;
LOOP
FETCH c1 INTO c_org_stru_id , c_org_kind_id, c_prod_id_npr;
EXIT WHEN c1%NOTFOUND;
-- остатки
SELECT For_Azc.GET_AZC_OST_VES( c_org_stru_id, c_prod_id_npr,1,vDATE_TO+1) INTO ostatok FROM dual;
--реализация в разрезе АЗС
IF c_org_kind_id = 2 THEN
SELECT For_Azc.GET_AZC_WEEK_PARUS(c_org_stru_id, c_prod_id_npr, 1, vDATE_FROM, vDATE_TO) INTO q_realiz FROM dual;
q_realiz_AZC_sum:=q_realiz_AZC_sum+q_realiz;
END IF;
-------------------------
--реализация в разрезе оптовых поставок
IF c_org_kind_id <> 2 THEN
--SELECT For_Azc.GET_AZC_WEEK_PARUS(c_org_stru_id, c_prod_id_npr, 4, vDATE_FROM, vDATE_TO) INTO q_realiz FROM dual;
--q_realiz_opt_sum:=q_realiz+q_realiz_opt_sum;
SELECT For_Azc.GET_AZC_WEEK_PARUS(c_org_stru_id, c_prod_id_npr, 1, vDATE_FROM, vDATE_TO) INTO q_realiz FROM dual;
q_realiz_opt_sum:=q_realiz+q_realiz_opt_sum;
END IF;
INSERT INTO AZC_WEEK_PARUS (ID_ORG, ID_PROD, ALL_VES, REALIZ_VES, OSTATOK) VALUES
( c_org_stru_id, c_prod_id_npr,q_realiz_opt_sum+q_realiz_azc_sum, q_realiz_azc_sum,ostatok);
COMMIT;
q_realiz_opt_sum:=0;
q_realiz_azc_sum:=0;
END LOOP;
CLOSE c1;
END for_week_parus;


FUNCTION GET_AZC_OST_VES_EX(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pSOBSTV_ID NUMBER,  pDATE_OPER DATE DEFAULT SYSDATE, FIRST_DAY NUMBER DEFAULT 1) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  IF pSOBSTV_ID IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER);
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT SUM(VES) INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  IF FIRST_DAY=0 THEN 
    RETURN NVL(v_ost,0);
  END IF;
  
  -- Приход и расход
  v_prih_rash:=0;
  IF v_lastost<=pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VES,2,-A.VES,0)) INTO v_prih_rash 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
  	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
	     AND A.SOBSTV_ID=pSOBSTV_ID
	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2)
	     AND A.DATE_OPER>=v_lastost
	     AND A.DATE_OPER<=pDATE_OPER;
  END IF;   		 

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;

FUNCTION GET_AZC_OST_VOL_EX(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pSOBSTV_ID NUMBER, pDATE_OPER DATE DEFAULT SYSDATE,FIRST_DAY NUMBER DEFAULT 1) RETURN NUMBER IS
  v_lastost DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  IF pSOBSTV_ID IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату ввода последнего остатка
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER<=LAST_DAY(pDATE_OPER);
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NULL THEN
    v_ost:=0;
	v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  ELSE
    SELECT SUM(VOLUME) INTO v_ost
	  FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  END IF;
  
  IF FIRST_DAY=0 THEN 
    RETURN NVL(v_ost,0);
  END IF;
  
  -- Приход и расход
  v_prih_rash:=0;
  IF v_lastost<=pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VOLUME,2,-A.VOLUME,0)) INTO v_prih_rash 
     FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
       AND (B.KIND_OPER=1 OR B.KIND_OPER=2)
	   AND A.DATE_OPER>=v_lastost
	   AND A.DATE_OPER<=pDATE_OPER;
  END IF;	   

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;

PROCEDURE for_rec_ostatki_rename  (DATE_FROM DATE, DATE_TO DATE)  IS
CURSOR c1 IS
SELECT SUM(VVV.VOL) AS vol, SUM(VVV.VES) AS VES , VVV.prod_id_npr, VVV.SOBSTV_ID, VVV.org_stru_id  FROM ORG_STRUCTURE  V, KLS_PROD VV,
(SELECT
For_Azc.GET_AZC_OST_VOL( select_.ORG_STRU_ID,select_.PROD_ID_NPR,select_.SOBSTV_ID, LAST_DAY(DATE_FROM)) AS VOL,
For_Azc.GET_AZC_OST_VES (select_.ORG_STRU_ID,select_.PROD_ID_NPR,select_.SOBSTV_ID, LAST_DAY(DATE_FROM)) AS VES,
DECODE(select_.PROD_ID_NPR,'80003','80018','10304', '10305','10314','10315','10405','10400','10426','10400', '10313', '10315', '10427','10400', '10423', '10400', select_.PROD_ID_NPR) AS prod_id_npr,
select_.SOBSTV_ID,
select_.ORG_STRU_ID
FROM
(SELECT SOBSTV_ID, ORG_STRU_ID, PROD_ID_NPR FROM AZC_OPERATION WHERE
AZC_OPERATION.DATE_OPER >=	TRUNC (DATE_FROM, 'MONTH')
AND AZC_OPERATION.DATE_OPER <= LAST_DAY(DATE_FROM)
GROUP BY SOBSTV_ID, ORG_STRU_ID, PROD_ID_NPR) select_,
ORG_RELATIONS B
WHERE 
B.ORG_STRU_1_ID = select_.org_stru_id
AND B.ORG_STRU_2_ID = 31
ORDER BY select_.SOBSTV_ID, select_.ORG_STRU_ID,select_.PROD_ID_NPR ) VVV
WHERE
VVV.org_stru_id = V.ID
AND VVV.prod_id_npr = VV.ID_NPR
GROUP BY V.NAME, VV.ID_NPR, VV.ABBR_NPR, VVV.prod_id_npr, VVV.org_stru_id, VVV.SOBSTV_ID;
VOLUME_ AZC_OPERATION.VOLUME%TYPE;
VES_ AZC_OPERATION.VES%TYPE;
PROD_ID_NPR_  AZC_OPERATION.PROD_ID_NPR%TYPE;
SOBSTV_ID_  AZC_OPERATION.SOBSTV_ID%TYPE;
ORG_STRU_ID_  AZC_OPERATION.ORG_STRU_ID%TYPE;
COUNT_VAR NUMBER;
BEGIN
OPEN c1;
LOOP
FETCH c1 INTO VOLUME_ ,VES_,PROD_ID_NPR_ ,SOBSTV_ID_,ORG_STRU_ID_;
EXIT WHEN c1%NOTFOUND;
SELECT COUNT (A.ID) INTO COUNT_VAR 
FROM AZC_OPERATION A WHERE 
A.SOBSTV_ID = SOBSTV_ID_
AND A.PROD_ID_NPR = PROD_ID_NPR_
AND A.ORG_STRU_ID = ORG_STRU_ID_
AND A.TYPE_OPER_ID = 3
AND A.DATE_INTO>=TRUNC(date_to, 'MONTH');
IF COUNT_VAR<1 THEN 
INSERT  INTO AZC_OPERATION (DATE_OPER, VOLUME, VES, TYPE_OPER_ID,PROD_ID_NPR, SOBSTV_ID, ORG_STRU_ID, PLACE_SEND_ID) VALUES
( TRUNC(DATE_TO, 'MONTH'), VOLUME_ ,VES_, 3 ,PROD_ID_NPR_ ,SOBSTV_ID_, ORG_STRU_ID_, 1);
COMMIT;
END IF;
END LOOP;
CLOSE c1;
END for_rec_ostatki_rename ;


END;

/

