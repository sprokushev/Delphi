--
-- FOR_KVIT  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_kvit
AS

/* Заполнить KVIT_DATE_VIR из SFDBF.MOVEPROD */
PROCEDURE FillDateVir(pBEGIN_DATE DATE, pEND_DATE DATE) AS
  vBILL_ID NUMBER;
  vKVIT_ID NUMBER;
  vSOBS_ID NUMBER;
  vID NUMBER;
  vLAST_ID NUMBER;
  vVES_OST NUMBER;
  vVES_BRUTTO_OST NUMBER;
  vVES_CIST_OST NUMBER;
  vVZLIV_OST NUMBER;
  vKOL_NET_OST NUMBER;
  vSUM_PROD_OST NUMBER;
  vSUM_PROD_NDS_OST NUMBER;
  vSUM_AKCIZ_OST NUMBER;
  vTARIF_ORIG_OST NUMBER;
  vTARIF_ALT_OST NUMBER;
  vTARIF_OST NUMBER;
  vTARIF19_OST NUMBER;
  vTARIF_NDS_OST NUMBER;
  vTARIF_GUARD_OST NUMBER;
  vTARIF_GUARD_NDS_OST NUMBER;
  vSUM_VOZN11_OST NUMBER;
  vSUM_VOZN11_NDS_OST NUMBER;
  vSUM_VOZN12_OST NUMBER;
  vSUM_VOZN12_NDS_OST NUMBER;
  vSUM_STRAH_OST NUMBER;
  vSOBS_DATE_VIR DATE;
  vBILL_POS_ID NUMBER;
BEGIN
  -- Очищаем KVIT_DATE_VIR 
  DELETE FROM kvit_date_vir a WHERE a.date_plan BETWEEN pBEGIN_DATE AND pEND_DATE;

  -- Очищаем BILL_POS
  DELETE FROM BILL_POS a WHERE a.date_realiz BETWEEN pBEGIN_DATE AND pEND_DATE AND a.IS_POKUP=1;

  -- Заполняем KVIT_DATE_VIR
  vBILL_ID:=0;
  vKVIT_ID:=0;
  vSOBS_ID:=0;
  vID:=0;
  vLAST_ID:=0;

  FOR lcur IN (SELECT * FROM v_renew_kvit_date_vir a
                WHERE a.date_plan BETWEEN pBEGIN_DATE AND pEND_DATE
				ORDER BY a.BILL_ID,a.KVIT_ID,a.NOM_SF_POKUP NULLS FIRST,a.DATE_VIR,a.NOM_DOK_POKUP NULLS FIRST) LOOP

	IF vKVIT_ID<>lcur.KVIT_ID OR vBILL_ID<>lcur.BILL_ID THEN
	  -- Сменился вагон или счет
	  IF vKVIT_ID<>0 AND vLAST_ID<>0 AND
	     (vVES_OST<>0 OR vVES_BRUTTO_OST<>0 OR vVES_CIST_OST<>0 OR
		  vVZLIV_OST<>0 OR vKOL_NET_OST<>0 OR
	      vSUM_PROD_OST<>0 OR vSUM_PROD_NDS_OST<>0 OR vSUM_AKCIZ_OST<>0 OR
		  vTARIF_ORIG_OST<>0 OR vTARIF_ALT_OST<>0 OR vTARIF_OST<>0 OR vTARIF19_OST<>0 OR vTARIF_NDS_OST<>0 OR
		  vTARIF_GUARD_OST<>0 OR vTARIF_GUARD_NDS_OST<>0 OR
		  vSUM_VOZN11_OST<>0 OR vSUM_VOZN11_NDS_OST<>0 OR
		  vSUM_VOZN12_OST<>0 OR vSUM_VOZN12_NDS_OST<>0 OR
		  vSUM_STRAH_OST<>0) THEN
		-- Если остался остаток - прибавляем к последней позиции
		UPDATE KVIT_DATE_VIR SET  
		  VES=VES+vVES_OST, 
		  VES_BRUTTO=VES_BRUTTO+vVES_BRUTTO_OST, 
		  VES_CIST=VES_CIST+vVES_CIST_OST, 
		  VZLIV=VZLIV+vVZLIV_OST, 
		  KOL_NET=KOL_NET+vKOL_NET_OST, 
		  SUM_PROD=SUM_PROD+vSUM_PROD_OST, 
		  SUM_PROD_NDS=SUM_PROD_NDS+vSUM_PROD_NDS_OST, 
		  SUM_AKCIZ=SUM_AKCIZ+vSUM_AKCIZ_OST,  
	      TARIF_ORIG=TARIF_ORIG+vTARIF_ORIG_OST, 
		  TARIF_ALT=TARIF_ALT+vTARIF_ALT_OST, 
		  TARIF=TARIF+vTARIF_OST, 
		  TARIF19=TARIF19+vTARIF19_OST, 
		  TARIF_NDS=TARIF_NDS+vTARIF_NDS_OST, 
		  TARIF_GUARD=TARIF_GUARD+vTARIF_GUARD_OST, 
		  TARIF_GUARD_NDS=TARIF_GUARD_NDS+vTARIF_GUARD_NDS_OST, 
		  SUM_VOZN11=SUM_VOZN11+vSUM_VOZN11_OST, 
		  SUM_VOZN11_NDS=SUM_VOZN11_NDS+vSUM_VOZN11_NDS_OST, 
	      SUM_VOZN12=SUM_VOZN12+vSUM_VOZN12_OST, 
		  SUM_VOZN12_NDS=SUM_VOZN12_NDS+vSUM_VOZN12_NDS_OST, 
		  SUM_STRAH=vSUM_STRAH_OST
		WHERE ID=vLAST_ID;
--  COMMIT;				
	  END IF;	  
		  
      vVES_OST:=lcur.VES_ALL;
      vVES_BRUTTO_OST:=lcur.VES_BRUTTO_ALL;
      vVES_CIST_OST:=lcur.VES_CIST_ALL;
      vVZLIV_OST:=lcur.VZLIV_ALL;
      vKOL_NET_OST:=lcur.KOL_NET_ALL;
      vSUM_PROD_OST:=lcur.SUM_PROD_ALL;
      vSUM_PROD_NDS_OST:=lcur.SUM_PROD_NDS_ALL;
      vSUM_AKCIZ_OST:=lcur.SUM_AKCIZ_ALL;
      vTARIF_ORIG_OST:=lcur.TARIF_ORIG_ALL;
      vTARIF_ALT_OST:=lcur.TARIF_ALT_ALL;
      vTARIF_OST:=lcur.TARIF_ALL;
      vTARIF19_OST:=lcur.TARIF19_ALL;
      vTARIF_NDS_OST:=lcur.TARIF_NDS_ALL;
      vTARIF_GUARD_OST:=lcur.TARIF_GUARD_ALL;
      vTARIF_GUARD_NDS_OST:=lcur.TARIF_GUARD_NDS_ALL;
      vSUM_VOZN11_OST:=lcur.SUM_VOZN11_ALL;
      vSUM_VOZN11_NDS_OST:=lcur.SUM_VOZN11_NDS_ALL;
      vSUM_VOZN12_OST:=lcur.SUM_VOZN12_ALL;
      vSUM_VOZN12_NDS_OST:=lcur.SUM_VOZN12_NDS_ALL;
      vSUM_STRAH_OST:=lcur.SUM_STRAH_ALL;
	  
	  vKVIT_ID:=lcur.KVIT_ID;
	  vSOBS_ID:=0;
	  vID:=0;
	  vBILL_ID:=lcur.BILL_ID;
	  vLAST_ID:=0;
	END IF;

	IF lcur.NOM_SF_POKUP||' '=' ' THEN
	  -- Разбиение по дате выработки
	  SELECT SEQ_ID.NEXTVAL INTO vID FROM DUAL;
	  vSOBS_ID:=vID;
	  vSOBS_DATE_VIR:=lcur.DATE_VIR;

      INSERT INTO kvit_date_vir (
        ID, KVIT_ID, BILL_ID, DATE_VIR, BILL_POS_ID, VES, VES_BRUTTO, VES_CIST, VZLIV, KOL_NET, SUM_PROD, SUM_PROD_NDS, SUM_AKCIZ,  
	    TARIF_ORIG, TARIF_ALT, TARIF, TARIF19, TARIF_NDS, TARIF_GUARD, TARIF_GUARD_NDS, SUM_VOZN11, SUM_VOZN11_NDS, 
	    SUM_VOZN12, SUM_VOZN12_NDS, SUM_STRAH, NOM_SF_POKUP, NOM_DOK_POKUP, DATE_PLAN, OWNERSHIP_ID)
      VALUES (vID, vKVIT_ID, vBILL_ID, lcur.DATE_VIR, lcur.BILL_POS_ID, lcur.VES, lcur.VES_BRUTTO, lcur.VES_CIST, lcur.VZLIV, lcur.KOL_NET, 
	    lcur.SUM_PROD, lcur.SUM_PROD_NDS, lcur.SUM_AKCIZ, lcur.TARIF_ORIG, lcur.TARIF_ALT, lcur.TARIF, lcur.TARIF19, lcur.TARIF_NDS, 
		lcur.TARIF_GUARD, lcur.TARIF_GUARD_NDS, lcur.SUM_VOZN11, lcur.SUM_VOZN11_NDS, 
     	lcur.SUM_VOZN12, lcur.SUM_VOZN12_NDS, lcur.SUM_STRAH, lcur.NOM_SF_POKUP, lcur.NOM_DOK_POKUP, lcur.DATE_PLAN,1); 
--  COMMIT;				
	ELSE
	  -- Выделение приобретенного продукта
	  IF vSOBS_ID<>0 THEN
	    -- Если в этом вагоне уже есть позиция - собственный продукт
		UPDATE KVIT_DATE_VIR SET  
		  VES=VES+lcur.VES, 
		  VES_BRUTTO=VES_BRUTTO+lcur.VES_BRUTTO, 
		  VES_CIST=VES_CIST+lcur.VES_CIST, 
		  VZLIV=VZLIV+lcur.VZLIV, 
		  KOL_NET=KOL_NET+lcur.KOL_NET, 
		  SUM_PROD=SUM_PROD+lcur.SUM_PROD, 
		  SUM_PROD_NDS=SUM_PROD_NDS+lcur.SUM_PROD_NDS, 
		  SUM_AKCIZ=SUM_AKCIZ+lcur.SUM_AKCIZ,  
	      TARIF_ORIG=TARIF_ORIG+lcur.TARIF_ORIG, 
		  TARIF_ALT=TARIF_ALT+lcur.TARIF_ALT, 
		  TARIF=TARIF+lcur.TARIF, 
		  TARIF19=TARIF19+lcur.TARIF19, 
		  TARIF_NDS=TARIF_NDS+lcur.TARIF_NDS, 
		  TARIF_GUARD=TARIF_GUARD+lcur.TARIF_GUARD, 
		  TARIF_GUARD_NDS=TARIF_GUARD_NDS+lcur.TARIF_GUARD_NDS, 
		  SUM_VOZN11=SUM_VOZN11+lcur.SUM_VOZN11, 
		  SUM_VOZN11_NDS=SUM_VOZN11_NDS+lcur.SUM_VOZN11_NDS, 
	      SUM_VOZN12=SUM_VOZN12+lcur.SUM_VOZN12, 
		  SUM_VOZN12_NDS=SUM_VOZN12_NDS+lcur.SUM_VOZN12_NDS, 
		  SUM_STRAH=lcur.SUM_STRAH
		WHERE ID=vSOBS_ID;
	  ELSE
		-- Добавляем "плюс", BILL_POS_ID=1
	    SELECT SEQ_ID.NEXTVAL INTO vID FROM DUAL;
  	    vSOBS_ID:=vID;
	    vSOBS_DATE_VIR:=lcur.DATE_VIR;
        INSERT INTO kvit_date_vir (
          ID, KVIT_ID, BILL_ID, DATE_VIR, BILL_POS_ID, VES, VES_BRUTTO, VES_CIST, VZLIV, KOL_NET, SUM_PROD, SUM_PROD_NDS, SUM_AKCIZ,  
	      TARIF_ORIG, TARIF_ALT, TARIF, TARIF19, TARIF_NDS, TARIF_GUARD, TARIF_GUARD_NDS, SUM_VOZN11, SUM_VOZN11_NDS, 
  	      SUM_VOZN12, SUM_VOZN12_NDS, SUM_STRAH, NOM_SF_POKUP, NOM_DOK_POKUP, DATE_PLAN,OWNERSHIP_ID)
        VALUES (vID, vKVIT_ID, vBILL_ID, lcur.DATE_VIR, lcur.BILL_POS_ID, lcur.VES, lcur.VES_BRUTTO, lcur.VES_CIST, lcur.VZLIV, lcur.KOL_NET, 
	      lcur.SUM_PROD, lcur.SUM_PROD_NDS, lcur.SUM_AKCIZ, lcur.TARIF_ORIG, lcur.TARIF_ALT, lcur.TARIF, lcur.TARIF19, lcur.TARIF_NDS, 
		  lcur.TARIF_GUARD, lcur.TARIF_GUARD_NDS, lcur.SUM_VOZN11, lcur.SUM_VOZN11_NDS, 
     	  lcur.SUM_VOZN12, lcur.SUM_VOZN12_NDS, lcur.SUM_STRAH, NULL, NULL, lcur.DATE_PLAN,1); 
	  END IF;	
--  COMMIT;				
      -- Добавляем "минус", BILL_POS_ID=0
	  SELECT SEQ_ID.NEXTVAL INTO vID FROM DUAL;
      INSERT INTO kvit_date_vir (
          ID, KVIT_ID, BILL_ID, DATE_VIR, BILL_POS_ID, VES, VES_BRUTTO, VES_CIST, VZLIV, KOL_NET, SUM_PROD, SUM_PROD_NDS, SUM_AKCIZ,  
	      TARIF_ORIG, TARIF_ALT, TARIF, TARIF19, TARIF_NDS, TARIF_GUARD, TARIF_GUARD_NDS, SUM_VOZN11, SUM_VOZN11_NDS, 
  	      SUM_VOZN12, SUM_VOZN12_NDS, SUM_STRAH, NOM_SF_POKUP, NOM_DOK_POKUP, DATE_PLAN,OWNERSHIP_ID)
      VALUES (vID, vKVIT_ID, vBILL_ID, vSOBS_DATE_VIR, 0, -lcur.VES, -lcur.VES_BRUTTO, -lcur.VES_CIST, -lcur.VZLIV, -lcur.KOL_NET, 
	      -lcur.SUM_PROD, -lcur.SUM_PROD_NDS, -lcur.SUM_AKCIZ, -lcur.TARIF_ORIG, -lcur.TARIF_ALT, -lcur.TARIF, -lcur.TARIF19, -lcur.TARIF_NDS, 
		  -lcur.TARIF_GUARD, -lcur.TARIF_GUARD_NDS, -lcur.SUM_VOZN11, -lcur.SUM_VOZN11_NDS, 
     	  -lcur.SUM_VOZN12, -lcur.SUM_VOZN12_NDS, -lcur.SUM_STRAH, NULL, NULL, lcur.DATE_PLAN,1); 
--  COMMIT;				
	  -- Добавляем "плюс", BILL_POS_ID=0	  
      SELECT SEQ_ID.NEXTVAL INTO vID FROM DUAL;
      INSERT INTO kvit_date_vir (
          ID, KVIT_ID, BILL_ID, DATE_VIR, BILL_POS_ID, VES, VES_BRUTTO, VES_CIST, VZLIV, KOL_NET, SUM_PROD, SUM_PROD_NDS, SUM_AKCIZ,  
	      TARIF_ORIG, TARIF_ALT, TARIF, TARIF19, TARIF_NDS, TARIF_GUARD, TARIF_GUARD_NDS, SUM_VOZN11, SUM_VOZN11_NDS, 
  	      SUM_VOZN12, SUM_VOZN12_NDS, SUM_STRAH, NOM_SF_POKUP, NOM_DOK_POKUP, DATE_PLAN, OWNERSHIP_ID)
        VALUES (vID, vKVIT_ID, vBILL_ID, lcur.DATE_VIR, 0, lcur.VES, lcur.VES_BRUTTO, lcur.VES_CIST, lcur.VZLIV, lcur.KOL_NET, 
	      lcur.SUM_PROD, lcur.SUM_PROD_NDS, lcur.SUM_AKCIZ, lcur.TARIF_ORIG, lcur.TARIF_ALT, lcur.TARIF, lcur.TARIF19, lcur.TARIF_NDS, 
		  lcur.TARIF_GUARD, lcur.TARIF_GUARD_NDS, lcur.SUM_VOZN11, lcur.SUM_VOZN11_NDS, 
     	  lcur.SUM_VOZN12, lcur.SUM_VOZN12_NDS, lcur.SUM_STRAH, lcur.NOM_SF_POKUP, lcur.NOM_DOK_POKUP, lcur.DATE_PLAN,2); 
--  COMMIT;				
	END IF;
	
	-- Уменьшаем остатки
    vVES_OST:=vVES_OST-lcur.VES;
    vVES_BRUTTO_OST:=vVES_BRUTTO_OST-lcur.VES_BRUTTO;
    vVES_CIST_OST:=vVES_CIST_OST-lcur.VES_CIST;
    vVZLIV_OST:=vVZLIV_OST-lcur.VZLIV;
    vKOL_NET_OST:=vKOL_NET_OST-lcur.KOL_NET;
    vSUM_PROD_OST:=vSUM_PROD_OST-lcur.SUM_PROD;
    vSUM_PROD_NDS_OST:=vSUM_PROD_NDS_OST-lcur.SUM_PROD_NDS;
    vSUM_AKCIZ_OST:=vSUM_AKCIZ_OST-lcur.SUM_AKCIZ;
    vTARIF_ORIG_OST:=vTARIF_ORIG_OST-lcur.TARIF_ORIG;
    vTARIF_ALT_OST:=vTARIF_ALT_OST-lcur.TARIF_ALT;
    vTARIF_OST:=vTARIF_OST-lcur.TARIF;
    vTARIF19_OST:=vTARIF19_OST-lcur.TARIF19;
    vTARIF_NDS_OST:=vTARIF_NDS_OST-lcur.TARIF_NDS;
    vTARIF_GUARD_OST:=vTARIF_GUARD_OST-lcur.TARIF_GUARD;
    vTARIF_GUARD_NDS_OST:=vTARIF_GUARD_NDS_OST-lcur.TARIF_GUARD_NDS;
    vSUM_VOZN11_OST:=vSUM_VOZN11_OST-lcur.SUM_VOZN11;
    vSUM_VOZN11_NDS_OST:=vSUM_VOZN11_NDS_OST-lcur.SUM_VOZN11_NDS;
    vSUM_VOZN12_OST:=vSUM_VOZN12_OST-lcur.SUM_VOZN12;
    vSUM_VOZN12_NDS_OST:=vSUM_VOZN12_NDS_OST-lcur.SUM_VOZN12_NDS;
    vSUM_STRAH_OST:=vSUM_STRAH_OST-lcur.SUM_STRAH;

    vLAST_ID:=vID;
  END LOOP;
  
--  COMMIT;				
  
  -- Заполняем BILL_POS
  vBILL_ID:=0;
  vBILL_POS_ID:=0;
  FOR lcur IN (SELECT 
                 a.BILL_ID as NOM_DOK, 
				 SUM(a.VES_BRUTTO) as VES, 
				 MAX(b.CENA) as CENA_BN, 
				 MAX(b.CENA_OTP) as CENA, 
				 SUM(a.SUM_PROD) as SUMMA_BN, 
				 SUM(a.SUM_AKCIZ) as SUMMA_AKCIZ, 
				 0 as SUMMA_GSM25, 
				 SUM(a.SUM_PROD_NDS) as SUMMA_NDS20, 
				 SUM(a.SUM_PROD+a.SUM_AKCIZ+a.SUM_PROD_NDS) as SUMMA, 
				 c.DATE_BUXG as DATE_REALIZ, 
				 0 as ID_OLD, 
				 c.PROD_ID_NPR, 
				 a.OWNERSHIP_ID, 
				 c.IS_AGENT, 
				 1 as IS_LUK, 
				 MAX(b.NACENKA) as NACENKA, 
				 c.PROTO_NUM, 
				 c.PROTO_DATE, 
				 c.NO_AKCIZ, 
				 DECODE(SIGN(a.VES_BRUTTO),-1,NULL,1) as SUPPLIER_ID, 
				 a.NOM_SF_POKUP, 
				 a.NOM_DOK_POKUP, 
				 1 as IS_POKUP,
                 MAX(NVL((SELECT MAX(NVL(BILL_POS.BILL_POS_ID,1)) FROM BILL_POS WHERE NOM_DOK=a.BILL_ID AND BILL_POS_ID<10),1)) as MAX_BILL_POS_ID
			   FROM kvit_date_vir a,kvit b,bills c
			  WHERE a.kvit_id=b.id AND a.bill_id=b.bill_id AND a.bill_id=c.nom_dok
			    AND date_plan BETWEEN pBEGIN_DATE AND pEND_DATE
				AND a.BILL_POS_ID=0 AND (a.NOM_SF_POKUP||' '<>' ' OR a.VES_BRUTTO<0) 
			  GROUP BY a.BILL_ID,a.OWNERSHIP_ID,c.DATE_BUXG,c.PROD_ID_NPR,c.IS_AGENT,c.PROTO_NUM,c.PROTO_DATE,c.NO_AKCIZ,a.NOM_SF_POKUP,a.NOM_DOK_POKUP,DECODE(SIGN(a.VES_BRUTTO),-1,NULL,1)
			  ORDER BY a.BILL_ID,a.OWNERSHIP_ID,a.NOM_SF_POKUP,a.NOM_DOK_POKUP,DECODE(SIGN(a.VES_BRUTTO),-1,NULL,1)) LOOP

    IF vBILL_ID<>lcur.NOM_DOK THEN
	  -- Изменился счет
	  vBILL_ID:=lcur.NOM_DOK;
	  vBILL_POS_ID:=lcur.MAX_BILL_POS_ID;
	END IF;
	
	vBILL_POS_ID:=vBILL_POS_ID+1;
	
	-- Добавить позицию  
   	INSERT INTO BILL_POS (NOM_DOK, BILL_POS_ID, VES, CENA_BN, CENA, SUMMA_BN, SUMMA_AKCIZ, SUMMA_NDS20, SUMMA_GSM25, SUMMA, 
	    DATE_REALIZ, PROD_ID_NPR, OWNERSHIP_ID, IS_AGENT, IS_LUK, NACENKA, PROTO_NUM, PROTO_DATE, NO_AKCIZ, SUPPLIER_ID, NOM_SF_POKUP, NOM_DOK_POKUP, IS_POKUP, ID_OLD)
     VALUES(lcur.NOM_DOK, vBILL_POS_ID, lcur.VES, lcur.CENA_BN, lcur.CENA, lcur.SUMMA_BN, lcur.SUMMA_AKCIZ, 
	    lcur.SUMMA_NDS20, lcur.SUMMA_GSM25, lcur.SUMMA, lcur.DATE_REALIZ, lcur.PROD_ID_NPR, lcur.OWNERSHIP_ID, 
		lcur.IS_AGENT, lcur.IS_LUK, lcur.NACENKA, lcur.PROTO_NUM, lcur.PROTO_DATE, lcur.NO_AKCIZ, lcur.SUPPLIER_ID, 
		lcur.NOM_SF_POKUP, lcur.NOM_DOK_POKUP, lcur.IS_POKUP,DECODE(SIGN(lcur.VES),-1,lcur.MAX_BILL_POS_ID,NULL));
--  COMMIT;				
		
	-- Обновить ссылку на позицию
	UPDATE KVIT_DATE_VIR SET BILL_POS_ID=vBILL_POS_ID WHERE BILL_ID=vBILL_ID AND NOM_SF_POKUP||' '=lcur.NOM_SF_POKUP||' ' AND OWNERSHIP_ID=lcur.OWNERSHIP_ID and BILL_POS_ID=0;
--  COMMIT;				
  END LOOP;

  COMMIT;				
END;

END;
/

