/* This object may not be sorted properly in the script due to cirular references. */
--
-- FOR_R3  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_R3 AS
-- Ошибка
  PROCEDURE RaiseError (pText VARCHAR2) AS
  BEGIN
    ROLLBACK;
    RAISE_APPLICATION_ERROR(For_Scripts.SG$NO_CORRECT, pText);
  END;

--
PROCEDURE RENEW_VSTEL (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  IF IsFull=1 THEN
--    UPDATE R3_VSTEL A
--      SET (VTEXT, KERNEL_ID) =
--	  (SELECT B.VTEXT, B.KERNEL_ID FROM R3.VSTEL@UNPO.WORLD B WHERE B.VSTEL=A.VBAP_VSTEL)
--    WHERE EXISTS (SELECT NULL FROM R3.VSTEL@UNPO.WORLD B WHERE B.VSTEL=A.VBAP_VSTEL);

    COMMIT;
  END IF;

--  INSERT INTO R3_VSTEL (VBAP_VSTEL,VTEXT,KERNEL_ID)
--    (SELECT VSTEL,VTEXT,KERNEL_ID FROM R3.VSTEL@UNPO.WORLD B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_VSTEL A WHERE A.VBAP_VSTEL=B.VSTEL));

  COMMIT;

  -- Добавление из OD
--  INSERT INTO R3_VSTEL (VBAP_VSTEL)
--    (SELECT VBAP_VSTEL FROM (SELECT DISTINCT VBAP_VSTEL FROM R3.OD@UNPO.WORLD) B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_VSTEL A WHERE A.VBAP_VSTEL=B.VBAP_VSTEL)
--	  AND B.VBAP_VSTEL IS NOT NULL);

  COMMIT;

END;

PROCEDURE RENEW_VSBED (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  IF IsFull=1 THEN
--    UPDATE R3_VSBED A
--      SET (NAME, KERNEL_ID) =
--	  (SELECT B.VTEXT, B.KERNEL_ID FROM R3.VSBED@UNPO.WORLD B WHERE B.VSBED=A.VBAK_VSBED)
--    WHERE EXISTS (SELECT NULL FROM R3.VSBED@UNPO.WORLD B WHERE B.VSBED=A.VBAK_VSBED);

    COMMIT;
  END IF;

--  INSERT INTO R3_VSBED (VBAK_VSBED,NAME,KERNEL_ID)
--    (SELECT VSBED,VTEXT,KERNEL_ID FROM R3.VSBED@UNPO.WORLD B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_VSBED A WHERE A.VBAK_VSBED=B.VSBED));

  COMMIT;

  -- Добавление из OD
--  INSERT INTO R3_VSBED (VBAK_VSBED)
--    (SELECT VBAK_VSBED FROM (SELECT DISTINCT VBAK_VSBED FROM R3.OD@UNPO.WORLD) B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_VSBED A WHERE A.VBAK_VSBED=B.VBAK_VSBED)
--	  AND B.VBAK_VSBED IS NOT NULL);

  COMMIT;

END;

PROCEDURE RENEW_VSART (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  IF IsFull=1 THEN
--    UPDATE R3_VSART A
--      SET (NAME, KERNEL_ID) =
--	  (SELECT B.BEZEI, B.KERNEL_ID FROM R3.VSART@UNPO.WORLD B WHERE B.VSART=A.VBKD_VSART)
--    WHERE EXISTS (SELECT NULL FROM R3.VSART@UNPO.WORLD B WHERE B.VSART=A.VBKD_VSART);

    COMMIT;
  END IF;

--  INSERT INTO R3_VSART (VBKD_VSART,NAME,KERNEL_ID)
--    (SELECT VSART,BEZEI,KERNEL_ID FROM R3.VSART@UNPO.WORLD B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_VSART A WHERE A.VBKD_VSART=B.VSART));

  COMMIT;

  -- Добавление из OD
--  INSERT INTO R3_VSART (VBKD_VSART)
--    (SELECT VBKD_VSART FROM (SELECT DISTINCT VBKD_VSART FROM R3.OD@UNPO.WORLD) B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_VSART A WHERE A.VBKD_VSART=B.VBKD_VSART)
--	  AND B.VBKD_VSART IS NOT NULL);

  COMMIT;
END;

PROCEDURE RENEW_WERKS_LGORT (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  IF IsFull=1 THEN
--    UPDATE R3_WERKS_LGORT A
--      SET (LGOBE) =
--	  (SELECT LGOBE FROM R3.WERKS_LGORT@UNPO.WORLD B WHERE B.WERKS=A.VBAP_WERKS AND B.LGORT=A.LGORT)
--    WHERE EXISTS (SELECT NULL FROM R3.WERKS_LGORT@UNPO.WORLD B WHERE B.WERKS=A.VBAP_WERKS AND B.LGORT=A.LGORT);

    COMMIT;
  END IF;

--  INSERT INTO R3_WERKS_LGORT (VBAP_WERKS, LGORT, LGOBE)
--    (SELECT WERKS,LGORT,LGOBE FROM R3.WERKS_LGORT@UNPO.WORLD B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_WERKS_LGORT A WHERE A.VBAP_WERKS=B.WERKS AND A.LGORT=B.LGORT)
--	  AND B.WERKS IS NOT NULL
--	  AND B.LGORT IS NOT NULL);

  COMMIT;

  -- Добавление из OD
--  INSERT INTO R3_WERKS_LGORT (VBAP_WERKS, LGORT)
--    (SELECT VBAP_WERKS, LGORT FROM (SELECT DISTINCT VBAP_WERKS, LGORT FROM R3.OD@UNPO.WORLD) B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_WERKS_LGORT A WHERE A.VBAP_WERKS=B.VBAP_WERKS AND A.LGORT=B.LGORT)
--	  AND B.VBAP_WERKS IS NOT NULL
--	  AND B.LGORT IS NOT NULL);

  COMMIT;

END;

PROCEDURE RENEW_BLOCKS (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  IF IsFull=1 THEN
--    UPDATE R3_BLOCKS A
--      SET (NAME, KERNEL_ID) =
--	  (SELECT NAME, KERNEL_ID FROM R3.J_STMAINT_ANWS@UNPO.WORLD B WHERE B.KOD=A.V_TJ30_TXT04)
--    WHERE EXISTS (SELECT NULL FROM R3.J_STMAINT_ANWS@UNPO.WORLD B WHERE B.KOD=A.V_TJ30_TXT04);

    COMMIT;
  END IF;

--  INSERT INTO R3_BLOCKS (V_TJ30_TXT04,NAME,KERNEL_ID)
--    (SELECT KOD,NAME,KERNEL_ID FROM R3.J_STMAINT_ANWS@UNPO.WORLD B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_BLOCKS A WHERE A.V_TJ30_TXT04=B.KOD));

  COMMIT;

  -- Обновление из OD
--  INSERT INTO R3_BLOCKS (V_TJ30_TXT04)
--    (SELECT V_TJ30_TXT04 FROM (SELECT DISTINCT V_TJ30_TXT04 FROM R3.OD@UNPO.WORLD) B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_BLOCKS A WHERE A.V_TJ30_TXT04=B.V_TJ30_TXT04)
--	  AND B.V_TJ30_TXT04 IS NOT NULL);

  COMMIT;
  
END;

PROCEDURE RENEW_AUART (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  IF IsFull=1 THEN
--    UPDATE R3_AUART A
--      SET (TVAKT_BEZEI) =
--	  (SELECT TVAKT_BEZEI FROM (SELECT DISTINCT VBAK_AUART, TVAKT_BEZEI FROM R3.OD@UNPO.WORLD) B WHERE B.VBAK_AUART=A.VBAK_AUART)
--    WHERE EXISTS (SELECT NULL FROM (SELECT DISTINCT VBAK_AUART, TVAKT_BEZEI FROM R3.OD@UNPO.WORLD) B WHERE B.VBAK_AUART=A.VBAK_AUART);

    COMMIT;
  END IF;

--  INSERT INTO R3_AUART (VBAK_AUART,TVAKT_BEZEI)
--    (SELECT B.VBAK_AUART, B.TVAKT_BEZEI FROM (SELECT DISTINCT VBAK_AUART, TVAKT_BEZEI FROM R3.OD@UNPO.WORLD) B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_AUART A WHERE A.VBAK_AUART=B.VBAK_AUART));

  COMMIT;

END;

PROCEDURE RENEW_R3_GD (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  IF IsFull=1 THEN
--    UPDATE R3_GD A
--      SET (STREKL) =
--	  (SELECT STREKL FROM (SELECT DISTINCT BAHNR, STREKL FROM R3.ROUTENODES@UNPO.WORLD) B WHERE B.BAHNR=A.BAHNR)
--    WHERE EXISTS (SELECT NULL FROM (SELECT DISTINCT BAHNR, STREKL FROM R3.ROUTENODES@UNPO.WORLD) B WHERE B.BAHNR=A.BAHNR);

    COMMIT;
  END IF;

--  INSERT INTO R3_GD (BAHNR, STREKL)
--    (SELECT BAHNR, STREKL FROM (SELECT DISTINCT BAHNR, STREKL FROM R3.ROUTENODES@UNPO.WORLD) B
--    WHERE NOT EXISTS (SELECT NULL FROM R3_GD A WHERE A.BAHNR=B.BAHNR)
--	  AND BAHNR IS NOT NULL);

  COMMIT;

END;

PROCEDURE RENEW_PREDPR (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Обновление CUSTOMERS
/*  UPDATE R3_CUSTOMERS A
      SET (NAME, CITY, POST_CODE, STREET, HOUSE_NUM, BAHNS,
	       CITY_P, POST_CODE_P, ADREESS_P, INN, KVERM, BIK, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
     (SELECT NAME1||' '||NAME2||' '||NAME3, CITY1, POST_CODE1, STREET, HOUSE_NUM1,BAHNS,
	         PO_BOX_LOC, PO_BOX, LOCATION, STCD1, KVERM, STCD2, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
			 FROM R3.CUSTOMERS@UNPO.WORLD B WHERE B.KUNNR=A.ID AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM R3.CUSTOMERS@UNPO.WORLD B WHERE B.KUNNR=A.ID AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));

  -- Обновление VENDORS
  UPDATE R3_VENDORS A
      SET (NAME, CITY, POST_CODE, STREET, HOUSE_NUM, INN, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
     (SELECT NAME1||' '||NAME2||' '||NAME3, CITY1, POST_CODE1, STREET, HOUSE_NUM1,
	         STCD1, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
			 FROM R3.VENDORS@UNPO.WORLD B WHERE B.LIFNR=A.ID AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM R3.VENDORS@UNPO.WORLD B WHERE B.LIFNR=A.ID AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));

    COMMIT;

  -- Добавление в CUSTOMERS
  INSERT INTO R3_CUSTOMERS (ID,NAME, CITY, POST_CODE, STREET, HOUSE_NUM,BAHNS,
	       CITY_P, POST_CODE_P, ADREESS_P, INN, KVERM, BIK, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT KUNNR,NAME1||' '||NAME2||' '||NAME3, CITY1, POST_CODE1, STREET, HOUSE_NUM1,BAHNS,
	         PO_BOX_LOC, PO_BOX, LOCATION, STCD1, KVERM, STCD2, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
			 FROM R3.CUSTOMERS@UNPO.WORLD B
     WHERE NOT EXISTS (SELECT NULL FROM R3_CUSTOMERS A WHERE A.ID=B.KUNNR));

  -- Добавление в VENDORS
  INSERT INTO R3_VENDORS (ID,NAME, CITY, POST_CODE, STREET, HOUSE_NUM, INN, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT LIFNR,NAME1||' '||NAME2||' '||NAME3, CITY1, POST_CODE1, STREET, HOUSE_NUM1,
	         STCD1, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
			 FROM R3.VENDORS@UNPO.WORLD B
     WHERE NOT EXISTS (SELECT NULL FROM R3_VENDORS A WHERE A.ID=B.LIFNR));

  COMMIT;

  -- Добавление в CUSTOMERS из OD
  INSERT INTO R3_CUSTOMERS (ID)
    (SELECT ID FROM (SELECT DISTINCT TO_CHAR(TO_NUMBER(SH_KUNNR)) AS ID FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_CUSTOMERS A WHERE A.ID=B.ID)
	   AND B.ID IS NOT NULL);

  INSERT INTO R3_CUSTOMERS (ID)
    (SELECT ID FROM (SELECT DISTINCT TO_CHAR(TO_NUMBER(VBPA_KUNNR)) AS ID FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_CUSTOMERS A WHERE A.ID=B.ID)
	   AND B.ID IS NOT NULL);
	   
  INSERT INTO R3_CUSTOMERS (ID)
    (SELECT ID FROM (SELECT DISTINCT TO_CHAR(TO_NUMBER(VBPA_KUNNR_SP)) AS ID FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_CUSTOMERS A WHERE A.ID=B.ID)
	   AND B.ID IS NOT NULL);
	   
  -- Добавление в VENDORS из OD
  INSERT INTO R3_VENDORS (ID)
    (SELECT ID FROM (SELECT DISTINCT TO_CHAR(TO_NUMBER(NP_OWNER)) AS ID FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_VENDORS A WHERE A.ID=B.ID)
	   AND B.ID IS NOT NULL);

  INSERT INTO R3_VENDORS (ID)
    (SELECT ID FROM (SELECT DISTINCT TO_CHAR(TO_NUMBER(NP_PRODR)) AS ID FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_VENDORS A WHERE A.ID=B.ID)
	   AND B.ID IS NOT NULL);

  INSERT INTO R3_VENDORS (ID)
    (SELECT ID FROM (SELECT DISTINCT TO_CHAR(TO_NUMBER(OT_LIFNR)) AS ID FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_VENDORS A WHERE A.ID=B.ID)
	   AND B.ID IS NOT NULL);

  COMMIT;
  
  -- Простановка перекрестных связей
  UPDATE R3_CUSTOMERS A
     SET (VENDORS_ID) =
     (SELECT C.LIFNR
  	    FROM R3.CUSTOMERS@UNPO.WORLD B, R3.VENDORS@UNPO.WORLD C WHERE B.KUNNR=A.ID AND B.LIFNR=C.LIFNR)
    WHERE EXISTS (SELECT NULL FROM R3.CUSTOMERS@UNPO.WORLD B, R3.VENDORS@UNPO.WORLD C WHERE B.KUNNR=A.ID AND B.LIFNR=C.LIFNR);

  UPDATE R3_VENDORS A
     SET (CUSTOMERS_ID) =
     (SELECT C.KUNNR
  	    FROM R3.CUSTOMERS@UNPO.WORLD B, R3.VENDORS@UNPO.WORLD C WHERE B.KUNNR=C.KUNNR AND C.LIFNR=A.ID)
    WHERE EXISTS (SELECT NULL FROM R3.CUSTOMERS@UNPO.WORLD B, R3.VENDORS@UNPO.WORLD C WHERE B.KUNNR=C.KUNNR AND C.LIFNR=A.ID);

  COMMIT;

  -- Простановка связей CUSTOMERS с KLS_PREDPR
  FOR lcur IN (SELECT A.KUNNR, A.POST_CODE1 AS POST_CODE, A.PO_BOX AS POST_CODE_P, A.STCD1 AS INN, A.BAHNS
                 FROM R3.CUSTOMERS@UNPO.WORLD A) LOOP
    BEGIN
      v_tmp:=NULL;
	  SELECT ID INTO v_tmp
 	    FROM KLS_PREDPR A
	   WHERE (LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	          LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	          LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE_P,' '))) OR
			  LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE_P,' '))))
	     AND LTRIM(RTRIM(NVL(A.INN,' ')))=LTRIM(RTRIM(NVL(lcur.INN,' ')))
	     AND LTRIM(RTRIM(NVL(A.GD_KOD,' ')))=LTRIM(RTRIM(NVL(lcur.BAHNS,' ')));
    EXCEPTION
      WHEN TOO_MANY_ROWS THEN
	    BEGIN
          v_tmp:=NULL;
  	      SELECT ID INTO v_tmp
 	        FROM KLS_PREDPR A
	       WHERE (LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	              LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	              LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE_P,' '))) OR
			      LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE_P,' '))))
	         AND (LTRIM(RTRIM(NVL(A.INN,' ')))=LTRIM(RTRIM(NVL(lcur.INN,' '))) OR
	              LTRIM(RTRIM(NVL(A.GD_KOD,' ')))=LTRIM(RTRIM(NVL(lcur.BAHNS,' '))));
        EXCEPTION
          WHEN TOO_MANY_ROWS THEN
            v_tmp:=NULL;
	        SELECT MAX(ID) INTO v_tmp
 	          FROM KLS_PREDPR A
	         WHERE (LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	                LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	                LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE_P,' '))) OR
		            LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE_P,' '))))
	           AND (LTRIM(RTRIM(NVL(A.INN,' ')))=LTRIM(RTRIM(NVL(lcur.INN,' '))) OR
	                LTRIM(RTRIM(NVL(A.GD_KOD,' ')))=LTRIM(RTRIM(NVL(lcur.BAHNS,' '))));
          WHEN OTHERS THEN
	        v_tmp:=NULL;
		END;
      WHEN OTHERS THEN
        v_tmp:=NULL;
    END;

    UPDATE R3_CUSTOMERS A SET A.PREDPR_ID=v_tmp WHERE A.ID=lcur.KUNNR AND A.IS_AUTO_LINK=1;

  END LOOP;

  -- Простановка связей VENDORS с KLS_PREDPR
  FOR lcur IN (SELECT A.LIFNR, A.POST_CODE1 AS POST_CODE, A.STCD1 AS INN
                 FROM R3.VENDORS@UNPO.WORLD A) LOOP
    BEGIN
      v_tmp:=NULL;
	  SELECT ID INTO v_tmp
 	    FROM KLS_PREDPR A
	   WHERE (LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	          LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))))
	     AND LTRIM(RTRIM(NVL(A.INN,' ')))=LTRIM(RTRIM(NVL(lcur.INN,' ')));
    EXCEPTION
      WHEN TOO_MANY_ROWS THEN
        v_tmp:=NULL;
        SELECT MAX(ID) INTO v_tmp
          FROM KLS_PREDPR A
	     WHERE (LTRIM(RTRIM(NVL(A.POSTINDEX_J,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))) OR
	            LTRIM(RTRIM(NVL(A.POSTINDEX_P,' ')))=LTRIM(RTRIM(NVL(lcur.POST_CODE,' '))))
	       AND  LTRIM(RTRIM(NVL(A.INN,' ')))=LTRIM(RTRIM(NVL(lcur.INN,' ')));
      WHEN OTHERS THEN
        v_tmp:=NULL;
    END;

    UPDATE R3_VENDORS A SET A.PREDPR_ID=v_tmp WHERE A.ID=lcur.LIFNR AND A.IS_AUTO_LINK=1;

  END LOOP;
*/
  COMMIT;

END;


PROCEDURE RENEW_MATERIALS (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp VARCHAR2(5);
BEGIN

  RENEW_MATERIALS_GRP(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Обновление
/*  UPDATE R3_MATERIALS A
      SET (MAKTX, ATWRT_OKP, ATWRT_TU, ATWRT_GOST, PROD_SIGN, GROUP_S, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
      (SELECT MAKTX, ATWRT_OKP, ATWRT_TU, ATWRT_GOST, PROD_SIGN, GROUP_S, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
    	 FROM R3.MATERIALS@UNPO.WORLD B WHERE B.MATNR=A.VBAP_MATNR AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM R3.MATERIALS@UNPO.WORLD B WHERE B.MATNR=A.VBAP_MATNR AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));

    COMMIT;

  -- Добавление
  INSERT INTO R3_MATERIALS (VBAP_MATNR,MAKTX, ATWRT_OKP, ATWRT_TU, ATWRT_GOST, PROD_SIGN, GROUP_S, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT MATNR,MAKTX, ATWRT_OKP, ATWRT_TU, ATWRT_GOST, PROD_SIGN, GROUP_S, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
			 FROM R3.MATERIALS@UNPO.WORLD B
     WHERE NOT EXISTS (SELECT NULL FROM R3_MATERIALS A WHERE A.VBAP_MATNR=B.MATNR));
  COMMIT;
  
  -- Добавление из OD
  INSERT INTO R3_MATERIALS (VBAP_MATNR)
    (SELECT VBAP_MATNR FROM (SELECT VBAP_MATNR FROM R3.OD@UNPO.WORLD) B
      WHERE NOT EXISTS (SELECT NULL FROM R3_MATERIALS A WHERE A.VBAP_MATNR=B.VBAP_MATNR)
	    AND B.VBAP_MATNR IS NOT NULL);
	 
  COMMIT;

  -- Простановка связей MATERIALS с KLS_PROD
  FOR lcur IN (SELECT A.MATNR, A.ATWRT_OKP FROM R3.MATERIALS@UNPO.WORLD A) LOOP
    BEGIN
      v_tmp:=NULL;
	  SELECT ID_NPR INTO v_tmp
 	    FROM KLS_PROD A
	   WHERE LTRIM(RTRIM(NVL(A.KOD_10,' ')))=LTRIM(RTRIM(NVL(lcur.ATWRT_OKP,' ')));
    EXCEPTION
      WHEN TOO_MANY_ROWS THEN
        v_tmp:=NULL;
      WHEN OTHERS THEN
        v_tmp:=NULL;
    END;

    UPDATE R3_MATERIALS A SET A.PROD_ID_NPR=v_tmp WHERE A.VBAP_MATNR=lcur.MATNR AND A.IS_AUTO_LINK=1;

  END LOOP;

*/
  COMMIT;

END;

PROCEDURE RENEW_MATERIALS_GRP (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp VARCHAR2(5);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

/*  IF IsFull=1 THEN
    -- Обновление
    UPDATE R3_MATERIALS_GRP A
      SET (ATWTB) =
      (SELECT ATWTB FROM (SELECT DISTINCT GROUP_S,ATWTB FROM R3.MATERIALS@UNPO.WORLD) B WHERE B.GROUP_S=A.GROUP_S)
    WHERE EXISTS (SELECT NULL FROM (SELECT DISTINCT GROUP_S,ATWTB FROM R3.MATERIALS@UNPO.WORLD) B WHERE B.GROUP_S=A.GROUP_S);

    COMMIT;
  END IF;

  -- Добавление
  INSERT INTO R3_MATERIALS_GRP (GROUP_S,ATWTB)
    (SELECT GROUP_S,ATWTB FROM (SELECT DISTINCT GROUP_S,ATWTB FROM R3.MATERIALS@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_MATERIALS_GRP A WHERE A.GROUP_S=B.GROUP_S));
*/
  COMMIT;

END;

FUNCTION R2M_PREDPR (R3_KOD VARCHAR2) RETURN NUMBER IS
  v_tmp NUMBER;
BEGIN
  BEGIN
    v_tmp:=NULL;
    SELECT A.PREDPR_ID INTO v_tmp
 	  FROM R3_CUSTOMERS A
	 WHERE A.ID=R3_KOD;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
	  BEGIN
        v_tmp:=NULL;
        SELECT A.PREDPR_ID INTO v_tmp
 	      FROM R3_VENDORS A
  	     WHERE A.ID=R3_KOD;
	  EXCEPTION
         WHEN OTHERS THEN
	       v_tmp:=NULL;
	  END;
    WHEN OTHERS THEN
	  v_tmp:=NULL;
  END;
  RETURN v_tmp;
END;

PROCEDURE RENEW_CC (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  RENEW_PREDPR(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление из OD
/*  INSERT INTO R3_CC (EKKO_ZZ021,EKKO_KDATB, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE, CUSTOMERS_ID)
    (SELECT VBAK_ZZ021, VEDA_VBEGDAT, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE, VBPA_KUNNR_SP
	   FROM (SELECT VBAK_ZZ021, MAX(TO_DATE(VEDA_VBEGDAT,'dd.mm.yyyy')) AS VEDA_VBEGDAT,
		              MAX(ZZZZ_STATUS) AS ZZZZ_STATUS, MAX(ZZZZ_NOTE) AS ZZZZ_NOTE,
					  MAX(ZZZZ_DATE) AS ZZZZ_DATE, MAX(VBPA_KUNNR) AS VBPA_KUNNR_SP
                 FROM R3.OD@UNPO.WORLD GROUP BY VBAK_ZZ021) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_CC A WHERE A.EKKO_ZZ021=B.VBAK_ZZ021)
	   AND B.VBAK_ZZ021 IS NOT NULL);
  COMMIT;

  -- Добавление из CUSTOMERS
  INSERT INTO R3_CC (EKKO_ZZ021,ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE, CUSTOMERS_ID)
    (SELECT KVERM, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE, KUNNR
	     FROM (SELECT KVERM, MAX(ZZZZ_STATUS) AS ZZZZ_STATUS,
		         MAX(ZZZZ_NOTE) AS ZZZZ_NOTE, MAX(ZZZZ_DATE) AS ZZZZ_DATE,
				 MAX(KUNNR) AS KUNNR
                 FROM R3.CUSTOMERS@UNPO.WORLD WHERE KVERM IS NOT NULL GROUP BY KVERM) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_CC A WHERE A.EKKO_ZZ021=B.KVERM)
	   AND B.KVERM IS NOT NULL);
  COMMIT;

  -- Добавление из CC
  INSERT INTO R3_CC (EKKO_ZZ021,EKKO_KDATB, EKKO_KDATE, EKKO_LIFNR, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT EKKO_ZZ021, TO_DATE(EKKO_KDATB,'dd.mm.yyyy'), TO_DATE(EKKO_KDATE,'dd.mm.yyyy'), EKKO_LIFNR, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
	     FROM R3.CC@UNPO.WORLD B
     WHERE NOT EXISTS (SELECT NULL FROM R3_CC A WHERE A.EKKO_ZZ021=B.EKKO_ZZ021)
	   AND B.EKKO_ZZ021 IS NOT NULL);

  COMMIT;

  -- Обновление из OD
  UPDATE R3_CC A
      SET (EKKO_KDATB, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE, CUSTOMERS_ID) =
      (SELECT VEDA_VBEGDAT, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE, VBPA_KUNNR_SP
	     FROM (SELECT VBAK_ZZ021, MAX(TO_DATE(VEDA_VBEGDAT,'dd.mm.yyyy')) AS VEDA_VBEGDAT,
		              MAX(ZZZZ_STATUS) AS ZZZZ_STATUS, MAX(ZZZZ_NOTE) AS ZZZZ_NOTE,
					  MAX(ZZZZ_DATE) AS ZZZZ_DATE, MAX(VBPA_KUNNR) AS VBPA_KUNNR_SP
                 FROM R3.OD@UNPO.WORLD GROUP BY VBAK_ZZ021) B WHERE B.VBAK_ZZ021=A.EKKO_ZZ021 AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM (SELECT VBAK_ZZ021, MAX(VEDA_VBEGDAT) AS VEDA_VBEGDAT,
		              MAX(ZZZZ_STATUS) AS ZZZZ_STATUS, MAX(ZZZZ_NOTE) AS ZZZZ_NOTE,
					  MAX(ZZZZ_DATE) AS ZZZZ_DATE, MAX(VBPA_KUNNR) AS VBPA_KUNNR_SP
                 FROM R3.OD@UNPO.WORLD GROUP BY VBAK_ZZ021) B WHERE B.VBAK_ZZ021=A.EKKO_ZZ021 AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));
  COMMIT;

  -- Обновление из CUSTOMERS
  UPDATE R3_CC A
      SET (ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE, CUSTOMERS_ID) =
      (SELECT ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE, KUNNR
	     FROM (SELECT KVERM, MAX(ZZZZ_STATUS) AS ZZZZ_STATUS,
		         MAX(ZZZZ_NOTE) AS ZZZZ_NOTE, MAX(ZZZZ_DATE) AS ZZZZ_DATE,
				 MAX(KUNNR) AS KUNNR
                 FROM R3.CUSTOMERS@UNPO.WORLD WHERE KVERM IS NOT NULL GROUP BY KVERM) B
				 WHERE B.KVERM=A.EKKO_ZZ021 AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM (SELECT KVERM, MAX(ZZZZ_STATUS) AS ZZZZ_STATUS,
		         MAX(ZZZZ_NOTE) AS ZZZZ_NOTE, MAX(ZZZZ_DATE) AS ZZZZ_DATE,
				 MAX(KUNNR) AS KUNNR
                 FROM R3.CUSTOMERS@UNPO.WORLD WHERE KVERM IS NOT NULL GROUP BY KVERM) B
				 WHERE B.KVERM=A.EKKO_ZZ021 AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));
  COMMIT;

  -- Обновление из CC
  UPDATE R3_CC A
      SET (EKKO_KDATB, EKKO_KDATE, EKKO_LIFNR, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
      (SELECT TO_DATE(EKKO_KDATB,'dd.mm.yyyy'), TO_DATE(EKKO_KDATE,'dd.mm.yyyy'), EKKO_LIFNR, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
	     FROM R3.CC@UNPO.WORLD B WHERE B.EKKO_ZZ021=A.EKKO_ZZ021 AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM R3.CC@UNPO.WORLD B WHERE B.EKKO_ZZ021=A.EKKO_ZZ021 AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));

    COMMIT;

  -- Простановка связей CC с KLS_DOG
  FOR lcur IN (SELECT A.EKKO_ZZ021, A.CUSTOMERS_ID FROM R3_CC A WHERE A.IS_AUTO_LINK=1) LOOP
    BEGIN
      v_tmp:=NULL;
	  SELECT ID INTO v_tmp
 	    FROM KLS_DOG A
	   WHERE (LTRIM(RTRIM(NVL(A.DOG_NUMBER,' ')))=LTRIM(RTRIM(NVL(lcur.EKKO_ZZ021,' '))) OR
	          LTRIM(RTRIM(NVL(A.SHORT_NUMBER,' ')))=LTRIM(RTRIM(NVL(lcur.EKKO_ZZ021,' '))));
    EXCEPTION
      WHEN TOO_MANY_ROWS THEN
        v_tmp:=NULL;
      WHEN OTHERS THEN
        v_tmp:=NULL;
    END;

    UPDATE R3_CC A SET A.DOG_ID=v_tmp WHERE A.EKKO_ZZ021=lcur.EKKO_ZZ021 AND A.IS_AUTO_LINK=1;

  END LOOP;

*/
  COMMIT;

END;

FUNCTION R2M_DOG (R3_KOD VARCHAR2) RETURN NUMBER IS
  v_tmp NUMBER;
BEGIN
  BEGIN
    v_tmp:=NULL;
    SELECT A.DOG_ID INTO v_tmp
 	  FROM R3_CC A
	 WHERE A.EKKO_ZZ021=R3_KOD;
  EXCEPTION
    WHEN OTHERS THEN
	  v_tmp:=NULL;
  END;
  RETURN v_tmp;
END;

PROCEDURE RENEW_SC (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  RENEW_CC(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление
/*  INSERT INTO R3_SC (ASNUM,ASMDT_ASKTX, ASMD_MEINS, EKKO_ZZ021, KERNEL_ID, KERNEL_TAG, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT B.ASMD_ASNUM,B.ASMDT_ASKTX, B.ASMD_MEINS, B.EKKO_ZZ021, C.KERNEL_ID, C.TAG, B.ZZZZ_STATUS, B.ZZZZ_NOTE, B.ZZZZ_DATE
	   FROM R3.SC@UNPO.WORLD B, R3.SERVICES@UNPO.WORLD C
     WHERE B.ASMD_ASNUM=C.R3_ID(+)
	   AND NOT EXISTS (SELECT NULL FROM R3_SC A WHERE A.ASNUM=B.ASMD_ASNUM));
  COMMIT;

  -- Обновление
  UPDATE R3_SC A
      SET (ASMDT_ASKTX, ASMD_MEINS, EKKO_ZZ021, KERNEL_ID, KERNEL_TAG, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
      (SELECT B.ASMDT_ASKTX, B.ASMD_MEINS, B.EKKO_ZZ021, C.KERNEL_ID, C.TAG, B.ZZZZ_STATUS, B.ZZZZ_NOTE, B.ZZZZ_DATE
  	     FROM R3.SC@UNPO.WORLD B, R3.SERVICES@UNPO.WORLD C
        WHERE B.ASMD_ASNUM=C.R3_ID(+) AND B.ASMD_ASNUM=A.ASNUM AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM R3.SC@UNPO.WORLD B
        WHERE B.ASMD_ASNUM=A.ASNUM AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));
  COMMIT;
*/
END;

PROCEDURE RENEW_KONV (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  RENEW_SC(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление из OA
/*  INSERT INTO R3_KONV (KSCHL, T685T_VTEXT, MATCH_ASNUM)
    (SELECT KONV_KSCHL, T685T_VTEXT, MATCH_ASNUM
	   FROM (SELECT KONV_KSCHL, MAX(T685T_VTEXT) AS T685T_VTEXT,
		              MAX(MATCH_ASNUM) AS MATCH_ASNUM
                 FROM R3.OA@UNPO.WORLD GROUP BY KONV_KSCHL) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_KONV A WHERE A.KSCHL=B.KONV_KSCHL)
	   AND B.KONV_KSCHL IS NOT NULL);
  COMMIT;

  -- Обновление из OA
  UPDATE R3_KONV A
      SET (T685T_VTEXT, MATCH_ASNUM) =
      (SELECT T685T_VTEXT, MATCH_ASNUM
	     FROM (SELECT KONV_KSCHL, MAX(T685T_VTEXT) AS T685T_VTEXT,
		              MAX(MATCH_ASNUM) AS MATCH_ASNUM
                 FROM R3.OA@UNPO.WORLD GROUP BY KONV_KSCHL) B WHERE B.KONV_KSCHL=A.KSCHL)
    WHERE EXISTS (SELECT NULL FROM (SELECT KONV_KSCHL, MAX(T685T_VTEXT) AS T685T_VTEXT,
		              MAX(MATCH_ASNUM) AS MATCH_ASNUM
                 FROM R3.OA@UNPO.WORLD GROUP BY KONV_KSCHL) B WHERE B.KONV_KSCHL=A.KSCHL);
  COMMIT;
*/
END;

PROCEDURE RENEW_OA (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  RENEW_KONV(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_OD(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление
/*  INSERT INTO R3_OA (ZZZZ_ID, VBAK_VBELN, VBAP_POSNR, KONV_KSCHL, KONV_KBETR, KONV_KRECH, KONV_WAERS, KONV_KPEIN, KONV_KMEIN, ZZZZ_SATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT ZZZZ_ID, VBAK_VBELN, VBAP_POSNR, KONV_KSCHL, KONV_KBETR, KONV_KRECH, KONV_WAERS, KONV_KPEIN, KONV_KMEIN, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
	   FROM R3.OA@UNPO.WORLD B
     WHERE NOT EXISTS (SELECT NULL FROM R3_OA A WHERE A.ZZZZ_ID=B.ZZZZ_ID)
	   AND EXISTS (SELECT NULL FROM R3_OD C WHERE C.VBAK_VBELN=B.VBAK_VBELN AND C.VBAP_POSNR=B.VBAP_POSNR));
  COMMIT;

  -- Обновление
  UPDATE R3_OA A
      SET (VBAK_VBELN, VBAP_POSNR, KONV_KSCHL, KONV_KBETR, KONV_KRECH, KONV_WAERS, KONV_KPEIN, KONV_KMEIN, ZZZZ_SATUS, ZZZZ_FILE, ZZZZ_DATE) =
      (SELECT VBAK_VBELN, VBAP_POSNR, KONV_KSCHL, KONV_KBETR, KONV_KRECH, KONV_WAERS, KONV_KPEIN, KONV_KMEIN, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
  	     FROM R3.OA@UNPO.WORLD B WHERE B.ZZZZ_ID=A.ZZZZ_ID)
    WHERE EXISTS (SELECT NULL FROM R3.OA@UNPO.WORLD B WHERE B.ZZZZ_ID=A.ZZZZ_ID);
  COMMIT;
*/
END;

PROCEDURE RENEW_ROUTENODES (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  RENEW_R3_GD(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление
/*  INSERT INTO R3_ROUTENODES (KNOTE, BEZEI)
    (SELECT '000000', '' FROM dual
     WHERE NOT EXISTS (SELECT NULL FROM R3_ROUTENODES A WHERE A.KNOTE='000000'));

  INSERT INTO R3_ROUTENODES (KNOTE, BEZEI)
    (SELECT '000003', 'РЕЗЕРВУАР' FROM dual
     WHERE NOT EXISTS (SELECT NULL FROM R3_ROUTENODES A WHERE A.KNOTE='000003'));

  INSERT INTO R3_ROUTENODES (KNOTE, BEZEI)
    (SELECT '000004', 'САМОВЫВОЗ' FROM dual
     WHERE NOT EXISTS (SELECT NULL FROM R3_ROUTENODES A WHERE A.KNOTE='000004'));
  COMMIT;

  INSERT INTO R3_ROUTENODES (KNOTE, BEZEI, BAHNR)
    (SELECT KNOTE, BEZEI, BAHNR
	   FROM R3.ROUTENODES@UNPO.WORLD B
     WHERE B.KNOTE<>'Автотранспорт (самовывоз)' AND B.KNOTE<>'C' AND NOT EXISTS (SELECT NULL FROM R3_ROUTENODES A WHERE A.KNOTE=B.KNOTE));
  COMMIT;

  -- Обновление
  UPDATE R3_ROUTENODES A
      SET (BEZEI, BAHNR) =
      (SELECT BEZEI, BAHNR
  	     FROM R3.ROUTENODES@UNPO.WORLD B WHERE B.KNOTE=A.KNOTE )
    WHERE EXISTS (SELECT NULL FROM R3.ROUTENODES@UNPO.WORLD B WHERE  B.KNOTE=A.KNOTE);
  COMMIT;
*/
END;

PROCEDURE RENEW_ROUTES (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  RENEW_ROUTENODES(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление
/*  INSERT INTO R3_ROUTES (ROUTE, KNANF, KNEND, BEZEI, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT ROUTE, KNANF,KNEND,BEZEI, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
	   FROM R3.V_ROUTES_UHTA@UNPO.WORLD B
     WHERE NOT EXISTS (SELECT NULL FROM R3_ROUTES A WHERE A.ROUTE=B.ROUTE));
  COMMIT;

  -- Добавление из OD
  INSERT INTO R3_ROUTES (ROUTE)
    (SELECT VBAP_ROUTE
	   FROM (SELECT DISTINCT VBAP_ROUTE FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_ROUTES A WHERE A.ROUTE=B.VBAP_ROUTE)
	   AND B.VBAP_ROUTE IS NOT NULL);
  COMMIT;

  -- Обновление
  UPDATE R3_ROUTES A
      SET (KNANF, KNEND, BEZEI, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
      (SELECT KNANF,KNEND,BEZEI, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
  	     FROM R3.V_ROUTES_UHTA@UNPO.WORLD B WHERE B.ROUTE=A.ROUTE AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM R3.V_ROUTES_UHTA@UNPO.WORLD B WHERE B.ROUTE=A.ROUTE  AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1));
  COMMIT;

  RENEW_ROUTE_FULL(DATE_BEG,DATE_END,param1,param2,param3);
*/
END;

PROCEDURE RENEW_ROUTE_FULL (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_Tmp NUMBER;
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление
/*  INSERT INTO R3_ROUTE_FULL (ROUTE, ANFRF, KNANF, KNEND, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT ROUTE, ANFRF, KNANF, KNEND, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
	   FROM R3.ROUTES@UNPO.WORLD B
     WHERE B.ROUTE<>'A00000' AND NOT EXISTS (SELECT NULL FROM R3_ROUTE_FULL A WHERE A.ROUTE=B.ROUTE AND A.ANFRF=B.ANFRF));
  COMMIT;

  -- Обновление
  UPDATE R3_ROUTE_FULL A
      SET (KNANF, KNEND, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
      (SELECT KNANF, KNEND, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE
  	     FROM R3.ROUTES@UNPO.WORLD B WHERE B.ROUTE=A.ROUTE AND A.ANFRF=B.ANFRF AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
    WHERE EXISTS (SELECT NULL FROM R3.ROUTES@UNPO.WORLD B WHERE B.ROUTE=A.ROUTE AND A.ANFRF=B.ANFRF AND NVL(B.ZZZZ_DATE,SYSDATE+1)<>NVL(A.ZZZZ_DATE,SYSDATE+1))
	  AND A.ROUTE<>'A00000' ;
  COMMIT;
*/
END;

PROCEDURE RENEW_LPRIO (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

/*  IF IsFull=1 THEN
    UPDATE R3_LPRIO A
      SET (BEZEI, KERNEL_ID) =
	  (SELECT B.BEZEI, B.KERNEL_ID FROM R3.LPRIO@UNPO.WORLD B WHERE B.LPRIO=A.VBAP_LPRIO)
    WHERE EXISTS (SELECT NULL FROM R3.LPRIO@UNPO.WORLD B WHERE B.LPRIO=A.VBAP_LPRIO);

    COMMIT;
  END IF;

  INSERT INTO R3_LPRIO (VBAP_LPRIO,BEZEI,KERNEL_ID)
    (SELECT LPRIO,BEZEI,KERNEL_ID FROM R3.LPRIO@UNPO.WORLD B
    WHERE NOT EXISTS (SELECT NULL FROM R3_LPRIO A WHERE A.VBAP_LPRIO=B.LPRIO));

  COMMIT;

  -- Добавление из OD
  INSERT INTO R3_LPRIO (VBAP_LPRIO)
    (SELECT VBAP_LPRIO
	   FROM (SELECT DISTINCT VBAP_LPRIO FROM R3.OD@UNPO.WORLD) B
     WHERE NOT EXISTS (SELECT NULL FROM R3_LPRIO A WHERE A.VBAP_LPRIO=B.VBAP_LPRIO)
	   AND B.VBAP_LPRIO IS NOT NULL);
  COMMIT;
*/
END;


PROCEDURE RENEW_VBAK (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
  v_tmp VARCHAR2(12);
  v_tmp2 VARCHAR2(12);
BEGIN

  RENEW_VSART(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_VSTEL(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_ROUTES(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_WERKS_LGORT(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_VSBED(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_AUART(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_PREDPR(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Добавление в R3_TRATY
/*  INSERT INTO R3_TRATY (VBKD_TRATY)
    (SELECT VBKD_TRATY FROM (SELECT DISTINCT VBKD_TRATY FROM R3.OD@UNPO.WORLD) B
    WHERE NOT EXISTS (SELECT NULL FROM R3_TRATY A WHERE A.VBKD_TRATY=B.VBKD_TRATY)
	  AND B.VBKD_TRATY IS NOT NULL);
  
  IF IsFull=1 THEN
    UPDATE R3_VBAK A
      SET (VBAK_VKORG, VBAK_VTWEG, VBAP_VSTEL, VBAK_ZZ021, VBAK_AUART, VBAK_VDATU, VBAK_VSBED,
	       VBAP_ROUTE, VBAP_WERKS, LGORT, NP_OWNER, NP_PRODR, TEXT1_Y005, MVRG1, TEXT3_Y003,
		   NPR_NAME, TARIF_CODE, TRANSP_NUM, CONTRACTOR_ATTR, GAR_Y007, MPS_Y006, 
		   OT_LIFNR, SH_KUNNR, VBPA_KUNNR, PO_KNA1_NAME1, VBPA_KUNNR_SP, ZZZZ_STATUS, ZZZZ_FILE,
		   ZZZZ_DATE,VBKD_BSTKD,VBKD_TRATY,VBKD_VSART, V_TJ30_TXT04) =
	  (SELECT B.VBAK_VKORG, B.VBAK_VTWEG, B.VBAP_VSTEL, B.VBAK_ZZ021, B.VBAK_AUART, TO_DATE(B.VBAK_VDATU,'dd.mm.yyyy'),
	          B.VBAK_VSBED, B.VBAP_ROUTE, TO_CHAR(TO_NUMBER(B.VBAP_WERKS)), TO_CHAR(TO_NUMBER(B.LGORT)), TO_CHAR(TO_NUMBER(B.NP_OWNER)),
			  TO_CHAR(TO_NUMBER(B.NP_PRODR)), B.TEXT1_Y005,
			  B.MVGR1, B.TEXT3_Y003, B.NRR_NAME, B.TARIF_CODE, B.TRANSP_NUM, TO_NUMBER(B.CONTRACT_ATTR), B.GAR_Y007,
			  B.MPS_Y006, B.OT_LIFNR, B.SH_KUNNR, B.VBPA_KUNNR, B.PO_KNA1_NAME1,
			  B.VBPA_KUNNR_SP, B.ZZZZ_STATUS, B.ZZZZ_NOTE, B.ZZZZ_DATE,B.VBKD_BSTKD,B.VBKD_TRATY,B.VBKD_VSART, B.V_TJ30_TXT04
	     FROM R3.V_VBAK_UHTA@UNPO.WORLD B 
		 WHERE B.VBAK_VBELN=A.VBELN)
      WHERE EXISTS 
	    (SELECT NULL FROM R3.V_VBAK_UHTA@UNPO.WORLD B WHERE B.VBAK_VBELN=A.VBELN);

    COMMIT;
  END IF;

  INSERT INTO R3_VBAK (VBELN, VBAK_VKORG, VBAK_VTWEG, VBAP_VSTEL, VBAK_ZZ021, VBAK_AUART, VBAK_VDATU, VBAK_VSBED,
	       VBAP_ROUTE, VBAP_WERKS, LGORT, NP_OWNER, NP_PRODR, TEXT1_Y005, MVRG1, TEXT3_Y003,
		   NPR_NAME, TARIF_CODE, TRANSP_NUM, CONTRACTOR_ATTR, GAR_Y007, MPS_Y006, 
		   OT_LIFNR, SH_KUNNR, VBPA_KUNNR, PO_KNA1_NAME1, VBPA_KUNNR_SP, ZZZZ_STATUS, ZZZZ_FILE,
		   ZZZZ_DATE,VBKD_BSTKD,VBKD_TRATY,VBKD_VSART, V_TJ30_TXT04)
    (SELECT B.VBAK_VBELN,B.VBAK_VKORG, B.VBAK_VTWEG, B.VBAP_VSTEL, B.VBAK_ZZ021, B.VBAK_AUART, TO_DATE(B.VBAK_VDATU,'dd.mm.yyyy'),
	          B.VBAK_VSBED, B.VBAP_ROUTE, TO_CHAR(TO_NUMBER(B.VBAP_WERKS)), TO_CHAR(TO_NUMBER(B.LGORT)),
			  TO_CHAR(TO_NUMBER(B.NP_OWNER)), TO_CHAR(TO_NUMBER(B.NP_PRODR)), B.TEXT1_Y005,
			  B.MVGR1, B.TEXT3_Y003, B.NRR_NAME, B.TARIF_CODE, B.TRANSP_NUM, TO_NUMBER(B.CONTRACT_ATTR), B.GAR_Y007,
			  B.MPS_Y006, B.OT_LIFNR, B.SH_KUNNR, B.VBPA_KUNNR, B.PO_KNA1_NAME1,
			  B.VBPA_KUNNR_SP, B.ZZZZ_STATUS, B.ZZZZ_NOTE, B.ZZZZ_DATE, B.VBKD_BSTKD,B.VBKD_TRATY,B.VBKD_VSART, B.V_TJ30_TXT04
	  FROM R3.V_VBAK_UHTA@UNPO.WORLD B
    WHERE NOT EXISTS (SELECT NULL FROM R3_VBAK A WHERE A.VBELN=B.VBAK_VBELN));

  COMMIT;
  
  -- Простановка связей R3_VBAK с MONTH
  FOR lcur IN (SELECT A.VBELN,A.VBKD_BSTKD FROM R3_VBAK A WHERE A.IS_AUTO_LINK=1) LOOP
    BEGIN
      v_tmp:=NULL;
	  -- Есть ли вообще такая разнарядка НПО
	  SELECT nom_zd INTO v_tmp
 	    FROM MONTH A
	   WHERE A.nom_zd=lcur.VBKD_BSTKD;
    EXCEPTION
      WHEN TOO_MANY_ROWS THEN
        v_tmp:=NULL;
      WHEN OTHERS THEN
        v_tmp:=NULL;
    END;
	
	IF v_tmp IS NOT NULL THEN
	  -- Если есть уже ручная привязка этой разнарядки НПО к другой разнарядке R3 
      BEGIN
   	    v_tmp2:=NULL;
	    SELECT nom_zd INTO v_tmp2
   	      FROM R3_VBAK A
  	     WHERE A.nom_zd=v_tmp AND A.IS_AUTO_LINK=0 AND A.VBELN<>lcur.VBELN;
  	    v_tmp:=NULL; -- Есть другая ручная привязка с этой разнарядкой НПО
      EXCEPTION
        WHEN TOO_MANY_ROWS THEN
          v_tmp:=NULL; -- Есть другая ручная привязка с этой разнарядкой НПО
        WHEN NO_DATA_FOUND THEN
          NULL; -- Других ручных привязок на данную разнарядку НПО не найдено
        WHEN OTHERS THEN
          v_tmp:=NULL;
      END;
	END IF;
	
	IF v_tmp IS NOT NULL THEN
	  -- Уберем другие автоматические привязки с этой разнарядкой НПО
      UPDATE R3_VBAK A SET A.NOM_ZD=NULL WHERE A.NOM_ZD=v_tmp AND A.VBELN<>lcur.VBELN AND A.IS_AUTO_LINK=1;
	END IF;   
	
    UPDATE R3_VBAK A SET A.NOM_ZD=v_tmp WHERE A.VBELN=lcur.VBELN AND A.IS_AUTO_LINK=1;
  END LOOP;

  COMMIT;
*/
END;

PROCEDURE RENEW_OD (DATE_BEG DATE:=TRUNC(SYSDATE,'MONTH') ,DATE_END DATE:=SYSDATE, param1 VARCHAR2:='', param2 VARCHAR2:='', param3 VARCHAR2:='') IS
  IsFull NUMBER(1);
BEGIN

  RENEW_BLOCKS(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_LPRIO(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_MATERIALS(DATE_BEG,DATE_END,param1,param2,param3);
  RENEW_VBAK(DATE_BEG,DATE_END,param1,param2,param3);

  IF param1 || ' ' <> ' ' THEN
    IsFull:=1;
  ELSE
    IsFull:=0;
  END IF;

  -- Обновление 
/*  IF IsFull=1 THEN
    UPDATE R3_OD A
      SET (ZZZZ_ID, VBAP_CHARG, VBAP_KWMENG, VBAP_VRKME, VBAP_UEBTO, VBAP_KBMENG, 
	       VBAP_MATNR, VBAP_LPRIO, V_TJ30_TXT04, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE) =
 	    (SELECT ZZZZ_ID, VBAP_CHARG, VBAP_KWMENG, VBAP_VRKME, VBAP_UEBTO, VBAP_KBMENG, 
		   VBAP_MATNR, VBAP_LPRIO, V_TJ30_TXT04, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
	       FROM R3.OD@UNPO.WORLD B WHERE B.VBAK_VBELN=A.VBAK_VBELN AND B.VBAP_POSNR=A.VBAP_POSNR)
      WHERE EXISTS (SELECT NULL FROM R3.OD@UNPO.WORLD B WHERE B.VBAK_VBELN=A.VBAK_VBELN AND B.VBAP_POSNR=A.VBAP_POSNR);

    COMMIT;
  END IF;

  -- Добавление
  INSERT INTO R3_OD (VBAK_VBELN, VBAP_POSNR, ZZZZ_ID, VBAP_CHARG, VBAP_KWMENG, VBAP_VRKME, VBAP_UEBTO, VBAP_KBMENG, 
	       VBAP_MATNR, VBAP_LPRIO, V_TJ30_TXT04, ZZZZ_STATUS, ZZZZ_FILE, ZZZZ_DATE)
    (SELECT VBAK_VBELN, VBAP_POSNR, ZZZZ_ID, VBAP_CHARG, VBAP_KWMENG, VBAP_VRKME, VBAP_UEBTO, VBAP_KBMENG,
	       VBAP_MATNR, VBAP_LPRIO, V_TJ30_TXT04, ZZZZ_STATUS, ZZZZ_NOTE, ZZZZ_DATE
	  FROM R3.OD@UNPO.WORLD B
    WHERE NOT EXISTS (SELECT NULL FROM R3_OD A WHERE A.VBAK_VBELN=B.VBAK_VBELN AND A.VBAP_POSNR=B.VBAP_POSNR));

  COMMIT;

  -- Обновление нек.полей в разнарядке
  UPDATE R3_VBAK A
      SET (VBAP_MATNR,VBAP_KWMENG,VBAP_KBMENG) =
	  (SELECT B.VBAP_MATNR, NVL(B.VBAP_KWMENG,0), NVL(B.VBAP_KBMENG,0)
	     FROM V_VBAK_LAST_POSNR B WHERE B.VBAK_VBELN=A.VBELN)
      WHERE EXISTS (SELECT NULL FROM V_VBAK_LAST_POSNR B WHERE B.VBAK_VBELN=A.VBELN)
	    AND EXISTS (SELECT NULL FROM R3.V_VBAK_UHTA@UNPO.WORLD B WHERE B.VBAK_VBELN=A.VBELN);

    COMMIT;
*/  
END;

procedure AddVbakRow(pCOMMIT NUMBER, pVBAP_VSTEL VARCHAR2,  pVBKD_BSTKD VARCHAR2,pVBKD_BSTDK varchar2,
   pVBAK_VBELN VARCHAR2, pVBAP_POSNR varchar2,pVBAK_VDATU varchar2,pVBAK_VSBED VARCHAR2,pUNKNOWN1 VARCHAR2,
   pVBAP_MATNR VARCHAR2,pOT_LIFNR VARCHAR2,pUNKNOWN2 VARCHAR2,pUNKNOWN3 VARCHAR2,
   pVBAK_VKORG VARCHAR2, pVBAK_VTWEG VARCHAR2, 
    pVBAP_OICONTNR VARCHAR2, pVBAK_ZZ021 VARCHAR2, pVEDA_VBEGDAT varchar2,  
    	pVBAK_AUART VARCHAR2, pTVAKT_BEZEI VARCHAR2,  
	pVBKD_VSART VARCHAR2, pVBKD_TRATY VARCHAR2, pVBAP_LPRIO VARCHAR2, pVBAP_ROUTE VARCHAR2,
	 pVBAP_WERKS VARCHAR2, pLGORT VARCHAR2,  pVBAP_KWMENG varchar2, 
	pVBAP_VRKME VARCHAR2,  pSH_KUNNR VARCHAR2, pINCO1 VARCHAR2, pINCO2 VARCHAR2,
	pZLSCH VARCHAR2, pSTCEG_L VARCHAR2, pZTERM VARCHAR2, pV_TJ30_TXT04 VARCHAR2, pVBPA_KUNNR VARCHAR2, 
	pVBPA_LIFNR_SP VARCHAR2, pVBAK_STCEG_L VARCHAR2, pSPART VARCHAR2) 
	AS
	vMonthReestrID Month_reestr.ID%TYPE;
	vNum_ree VARCHAR2(10);
	vNom_zd  VARCHAR2(12);
	vVBKD_BSTDK DATE;
	vVBAP_KWMENG NUMBER;
BEGIN

/*  IF pVBKD_BSTDK||' '=' ' THEN*/
    vVBKD_BSTDK:=TO_DATE(pVBAK_VDATU,'dd.mm.yyyy');
/*  ELSE	
    vVBKD_BSTDK:=TO_DATE(pVBKD_BSTDK,'dd.mm.yyyy');
  END IF;*/  
  
  vVBAP_KWMENG:=ora_val(pVBAP_KWMENG,'9999999999999.999');

	vNum_ree:=substr(Trim(pVBKD_BSTKD),1,instr(Trim(pVBKD_BSTKD),'/')-1);
	vNom_zd:=substr(Trim(pVBKD_BSTKD),instr(Trim(pVBKD_BSTKD),'/')+1);
	BEGIN
	  SELECT /*+ RULE */ ID
        INTO vMonthReestrID
	 	FROM month_reestr
	  WHERE Num_ree=to_number(vNum_ree);
	EXCEPTION
	  WHEN OTHERS THEN
	    IF vMonthReestrID is null THEN
--          RaiseError('Реестр '||vNum_ree||' не найден, разнарядка '|| pVBAK_VBELN || ' (' || vNom_zd || ') - не загружена!');
          NULL;
		END IF;
	END;
  
-- Обновляем документ
	UPDATE r3_vbak SET (VBAK_VKORG,VBAK_VTWEG,VBAP_VSTEL,
    	VBAP_OICONTNR,VBAK_ZZ021,VEDA_VBEGDAT,VBKD_BSTKD,VBKD_BSTDK,VBAK_AUART,TVAKT_BEZEI,VBAK_VDATU,
		VBAK_VSBED,VBKD_VSART,VBKD_TRATY,VBAP_LPRIO,VBAP_ROUTE,VBAP_POSNR,VBAP_WERKS,LGORT,VBAP_MATNR,VBAP_KWMENG, 
		VBAP_VRKME,OT_LIFNR,SH_KUNNR,INCO1,INCO2,ZLSCH,STCEG_L,ZTERM,V_TJ30_TXT04,VBPA_KUNNR, 
		VBPA_LIFNR_SP,VBAK_STCEG_L,SPART,NOM_ZD,MONTH_REESTR_ID)=
	  (SELECT pVBAK_VKORG,pVBAK_VTWEG,pVBAP_VSTEL,
    	pVBAP_OICONTNR, pVBAK_ZZ021,To_date(pVEDA_VBEGDAT,'dd.mm.yyyy'), pVBKD_BSTKD , vVBKD_BSTDK,
    	pVBAK_AUART, pTVAKT_BEZEI, to_date(pVBAK_VDATU,'dd.mm.yyyy'), pVBAK_VSBED, pVBKD_VSART, pVBKD_TRATY, pVBAP_LPRIO,
		pVBAP_ROUTE, pVBAP_POSNR, pVBAP_WERKS, pLGORT, pVBAP_MATNR, vVBAP_KWMENG, 
		pVBAP_VRKME, pOT_LIFNR, pSH_KUNNR, pINCO1, pINCO2, pZLSCH, pSTCEG_L, pZTERM, pV_TJ30_TXT04, pVBPA_KUNNR, 
		pVBPA_LIFNR_SP, pVBAK_STCEG_L, pSPART,vNom_zd,vMonthReestrID FROM dual)
	WHERE VBELN=pVBAK_VBELN;

	IF SQL%NOTFOUND THEN
 -- Добавляем документ
	    INSERT INTO r3_vbak (VBAK_VKORG,VBAK_VTWEG,VBAP_VSTEL,
		VBAP_OICONTNR,VBAK_ZZ021,VEDA_VBEGDAT,VBKD_BSTKD,VBKD_BSTDK,VBELN,VBAK_AUART,TVAKT_BEZEI,VBAK_VDATU,
		VBAK_VSBED,VBKD_VSART,VBKD_TRATY,VBAP_LPRIO,VBAP_ROUTE,VBAP_POSNR,VBAP_WERKS,LGORT,VBAP_MATNR,VBAP_KWMENG, 
		VBAP_VRKME,OT_LIFNR,SH_KUNNR,INCO1,INCO2,ZLSCH,STCEG_L,ZTERM,V_TJ30_TXT04,VBPA_KUNNR, 
		VBPA_LIFNR_SP,VBAK_STCEG_L,SPART,NOM_ZD,MONTH_REESTR_ID)
  		VALUES (pVBAK_VKORG,pVBAK_VTWEG,pVBAP_VSTEL,
    	pVBAP_OICONTNR, pVBAK_ZZ021,To_date(pVEDA_VBEGDAT,'dd.mm.yyyy'), pVBKD_BSTKD , vVBKD_BSTDK,
    	pVBAK_VBELN, pVBAK_AUART, pTVAKT_BEZEI, to_date(pVBAK_VDATU,'dd.mm.yyyy'), pVBAK_VSBED, pVBKD_VSART, pVBKD_TRATY, pVBAP_LPRIO,
		pVBAP_ROUTE, pVBAP_POSNR, pVBAP_WERKS, pLGORT, pVBAP_MATNR, vVBAP_KWMENG, 
		pVBAP_VRKME, pOT_LIFNR, pSH_KUNNR, pINCO1, pINCO2, pZLSCH, pSTCEG_L, pZTERM, pV_TJ30_TXT04, pVBPA_KUNNR, 
		pVBPA_LIFNR_SP, pVBAK_STCEG_L, pSPART,vNom_zd,vMonthReestrID);
	END IF;
	
	
	-- COMMIT
	IF pCOMMIT=1 THEN
	  COMMIT;
	END IF;
END;

procedure AddRCRow(pCOMMIT NUMBER, pID_MS VARCHAR2, pVSTEL VARCHAR2, pID_SAP VARCHAR2, pID_SAP_PSN VARCHAR2) 
	AS
	vID_MS NUMBER;
BEGIN

  vID_MS:=ora_val(pID_MS);

  -- Обновляем документ
	UPDATE r3_kvit2sap SET (ID_MS, VSTEL, ID_SAP, ID_SAP_PSN, KVIT_ID)=
	  (SELECT vID_MS, pVSTEL, pID_SAP, pID_SAP_PSN,vID_MS FROM dual)
	WHERE ID_MS=vID_MS;

	IF SQL%NOTFOUND THEN
     -- Добавляем документ
	    INSERT INTO r3_kvit2sap (ID_MS, VSTEL, ID_SAP, ID_SAP_PSN, KVIT_ID)
  		VALUES (vID_MS, pVSTEL, pID_SAP, pID_SAP_PSN, vID_MS);
	END IF;
	
	-- COMMIT
	IF pCOMMIT=1 THEN
	  COMMIT;
	END IF;
END;

procedure DelVbakRow(pCOMMIT NUMBER, pVBELN VARCHAR2) AS
BEGIN

  -- Обновляем документ
  DELETE FROM r3_vbak WHERE VBELN=pVBELN;
	
  -- COMMIT
  IF pCOMMIT=1 THEN
    COMMIT;
  END IF;

END;

procedure DelRCRow(pCOMMIT NUMBER, pID_SAP VARCHAR2) AS 
BEGIN

  -- Обновляем документ
  DELETE FROM r3_kvit2sap WHERE ID_SAP=pID_SAP;
	
  -- COMMIT
  IF pCOMMIT=1 THEN
    COMMIT;
  END IF;
END;

-- Вернуть номер файла для выгрузки поставок
FUNCTION GET_SEQ_OF RETURN NUMBER IS
  vTmp NUMBER;  
BEGIN
  select SEQ_OF.NextVal into vTmp from dual;
  RETURN vTmp;
END;  

END;

/

