--
-- FOR_DIAGRAM  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_Diagram AS

-- Очистка таблицы DIAGRAM для текущего пользователя
PROCEDURE EMPTY_DIAGRAM IS
BEGIN
  DELETE FROM DIAGRAM 
  WHERE TERMINAL_NAME = For_Init.GetCurrTerm
    AND OSUSER_NAME = For_Init.GetCurrUser;

  COMMIT;
END;

-- Отгрузка с УНП по месяцам
PROCEDURE UNP_MON (DATE_BEG VARCHAR2, DATE_END VARCHAR2) IS
BEGIN
  EMPTY_DIAGRAM;
     
  INSERT INTO DIAGRAM (COL_SORT,COL_X1_NAME,COL_X1_VALUE,COL_Y1_NAME,COL_Y1_VALUE,
       COL_Y2_NAME,COL_Y2_VALUE,COL_Y3_NAME,COL_Y3_VALUE,COL_Y4_NAME,COL_Y4_VALUE,TITLE)
  SELECT
    TO_CHAR(KVIT.DATE_OTGR,'yyyymm') AS COL_SORT,  
    'Период' AS COL_X1_NAME,
    TO_CHAR(KVIT.DATE_OTGR,'Month yyyy') AS COL_X1_VALUE,  
    'Мазут' AS COL_Y1_NAME,
    SUM(DECODE(SUBSTR(KVIT.PROD_ID_NPR,1,3),'115',KVIT.ves/1000,0)) AS COL_Y1_VALUE,
    'Дизельное топливо' AS COL_Y2_NAME,
    SUM(DECODE(SUBSTR(KVIT.PROD_ID_NPR,1,3),'104',KVIT.ves/1000,0)) AS COL_Y2_VALUE,
    'Бензин А-76 (АИ-80)' AS COL_Y3_NAME,
    SUM(DECODE(SUBSTR(KVIT.PROD_ID_NPR,1,4),'1030',KVIT.ves/1000,0)) AS COL_Y3_VALUE,
    'Бензин АИ-92' AS COL_Y4_NAME,
    SUM(DECODE(SUBSTR(KVIT.PROD_ID_NPR,1,4),'1031',KVIT.ves/1000,'1032',KVIT.ves/1000,0)) AS COL_Y4_VALUE,
	'с '||DATE_BEG||' по '||DATE_END
  FROM KVIT
  WHERE date_otgr BETWEEN TO_DATE(DATE_BEG,'dd.mm.yyyy') AND TO_DATE(DATE_END,'dd.mm.yyyy')
  GROUP BY
    TO_CHAR(KVIT.DATE_OTGR,'yyyymm'),  
    TO_CHAR(KVIT.DATE_OTGR,'Month yyyy');
	
  COMMIT;
  
  UPDATE V_DIAGRAM SET 
    COL_Y1_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y1_VALUE))),
    COL_Y2_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y2_VALUE))),
    COL_Y3_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y3_VALUE))),
    COL_Y4_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y4_VALUE)));
 	
  COMMIT;
  	  
END; 
   				   
-- Движение товара по месяцам за последние 4 года (по данным КО)
PROCEDURE OPER_MON_KONS (DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL VARCHAR2, ORG_KIND_GRP VARCHAR2, AZC VARCHAR2, PROD_GR VARCHAR2, PROD VARCHAR2, TIP_OP VARCHAR2, IS_SUM NUMBER) IS
  nFILIAL NUMBER;
  nORG_KIND_GRP NUMBER;
  nAZC NUMBER;
  cPROD_GR VARCHAR2(30);
  nPROD NUMBER;
  dDATE_BEG DATE;
  dDATE_END DATE;
  nTIP_OP NUMBER;
  nIS_SUM NUMBER;
  CNT_YEARS NUMBER;
  nYEAR_BEG NUMBER;
  cPRIM VARCHAR2(200);
  cTMP VARCHAR2(200);
  cZPT VARCHAR2(1);
  cur_month NUMBER;
  last_oper DATE;
BEGIN
  EMPTY_DIAGRAM;
  
  cnt_years:=7; -- за последние 7 лет
  BEGIN
    SELECT MAX(date_oper) INTO last_oper FROM OBOROT_KONS;
  EXCEPTION
    WHEN OTHERS THEN
	  last_oper:=TO_DATE(DATE_END,'dd.mm.yyyy');
  END;	  	
  cur_month:=TO_NUMBER(TO_CHAR(last_oper,'MM')); -- текущий месяц
  
  dDATE_END:=TRUNC(ADD_MONTHS(TO_DATE(date_end,'dd.mm.yyyy'),12),'yyyy')-1;
  dDATE_BEG:=ADD_MONTHS(dDATE_END,-cnt_years*12)+1;
  nYEAR_BEG:=TO_NUMBER(TO_CHAR(dDATE_BEG,'yyyy'));
  cPRIM:='';
  cZPT:='';
  
  
  IF FILIAL<>'*' AND FILIAL IS NOT NULL THEN
    nFILIAL:=TO_NUMBER(FILIAL);
	BEGIN
	  SELECT NAME INTO cTMP FROM ORG_STRUCTURE WHERE ID=nFILIAL;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Филиал: '||cTMP||' ';
	cZPT:=';';	  
  ELSE
    nFILIAL:=NULL;
	cPRIM:=cPRIM||cZPT||' Все филиалы ';	  
	cZPT:=';';	  
  END IF;

  IF ORG_KIND_GRP<>'*' AND ORG_KIND_GRP IS NOT NULL THEN
    nORG_KIND_GRP:=TO_NUMBER(ORG_KIND_GRP);
	BEGIN
	  SELECT MAX(GROUP_KIND_NAME) INTO cTMP FROM KLS_ORG_KIND WHERE GROUP_KIND_ID=nORG_KIND_GRP;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Тип объекта: '||cTMP||' ';
	cZPT:=';';	  
  ELSE
    nORG_KIND_GRP:=NULL;
	cPRIM:=cPRIM||cZPT||' Все типы объектов ';	  
	cZPT:=';';	  
  END IF;
  
  IF AZC<>'*' AND AZC IS NOT NULL THEN
    nAZC:=TO_NUMBER(AZC);
	BEGIN
	  SELECT NAME INTO cTMP FROM ORG_STRUCTURE WHERE ID=nAZC;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Подразделение: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    nAZC:=NULL;
	cPRIM:=cPRIM||cZPT||' Все подразделения ';	  
	cZPT:=';';	  
  END IF;

  IF TIP_OP<>'*' AND TIP_OP IS NOT NULL THEN
    nTIP_OP:=TO_NUMBER(TIP_OP);
  ELSE
    nTIP_OP:=NULL;
  END IF;

  nIS_SUM:=IS_SUM;
  
  IF PROD_GR<>'*' AND PROD_GR IS NOT NULL THEN
    cPROD_GR:=PROD_GR;
	BEGIN
	  SELECT MAX(NAME_GLOBAL_GR) INTO cTMP FROM KLS_PROD_GR_KONS WHERE ID_GLOBAL_GR=cPROD_GR;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Группа продуктов: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    cPROD_GR:=NULL;
  END IF;

  IF PROD<>'*' AND PROD IS NOT NULL THEN
    nPROD:=TO_NUMBER(PROD);
	BEGIN
	  SELECT GROUP_NAME INTO cTMP FROM KLS_PROD_GROUPS WHERE ID=nPROD;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Продукт: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    nPROD:=NULL;
  END IF;
  
  IF cPROD_GR IS NULL AND nPROD IS NULL THEN
	cPRIM:=cPRIM||cZPT||' Все продукты ';	  
	cZPT:=';';	  
  END IF;  

  IF nPROD=176 THEN
    -- Фасовка + сопутствующие

  INSERT INTO DIAGRAM (COL_SORT,COL_X1_NAME,COL_X1_VALUE,COL_Y1_NAME,COL_Y1_VALUE,
       COL_Y2_NAME,COL_Y2_VALUE,COL_Y3_NAME,COL_Y3_VALUE,COL_Y4_NAME,COL_Y4_VALUE,
       COL_Y5_NAME,COL_Y5_VALUE,COL_Y6_NAME,COL_Y6_VALUE,COL_Y7_NAME,COL_Y7_VALUE,TITLE, PRIM)
  SELECT
    month_num AS COL_SORT,  
    'Месяц' AS COL_X1_NAME,
    month_str AS COL_X1_VALUE,  
    TO_CHAR(nYEAR_BEG+0) ||' год' AS COL_Y1_NAME, -- 1 год
    SUM(DECODE(year_num,nYEAR_BEG+0,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y1_VALUE,
    TO_CHAR(nYEAR_BEG+1) ||' год' AS COL_Y2_NAME, -- 2 год
    SUM(DECODE(year_num,nYEAR_BEG+1,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y2_VALUE,
    TO_CHAR(nYEAR_BEG+2) ||' год' AS COL_Y3_NAME, -- 3 год
    SUM(DECODE(year_num,nYEAR_BEG+2,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y3_VALUE,
    TO_CHAR(nYEAR_BEG+3) ||' год' AS COL_Y4_NAME, -- 4 год
    SUM(DECODE(year_num,nYEAR_BEG+3,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y4_VALUE,
    TO_CHAR(nYEAR_BEG+4) ||' год' AS COL_Y5_NAME, -- 5 год
    SUM(DECODE(year_num,nYEAR_BEG+4,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y5_VALUE,
    TO_CHAR(nYEAR_BEG+5) ||' год' AS COL_Y6_NAME, -- 6 год
    SUM(DECODE(year_num,nYEAR_BEG+5,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y6_VALUE,
    TO_CHAR(nYEAR_BEG+6) ||' год' AS COL_Y7_NAME, -- 7 год
    SUM(DECODE(year_num,nYEAR_BEG+6,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y7_VALUE,
	' на '||DATE_END,
	cPRIM
  FROM 
  (
    -- ТТХ, фасовка, налив
    SELECT
      TO_NUMBER(TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYY')) AS Year_num,
      TO_CHAR(OBOROT_KONS.DATE_OPER,'MM') AS month_num,
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month') AS month_str,  
      SUM(OBOROT_KONS.KG/1000) AS Ves,
      SUM(DECODE(OBOROT_KONS.TIP_OP_ID,1,OBOROT_KONS.SUMMA_POKUP,2,OBOROT_KONS.SUMMA_REALIZ,
          3,OBOROT_KONS.SUMMA_REALIZ,4,OBOROT_KONS.SUMMA_POKUP,0)/1000) AS Summa
    FROM OBOROT_KONS, KLS_PROD_KONS,KLS_PROD_GR_KONS,ORG_STRUCTURE,KLS_ORG_KIND,
	     KLS_PROD_KONS_GROUPS_DESC grp
    WHERE OBOROT_KONS.TIP_OP_ID=nTIP_OP -- тип операции
	  AND OBOROT_KONS.TIP_REAL_ID<>2
	  AND OBOROT_KONS.VID_REAL_ID<>5
	  AND OBOROT_KONS.PROD_KONS_ID=KLS_PROD_KONS.ID
	  AND KLS_PROD_KONS.ID = grp.PROD_KONS_ID
	  AND KLS_PROD_KONS.GR_KONS_ID=KLS_PROD_GR_KONS.ID_GR
	  AND OBOROT_KONS.ORG_STRU_ID=ORG_STRUCTURE.ID
	  AND ORG_STRUCTURE.ORG_KIND_ID=KLS_ORG_KIND.ID
	  AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта	 
	  AND OBOROT_KONS.DATE_OPER>dDATE_BEG-1 
	  AND OBOROT_KONS.DATE_OPER<dDATE_END+1
	  AND (OBOROT_KONS.FILIAL_ID=NVL(nFILIAL,OBOROT_KONS.FILIAL_ID)) -- филиал 
	  AND (OBOROT_KONS.ORG_STRU_ID=NVL(nAZC,OBOROT_KONS.ORG_STRU_ID)) -- подразделение (АЗС)	 
	  AND (KLS_PROD_GR_KONS.ID_GLOBAL_GR=NVL(cPROD_GR,KLS_PROD_GR_KONS.ID_GLOBAL_GR)) -- группа продуктов
	  AND (CASE
	         WHEN nPROD=176 AND grp.PROD_GROUPS_ID=161 THEN nPROD -- ТТХ как фасовка
--	         WHEN nPROD=176 AND grp.PROD_GROUPS_ID=280 THEN nPROD -- Битум как фасовка
--	         WHEN nPROD=176 AND grp.PROD_GROUPS_ID=201 THEN nPROD -- Битум как фасовка
	         WHEN nPROD=176 AND grp.PROD_GROUPS_ID=279 THEN nPROD -- прочие как фасовка
	         WHEN nPROD=176 AND grp.PROD_GROUPS_ID=176 THEN nPROD -- фасовка
			 ELSE grp.PROD_GROUPS_ID
		   END)=NVL(nPROD,grp.PROD_GROUPS_ID) -- продукт
--	  AND (OBOROT_KONS.PROD_KONS_ID=NVL(cPROD,OBOROT_KONS.PROD_KONS_ID)) -- продукт
    GROUP BY 
      TO_NUMBER(TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYY')),
      TO_CHAR(OBOROT_KONS.DATE_OPER,'MM'),
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month')
    UNION ALL	    
	-- Сопутствующие товары+Битум
    select 
      TO_NUMBER(TO_CHAR(A.DOCDATE,'YYYY')) AS Year_num,
      TO_CHAR(a.DOCDATE,'MM') AS month_num,
      TO_CHAR(a.DOCDATE,'Month') AS month_str,  
      0 AS Ves,
      SUM(a.SUMMA/1000) AS Summa
    from vaneev.v_soputs_psv@ORACLE.WORLD A, PARUS_STORE_ORG_STRU_LINK B, V_ORG_STRUCTURE C, KLS_ORG_KIND
   WHERE A.docdate>dDATE_BEG-1 
     AND A.docdate<dDATE_END+1
     AND nTIP_OP=3
	 and nPROD=176
 	 and a.STORE_RN=B.STORE_RN
	 and b.ORG_STRU_ID=C.ID
     AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
	 AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
     AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID)) -- филиал 
	 AND (B.ORG_STRU_ID=NVL(nAZC,B.ORG_STRU_ID)) -- подразделение (АЗС)	 
   GROUP BY
     TO_NUMBER(TO_CHAR(A.DOCDATE,'YYYY')),
     TO_CHAR(a.DOCDATE,'MM'),
     TO_CHAR(a.DOCDATE,'Month')	  
  ) oborot 
  GROUP BY
    month_num,  
    month_str;  

  ELSE
    -- Без сопутствующих	 
  INSERT INTO DIAGRAM (COL_SORT,COL_X1_NAME,COL_X1_VALUE,COL_Y1_NAME,COL_Y1_VALUE,
       COL_Y2_NAME,COL_Y2_VALUE,COL_Y3_NAME,COL_Y3_VALUE,COL_Y4_NAME,COL_Y4_VALUE,
       COL_Y5_NAME,COL_Y5_VALUE,COL_Y6_NAME,COL_Y6_VALUE,COL_Y7_NAME,COL_Y7_VALUE,TITLE, PRIM)
  SELECT
    month_num AS COL_SORT,  
    'Месяц' AS COL_X1_NAME,
    month_str AS COL_X1_VALUE,  
    TO_CHAR(nYEAR_BEG+0) ||' год' AS COL_Y1_NAME, -- 1 год
    SUM(DECODE(year_num,nYEAR_BEG+0,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y1_VALUE,
    TO_CHAR(nYEAR_BEG+1) ||' год' AS COL_Y2_NAME, -- 2 год
    SUM(DECODE(year_num,nYEAR_BEG+1,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y2_VALUE,
    TO_CHAR(nYEAR_BEG+2) ||' год' AS COL_Y3_NAME, -- 3 год
    SUM(DECODE(year_num,nYEAR_BEG+2,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y3_VALUE,
    TO_CHAR(nYEAR_BEG+3) ||' год' AS COL_Y4_NAME, -- 4 год
    SUM(DECODE(year_num,nYEAR_BEG+3,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y4_VALUE,
    TO_CHAR(nYEAR_BEG+4) ||' год' AS COL_Y5_NAME, -- 5 год
    SUM(DECODE(year_num,nYEAR_BEG+4,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y5_VALUE,
    TO_CHAR(nYEAR_BEG+5) ||' год' AS COL_Y6_NAME, -- 6 год
    SUM(DECODE(year_num,nYEAR_BEG+5,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y6_VALUE,
    TO_CHAR(nYEAR_BEG+6) ||' год' AS COL_Y7_NAME, -- 7 год
    SUM(DECODE(year_num,nYEAR_BEG+6,DECODE(nIS_SUM,1,Summa,Ves),0)) AS COL_Y7_VALUE,
	' на '||DATE_END,
	cPRIM
  FROM 
  (
    -- ТТХ и фасовка
    SELECT
      TO_NUMBER(TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYY')) AS Year_num,
      TO_CHAR(OBOROT_KONS.DATE_OPER,'MM') AS month_num,
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month') AS month_str,  
      SUM(OBOROT_KONS.KG/1000) AS Ves,
      SUM(DECODE(OBOROT_KONS.TIP_OP_ID,1,OBOROT_KONS.SUMMA_POKUP,2,OBOROT_KONS.SUMMA_REALIZ,
          3,OBOROT_KONS.SUMMA_REALIZ,4,OBOROT_KONS.SUMMA_POKUP,0)/1000) AS Summa
    FROM OBOROT_KONS, KLS_PROD_KONS,KLS_PROD_GR_KONS,ORG_STRUCTURE,KLS_ORG_KIND,
	     KLS_PROD_KONS_GROUPS_DESC grp
    WHERE OBOROT_KONS.TIP_OP_ID=nTIP_OP -- тип операции
	  AND OBOROT_KONS.TIP_REAL_ID<>2
	  AND OBOROT_KONS.VID_REAL_ID<>5
	  AND OBOROT_KONS.PROD_KONS_ID=KLS_PROD_KONS.ID
	  AND KLS_PROD_KONS.ID = grp.PROD_KONS_ID
	  AND KLS_PROD_KONS.GR_KONS_ID=KLS_PROD_GR_KONS.ID_GR
	  AND OBOROT_KONS.ORG_STRU_ID=ORG_STRUCTURE.ID
	  AND ORG_STRUCTURE.ORG_KIND_ID=KLS_ORG_KIND.ID
	  AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта	 
	  AND OBOROT_KONS.DATE_OPER>dDATE_BEG-1 
	  AND OBOROT_KONS.DATE_OPER<dDATE_END+1
	  AND (OBOROT_KONS.FILIAL_ID=NVL(nFILIAL,OBOROT_KONS.FILIAL_ID)) -- филиал 
	  AND (OBOROT_KONS.ORG_STRU_ID=NVL(nAZC,OBOROT_KONS.ORG_STRU_ID)) -- подразделение (АЗС)	 
	  AND (KLS_PROD_GR_KONS.ID_GLOBAL_GR=NVL(cPROD_GR,KLS_PROD_GR_KONS.ID_GLOBAL_GR)) -- группа продуктов
	  AND grp.PROD_GROUPS_ID=NVL(nPROD,grp.PROD_GROUPS_ID) -- продукт
--	  AND (OBOROT_KONS.PROD_KONS_ID=NVL(cPROD,OBOROT_KONS.PROD_KONS_ID)) -- продукт
    GROUP BY 
      TO_NUMBER(TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYY')),
      TO_CHAR(OBOROT_KONS.DATE_OPER,'MM'),
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month')
  ) oborot 
  GROUP BY
    month_num,  
    month_str;  

  END IF;
  	
  COMMIT;
  
  UPDATE V_DIAGRAM SET 
    COL_Y1_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y1_VALUE))),
    COL_Y2_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y2_VALUE))),
    COL_Y3_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y3_VALUE))),
    COL_Y4_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y4_VALUE))),
    COL_Y5_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y5_VALUE))),
    COL_Y6_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y6_VALUE))),
    COL_Y7_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y7_VALUE)));

  -- Избавляемся от еще не наступивших месяцев	
  UPDATE V_DIAGRAM SET COL_Y7_NAME=NULL, COL_Y7_VALUE=NULL 
   WHERE col_sort>LPAD(TO_CHAR(cur_month),2,'0');	
 	
  COMMIT;
  
END;

-- Реализовано с НБ/АЗС по месяцам в тн за последние 4 года (по данным КО)
PROCEDURE REALIZ_MON_TON (DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL VARCHAR2, ORG_KIND_GRP VARCHAR2, AZC VARCHAR2, PROD_GR VARCHAR2, PROD VARCHAR2) IS
BEGIN
  OPER_MON_KONS(DATE_BEG,DATE_END,FILIAL, ORG_KIND_GRP,AZC,PROD_GR,PROD,'3',0);
END;

-- Реализовано с НБ/АЗС по месяцам в тыс.руб. за последние 4 года (по данным КО)
PROCEDURE REALIZ_MON_SUM (DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL VARCHAR2, ORG_KIND_GRP VARCHAR2, AZC VARCHAR2, PROD_GR VARCHAR2, PROD VARCHAR2) IS
BEGIN
  OPER_MON_KONS(DATE_BEG,DATE_END,FILIAL, ORG_KIND_GRP,AZC,PROD_GR,PROD,'3',1);
END;

-- Реализовано с НБ/АЗС фасовки по месяцам в тыс.руб. за последние 4 года (по данным КО)
PROCEDURE REALIZ_MON_SUM_FAS (DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL VARCHAR2, ORG_KIND_GRP VARCHAR2, AZC VARCHAR2) IS
BEGIN
  OPER_MON_KONS(DATE_BEG,DATE_END,FILIAL, ORG_KIND_GRP,AZC,'*',176,'3',1);
END;

-- Сведения о резервуарном парке УНП
PROCEDURE UNP_REZ (Date# VARCHAR2, NPR_GROUP# VARCHAR2, PROD# VARCHAR2) IS
  LastDay VARCHAR2(30);
BEGIN
  EMPTY_DIAGRAM;
  
  BEGIN
    SELECT TO_CHAR(MAX(DATEUPLOAD),'dd.mm.yyyy hh24:mi:ss') INTO LastDay
	  FROM arc_rez 
	 WHERE arc_rez.DATEUPLOAD<=TO_DATE(DATE#,'dd.mm.yyyy hh24:mi:ss')
	   AND arc_rez.ORG_STRU_ID=1;
  EXCEPTION 
    WHEN OTHERS THEN
	  LastDay:=DATE#;
  END;	  

  INSERT INTO DIAGRAM (COL_SORT,COL_X1_NAME,COL_X1_VALUE,COL_Y1_NAME,COL_Y1_VALUE,
       COL_Y2_NAME,COL_Y2_VALUE,COL_Y3_NAME,COL_Y3_VALUE,COL_Y4_NAME,COL_Y4_VALUE,TITLE)
  SELECT
    A.REZ_NUM || A.NAME_NPR  AS COL_SORT,  
    'Нефтепродукт/резервуар' AS COL_X1_NAME,
    'Рез № ' || A.REZ_NUM || ' (' || A.NAME_NPR || ')' AS COL_X1_VALUE,  
    'Мертвые' AS COL_Y1_NAME,
    DECODE(SIGN(A.TOVAR-NVL(B.VES,0)),-1,A.DEAD+A.TOVAR-NVL(B.VES,0),A.DEAD) AS COL_Y1_VALUE,
    'Товар' AS COL_Y2_NAME,
    DECODE(SIGN(A.TOVAR-NVL(B.VES,0)),-1,0,A.TOVAR-NVL(B.VES,0)) AS COL_Y2_VALUE,
    'Компонент' AS COL_Y3_NAME,
    A.COMPONENT AS COL_Y3_VALUE,
    'Свободная емкость' AS COL_Y4_NAME,
    DECODE(SIGN(A.MAX_VOL-A.EMPTY-NVL(B.VES,0)),-1,A.MAX_VOL,A.EMPTY+NVL(B.VES,0)) AS COL_Y4_VALUE,
	'на  '||DATE#
  FROM
   ( /* Данные по резервуарам */	
    SELECT /*+ RULE */
      arc_rez.REZ_NUM, 
	  kls_prod.ID_NPR,
	  kls_prod.NAME_NPR,
  	  SUM(DECODE(SIGN(arc_rez.DEAD_VOL-arc_rez.VOL),1,arc_rez.VOL,arc_rez.DEAD_VOL)) as DEAD,
	  SUM(DECODE(arc_rez.AR_TOV_ID,1,DECODE(SIGN(arc_rez.VOL-arc_rez.DEAD_VOL),1,arc_rez.VOL-arc_rez.DEAD_VOL,0),0)) as TOVAR,
	  SUM(DECODE(arc_rez.AR_TOV_ID,1,0,DECODE(SIGN(arc_rez.VOL-arc_rez.DEAD_VOL),1,arc_rez.VOL-arc_rez.DEAD_VOL,0))) as COMPONENT,
	  SUM(DECODE(SIGN(arc_rez.MAX_VOL-arc_rez.VOL),1,arc_rez.MAX_VOL-arc_rez.VOL,0)) as EMPTY, 	  
	  SUM(arc_rez.MAX_VOL) as MAX_VOL 	  
    FROM arc_rez,kls_prod
    WHERE arc_rez.PROD_ID_NPR=kls_prod.ID_NPR
      and kls_prod.ID_GROUP_NPR=DECODE(LTRIM(RTRIM(NPR_GROUP#)),'*',kls_prod.ID_GROUP_NPR,NPR_GROUP#)
      and kls_prod.ID_NPR=DECODE(LTRIM(RTRIM(PROD#)),'*',kls_prod.ID_NPR,PROD#)
      and arc_rez.DATEUPLOAD=TO_DATE(LastDay,'dd.mm.yyyy hh24:mi:ss')
      and arc_rez.ORG_STRU_ID=1
    GROUP BY 	  
      arc_rez.REZ_NUM, 
	  kls_prod.ID_NPR,
	  kls_prod.NAME_NPR
   ) A,
   ( /* Отгрузка */ 
    SELECT /*+ RULE */
      kls_pasp.REZ_NUM, 
	  kls_prod.ID_NPR,
	  SUM(kvit.ves_brutto) as VES
    FROM kvit,kls_prod,kls_pasp
    WHERE kvit.PROD_ID_NPR=kls_prod.ID_NPR
      and kls_prod.ID_GROUP_NPR=DECODE(LTRIM(RTRIM(NPR_GROUP#)),'*',kls_prod.ID_GROUP_NPR,NPR_GROUP#)
      and kls_prod.ID_NPR=DECODE(LTRIM(RTRIM(PROD#)),'*',kls_prod.ID_NPR,PROD#)
      and kvit.DATE_OFORML>=TO_DATE(LastDay,'dd.mm.yyyy hh24:mi:ss')
      and kvit.DATE_OFORML<TO_DATE(DATE#,'dd.mm.yyyy hh24:mi:ss')
      and kvit.pasp_id=kls_pasp.id(+)
    GROUP BY 	  
      kls_pasp.REZ_NUM, 
      kls_prod.ID_NPR
   ) B
   WHERE A.REZ_NUM=B.REZ_NUM(+)
     AND A.ID_NPR=B.ID_NPR(+); 	
	
  COMMIT;
  
  UPDATE V_DIAGRAM SET 
    COL_Y1_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y1_VALUE))),
    COL_Y2_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y2_VALUE))),
    COL_Y3_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y3_VALUE))),
    COL_Y4_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y4_VALUE)));
 	
  COMMIT;
  
END;

-- Планирование объемов реализации АЗС (по данным КО)
PROCEDURE PLAN_REALIZ_AZS (DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL VARCHAR2, ORG_KIND_GRP VARCHAR2, AZC VARCHAR2, PROD_GR VARCHAR2, PROD VARCHAR2) IS
  nFILIAL NUMBER;
  nORG_KIND_GRP NUMBER;
  nAZC NUMBER;
  cPROD_GR VARCHAR2(30);
  nPROD NUMBER;
  dDATE_BEG DATE;
  dDATE_END DATE;
  dDATE_START DATE;
  cPRIM VARCHAR2(200);
  cTMP VARCHAR2(200);
  cZPT VARCHAR2(1);
  vCOL_Y2_VALUE VARCHAR2(50);
  vCOL_Y5_VALUE VARCHAR2(50);
  vCOL_Y8_VALUE VARCHAR2(50);
  vCOL_Y11_VALUE VARCHAR2(50);
  vCOL_Y14_VALUE VARCHAR2(50);
  vCOL_Y17_VALUE VARCHAR2(50);
  vCOL_Y3_VALUE VARCHAR2(50);
  vCOL_Y6_VALUE VARCHAR2(50);
  vCOL_Y9_VALUE VARCHAR2(50);
  vCOL_Y12_VALUE VARCHAR2(50);
  vCOL_Y15_VALUE VARCHAR2(50);
  vCOL_Y18_VALUE VARCHAR2(50);
  
  cur_month VARCHAR2(10);
  last_oper DATE;

  PrevMon VARCHAR2(50);
  PrevYear VARCHAR2(50);
BEGIN
  EMPTY_DIAGRAM;
  
  dDATE_END:=LAST_DAY(TO_DATE(date_end,'dd.mm.yyyy')); -- округляем даты
  dDATE_BEG:=TRUNC(TO_DATE(date_beg,'dd.mm.yyyy'),'MONTH'); -- округляем даты
  dDATE_START:=ADD_MONTHS(dDATE_BEG,-12); -- отбираем данные на 1 год ранее чем запрошено (для расчета %)

  BEGIN
    SELECT MAX(date_oper) INTO last_oper FROM OBOROT_KONS;
  EXCEPTION
    WHEN OTHERS THEN
	  last_oper:=TO_DATE(DATE_END,'dd.mm.yyyy');
  END;	  	
  cur_month:=TO_CHAR(last_oper,'YYYYMM'); -- текущий месяц

  cPRIM:='';
  cZPT:='';
  
  IF FILIAL<>'*' AND FILIAL IS NOT NULL THEN
    nFILIAL:=TO_NUMBER(FILIAL);
	BEGIN
	  SELECT NAME INTO cTMP FROM ORG_STRUCTURE WHERE ID=nFILIAL;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Филиал: '||cTMP||' ';
	cZPT:=';';	  
  ELSE
    nFILIAL:=NULL;
	cPRIM:=cPRIM||cZPT||' Все филиалы ';	  
	cZPT:=';';	  
  END IF;

  IF ORG_KIND_GRP<>'*' AND ORG_KIND_GRP IS NOT NULL THEN
    nORG_KIND_GRP:=TO_NUMBER(ORG_KIND_GRP);
	BEGIN
	  SELECT MAX(GROUP_KIND_NAME) INTO cTMP FROM KLS_ORG_KIND WHERE GROUP_KIND_ID=nORG_KIND_GRP;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Тип объекта: '||cTMP||' ';
	cZPT:=';';	  
  ELSE
    nORG_KIND_GRP:=NULL;
	cPRIM:=cPRIM||cZPT||' Все типы объектов ';	  
	cZPT:=';';	  
  END IF;
  
  IF AZC<>'*' AND AZC IS NOT NULL THEN
    nAZC:=TO_NUMBER(AZC);
	BEGIN
	  SELECT NAME INTO cTMP FROM ORG_STRUCTURE WHERE ID=nAZC;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Подразделение: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    nAZC:=NULL;
	cPRIM:=cPRIM||cZPT||' Все подразделения ';	  
	cZPT:=';';	  
  END IF;

  IF PROD_GR<>'*' AND PROD_GR IS NOT NULL THEN
    cPROD_GR:=PROD_GR;
	BEGIN
	  SELECT MAX(NAME_GLOBAL_GR) INTO cTMP FROM KLS_PROD_GR_KONS WHERE ID_GLOBAL_GR=cPROD_GR;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Группа продуктов: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    cPROD_GR:=NULL;
  END IF;

  IF PROD<>'*' AND PROD IS NOT NULL THEN
    nPROD:=TO_NUMBER(PROD);
	BEGIN
	  SELECT GROUP_NAME INTO cTMP FROM KLS_PROD_GROUPS WHERE ID=nPROD;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Продукт: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    nPROD:=NULL;
  END IF;
  
  IF cPROD_GR IS NULL AND nPROD IS NULL THEN
	cPRIM:=cPRIM||cZPT||' Все продукты ';	  
	cZPT:=';';	  
  END IF;  


  INSERT INTO DIAGRAM (COL_SORT,COL_X1_NAME,COL_X1_VALUE,COL_Y1_NAME,COL_Y1_VALUE,COL_Y2_NAME,COL_Y3_NAME,
       COL_Y4_NAME,COL_Y4_VALUE,COL_Y5_NAME,COL_Y6_NAME,COL_Y7_NAME,COL_Y7_VALUE,COL_Y8_NAME,COL_Y9_NAME,
	   COL_Y10_NAME,COL_Y10_VALUE,COL_Y11_NAME,COL_Y12_NAME,COL_Y13_NAME,COL_Y13_VALUE,COL_Y14_NAME,COL_Y15_NAME,
	   COL_Y16_NAME,COL_Y16_VALUE,COL_Y17_NAME,COL_Y18_NAME,TITLE,PRIM,VIEW_ROW)
  SELECT
    month_num AS COL_SORT,  
    'Месяц' AS COL_X1_NAME,
    month_str AS COL_X1_VALUE,  
    'АИ-98' AS COL_Y1_NAME, 
    SUM(ves98) AS COL_Y1_VALUE,
    '% к предыдущему месяцу' AS COL_Y2_NAME, 
    '% к аналогичному периоду прошлого года' AS COL_Y3_NAME, 
    'АИ-95' AS COL_Y4_NAME, 
    SUM(ves95) AS COL_Y4_VALUE,
    '% к предыдущему месяцу' AS COL_Y5_NAME, 
    '% к аналогичному периоду прошлого года' AS COL_Y6_NAME, 
    'АИ-92' AS COL_Y7_NAME, 
    SUM(ves92) AS COL_Y7_VALUE,
    '% к предыдущему месяцу' AS COL_Y8_NAME, 
    '% к аналогичному периоду прошлого года' AS COL_Y9_NAME, 
    'АИ-80' AS COL_Y10_NAME, 
    SUM(ves80) AS COL_Y10_VALUE,
    '% к предыдущему месяцу' AS COL_Y11_NAME, 
    '% к аналогичному периоду прошлого года' AS COL_Y12_NAME, 
    'ДТ' AS COL_Y13_NAME, 
    SUM(dt) AS COL_Y13_VALUE,
    '% к предыдущему месяцу' AS COL_Y14_NAME, 
    '% к аналогичному периоду прошлого года' AS COL_Y15_NAME, 
    'ГАЗ' AS COL_Y16_NAME, 
    SUM(GAS) AS COL_Y16_VALUE,
    '% к предыдущему месяцу' AS COL_Y17_NAME, 
    '% к аналогичному периоду прошлого года' AS COL_Y18_NAME, 
	' на '||DATE_END,
	cPRIM,
	VIEW_ROW
  FROM 
  (
    SELECT
	  (CASE WHEN OBOROT_KONS.DATE_OPER>dDATE_BEG-1 THEN 1 ELSE 0 END) as VIEW_ROW, 
      TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYYMM') AS month_num,
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month YY') AS month_str,
      NVL(SUM(CASE
	        WHEN grp.GROUP_ABBR='АИ-98' THEN OBOROT_KONS.KG/1000
			ELSE 0
		  END),0) AS Ves98,
      NVL(SUM(CASE
	        WHEN grp.GROUP_ABBR='АИ-95' THEN OBOROT_KONS.KG/1000
			ELSE 0
		  END),0) AS Ves95,
      NVL(SUM(CASE
	        WHEN grp.GROUP_ABBR='АИ-92' THEN OBOROT_KONS.KG/1000
			ELSE 0
		  END),0) AS Ves92,
      NVL(SUM(CASE
	        WHEN grp.GROUP_ABBR='АИ-80' THEN OBOROT_KONS.KG/1000
			ELSE 0
		  END),0) AS Ves80,
      NVL(SUM(CASE
	        WHEN grp.GROUP_ABBR='ДТ' THEN OBOROT_KONS.KG/1000
			ELSE 0
		  END),0) AS DT,
      NVL(SUM(CASE
	        WHEN grp.GROUP_ABBR='ГАЗ' THEN OBOROT_KONS.KG/1000
			ELSE 0
		  END),0) AS GAS
    FROM OBOROT_KONS, KLS_PROD_KONS,KLS_PROD_GR_KONS,ORG_STRUCTURE,KLS_ORG_KIND,
	     KLS_PROD_KONS_GROUPS_DESC grp9, KLS_PROD_GR2GR_DESC grp11, KLS_PROD_GROUPS grp 
    WHERE OBOROT_KONS.TIP_OP_ID=3
	  AND OBOROT_KONS.TIP_REAL_ID<>2 
	  AND OBOROT_KONS.VID_REAL_ID<>5
	  AND OBOROT_KONS.PROD_KONS_ID=KLS_PROD_KONS.ID
	  AND KLS_PROD_KONS.ID=grp9.PROD_KONS_ID
	  AND grp9.PROD_GROUPS_ID=grp11.PROD_GROUPS_ID_1
	  AND grp11.PROD_TYPE_GRP_ID_1=9
	  AND grp11.PROD_TYPE_GRP_ID_2=11
	  AND grp11.PROD_GROUPS_ID_2=grp.ID
	  AND KLS_PROD_KONS.GR_KONS_ID=KLS_PROD_GR_KONS.ID_GR
	  AND OBOROT_KONS.ORG_STRU_ID=ORG_STRUCTURE.ID
	  AND ORG_STRUCTURE.ORG_KIND_ID=KLS_ORG_KIND.ID
	  AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта	 
	  AND OBOROT_KONS.DATE_OPER>dDATE_START-1 
	  AND OBOROT_KONS.DATE_OPER<dDATE_END+1
	  AND (OBOROT_KONS.FILIAL_ID=NVL(nFILIAL,OBOROT_KONS.FILIAL_ID)) -- филиал 
	  AND (OBOROT_KONS.ORG_STRU_ID=NVL(nAZC,OBOROT_KONS.ORG_STRU_ID)) -- подразделение (АЗС)	 
	  AND (KLS_PROD_GR_KONS.ID_GLOBAL_GR=NVL(cPROD_GR,KLS_PROD_GR_KONS.ID_GLOBAL_GR)) -- группа продуктов
	  AND (grp9.PROD_GROUPS_ID=NVL(nPROD,grp9.PROD_GROUPS_ID)) -- продукт
    GROUP BY 
	  (CASE WHEN OBOROT_KONS.DATE_OPER>dDATE_BEG-1 THEN 1 ELSE 0 END), 
      TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYYMM'),
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month YY')  
  ) oborot 
  GROUP BY
    month_num,  
    month_str,
    VIEW_ROW;  
	

  -- Заполняем остальные поля  	
  FOR lcur IN (SELECT * FROM DIAGRAM 
                WHERE TERMINAL_NAME = For_Init.GetCurrTerm
                  AND OSUSER_NAME = For_Init.GetCurrUser AND VIEW_ROW=1) 
  LOOP
    -- Предыдущий месяц
	PrevMon := TO_CHAR(ADD_MONTHS(TO_DATE(lcur.COL_SORT,'yyyymm'),-1),'yyyymm');
    -- Предыдущий год
	PrevYear := TO_CHAR(ADD_MONTHS(TO_DATE(lcur.COL_SORT,'yyyymm'),-12),'yyyymm'); 
    -- Значение из предыдущего месяца
	BEGIN
  	  SELECT COL_Y1_VALUE,COL_Y4_VALUE,COL_Y7_VALUE,
	         COL_Y10_VALUE,COL_Y13_VALUE,COL_Y16_VALUE
        INTO vCOL_Y2_VALUE,vCOL_Y5_VALUE,vCOL_Y8_VALUE,
             vCOL_Y11_VALUE,vCOL_Y14_VALUE,vCOL_Y17_VALUE			 
	   FROM DIAGRAM 
	   WHERE TERMINAL_NAME = For_Init.GetCurrTerm
         AND OSUSER_NAME = For_Init.GetCurrUser
	     AND COL_SORT=PrevMon;
    EXCEPTION 
	  WHEN OTHERS THEN
	    vCOL_Y2_VALUE:='0';
		vCOL_Y5_VALUE:='0';
		vCOL_Y8_VALUE:='0';
		vCOL_Y11_VALUE:='0';
		vCOL_Y14_VALUE:='0';
		vCOL_Y17_VALUE:='0';
	END;
    -- Значение из предыдущего года
	BEGIN
  	  SELECT COL_Y1_VALUE,COL_Y4_VALUE,COL_Y7_VALUE,
	         COL_Y10_VALUE,COL_Y13_VALUE,COL_Y16_VALUE
        INTO vCOL_Y3_VALUE,vCOL_Y6_VALUE,vCOL_Y9_VALUE,
             vCOL_Y12_VALUE,vCOL_Y15_VALUE,vCOL_Y18_VALUE			 
	   FROM DIAGRAM 
	   WHERE TERMINAL_NAME = For_Init.GetCurrTerm
               AND OSUSER_NAME = For_Init.GetCurrUser
			   AND COL_SORT=PrevYear;
    EXCEPTION 
	  WHEN OTHERS THEN
	    vCOL_Y3_VALUE:='0';
		vCOL_Y6_VALUE:='0';
		vCOL_Y9_VALUE:='0';
		vCOL_Y12_VALUE:='0';
		vCOL_Y15_VALUE:='0';
		vCOL_Y18_VALUE:='0';
	END;
	vCOL_Y2_VALUE:=REPLACE(vCOL_Y2_VALUE,',','.');
	vCOL_Y3_VALUE:=REPLACE(vCOL_Y3_VALUE,',','.');
	vCOL_Y5_VALUE:=REPLACE(vCOL_Y5_VALUE,',','.');
	vCOL_Y6_VALUE:=REPLACE(vCOL_Y6_VALUE,',','.');
	vCOL_Y8_VALUE:=REPLACE(vCOL_Y8_VALUE,',','.');
	vCOL_Y9_VALUE:=REPLACE(vCOL_Y9_VALUE,',','.');
	vCOL_Y11_VALUE:=REPLACE(vCOL_Y11_VALUE,',','.');
	vCOL_Y12_VALUE:=REPLACE(vCOL_Y12_VALUE,',','.');
	vCOL_Y14_VALUE:=REPLACE(vCOL_Y14_VALUE,',','.');
	vCOL_Y15_VALUE:=REPLACE(vCOL_Y15_VALUE,',','.');
	vCOL_Y17_VALUE:=REPLACE(vCOL_Y17_VALUE,',','.');
	vCOL_Y18_VALUE:=REPLACE(vCOL_Y18_VALUE,',','.');
    UPDATE DIAGRAM SET 
	   COL_Y2_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y2_VALUE||'),0,RC[-1]/'||vCOL_Y2_VALUE||')*100,2)',
	   COL_Y5_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y5_VALUE||'),0,RC[-1]/'||vCOL_Y5_VALUE||')*100,2)',
	   COL_Y8_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y8_VALUE||'),0,RC[-1]/'||vCOL_Y8_VALUE||')*100,2)',
	   COL_Y11_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y11_VALUE||'),0,RC[-1]/'||vCOL_Y11_VALUE||')*100,2)',
	   COL_Y14_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y14_VALUE||'),0,RC[-1]/'||vCOL_Y14_VALUE||')*100,2)',
	   COL_Y17_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y17_VALUE||'),0,RC[-1]/'||vCOL_Y17_VALUE||')*100,2)',
	   COL_Y3_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y3_VALUE||'),0,RC[-2]/'||vCOL_Y3_VALUE||')*100,2)',
	   COL_Y6_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y6_VALUE||'),0,RC[-2]/'||vCOL_Y6_VALUE||')*100,2)',
	   COL_Y9_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y9_VALUE||'),0,RC[-2]/'||vCOL_Y9_VALUE||')*100,2)',
	   COL_Y12_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y12_VALUE||'),0,RC[-2]/'||vCOL_Y12_VALUE||')*100,2)',
	   COL_Y15_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y15_VALUE||'),0,RC[-2]/'||vCOL_Y15_VALUE||')*100,2)',
	   COL_Y18_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y18_VALUE||'),0,RC[-2]/'||vCOL_Y18_VALUE||')*100,2)'
    WHERE TERMINAL_NAME = For_Init.GetCurrTerm
      AND OSUSER_NAME = For_Init.GetCurrUser 
	  AND COL_SORT=lcur.COL_SORT;					        
  END LOOP;				  
	   
  COMMIT;
  
  -- Избавляемся от еще не наступивших месяцев	
  DELETE FROM V_DIAGRAM WHERE col_sort>cur_month OR VIEW_ROW=0;	

  -- Округляем
  UPDATE V_DIAGRAM SET 
    COL_Y1_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y1_VALUE))),
    COL_Y4_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y4_VALUE))),
    COL_Y7_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y7_VALUE))),
    COL_Y10_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y10_VALUE))),
    COL_Y13_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y13_VALUE))),
    COL_Y16_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y16_VALUE)));

  COMMIT;
  
END;

-- Планирование объемов реализации фасовки на АЗС (по данным КО)
PROCEDURE PLAN_REALIZ_AZS_FAS (DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL VARCHAR2, ORG_KIND_GRP VARCHAR2, AZC VARCHAR2, PROD_GR VARCHAR2, PROD VARCHAR2) IS
  nFILIAL NUMBER;
  nORG_KIND_GRP NUMBER;
  nAZC NUMBER;
  cPROD_GR VARCHAR2(30);
  nPROD NUMBER;
  dDATE_BEG DATE;
  dDATE_END DATE;
  dDATE_START DATE;
  cPRIM VARCHAR2(200);
  cTMP VARCHAR2(200);
  cZPT VARCHAR2(1);
  vCOL_Y2_VALUE VARCHAR2(50);
  vCOL_Y5_VALUE VARCHAR2(50);
  vCOL_Y8_VALUE VARCHAR2(50);
  vCOL_Y11_VALUE VARCHAR2(50);
  vCOL_Y14_VALUE VARCHAR2(50);
  vCOL_Y17_VALUE VARCHAR2(50);
  vCOL_Y3_VALUE VARCHAR2(50);
  vCOL_Y6_VALUE VARCHAR2(50);
  vCOL_Y9_VALUE VARCHAR2(50);
  vCOL_Y12_VALUE VARCHAR2(50);
  vCOL_Y15_VALUE VARCHAR2(50);
  vCOL_Y18_VALUE VARCHAR2(50);
  
  cur_month VARCHAR2(10);
  last_oper DATE;

  PrevMon VARCHAR2(50);
  PrevYear VARCHAR2(50);
BEGIN
  EMPTY_DIAGRAM;
  
  dDATE_END:=LAST_DAY(TO_DATE(date_end,'dd.mm.yyyy')); -- округляем даты
  dDATE_BEG:=TRUNC(TO_DATE(date_beg,'dd.mm.yyyy'),'MONTH'); -- округляем даты
  dDATE_START:=ADD_MONTHS(dDATE_BEG,-12); -- отбираем данные на 1 год ранее чем запрошено (для расчета %)

  BEGIN
    SELECT MAX(date_oper) INTO last_oper FROM OBOROT_KONS;
  EXCEPTION
    WHEN OTHERS THEN
	  last_oper:=TO_DATE(DATE_END,'dd.mm.yyyy');
  END;	  	
  cur_month:=TO_CHAR(last_oper,'YYYYMM'); -- текущий месяц

  cPRIM:='';
  cZPT:='';
  
  IF FILIAL<>'*' AND FILIAL IS NOT NULL THEN
    nFILIAL:=TO_NUMBER(FILIAL);
	BEGIN
	  SELECT NAME INTO cTMP FROM ORG_STRUCTURE WHERE ID=nFILIAL;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Филиал: '||cTMP||' ';
	cZPT:=';';	  
  ELSE
    nFILIAL:=NULL;
	cPRIM:=cPRIM||cZPT||' Все филиалы ';	  
	cZPT:=';';	  
  END IF;

  IF ORG_KIND_GRP<>'*' AND ORG_KIND_GRP IS NOT NULL THEN
    nORG_KIND_GRP:=TO_NUMBER(ORG_KIND_GRP);
	BEGIN
	  SELECT MAX(GROUP_KIND_NAME) INTO cTMP FROM KLS_ORG_KIND WHERE GROUP_KIND_ID=nORG_KIND_GRP;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Тип объекта: '||cTMP||' ';
	cZPT:=';';	  
  ELSE
    nORG_KIND_GRP:=NULL;
	cPRIM:=cPRIM||cZPT||' Все типы объектов ';	  
	cZPT:=';';	  
  END IF;
  
  IF AZC<>'*' AND AZC IS NOT NULL THEN
    nAZC:=TO_NUMBER(AZC);
	BEGIN
	  SELECT NAME INTO cTMP FROM ORG_STRUCTURE WHERE ID=nAZC;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Подразделение: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    nAZC:=NULL;
	cPRIM:=cPRIM||cZPT||' Все подразделения ';	  
	cZPT:=';';	  
  END IF;

  IF PROD_GR<>'*' AND PROD_GR IS NOT NULL THEN
    cPROD_GR:=PROD_GR;
	BEGIN
	  SELECT MAX(NAME_GLOBAL_GR) INTO cTMP FROM KLS_PROD_GR_KONS WHERE ID_GLOBAL_GR=cPROD_GR;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Группа продуктов: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    cPROD_GR:=NULL;
  END IF;

  IF PROD<>'*' AND PROD IS NOT NULL THEN
    nPROD:=TO_NUMBER(PROD);
	BEGIN
	  SELECT GROUP_NAME INTO cTMP FROM KLS_PROD_GROUPS WHERE ID=nPROD;
	EXCEPTION
	  WHEN OTHERS THEN
	    cTMP:='';
	END;
	cPRIM:=cPRIM||cZPT||' Продукт: '||cTMP||' ';	  
	cZPT:=';';	  
  ELSE
    nPROD:=NULL;
  END IF;
  
  IF cPROD_GR IS NULL AND nPROD IS NULL THEN
	cPRIM:=cPRIM||cZPT||' Все продукты ';	  
	cZPT:=';';	  
  END IF;  


  INSERT INTO DIAGRAM (COL_SORT,COL_X1_NAME,COL_X1_VALUE,COL_Y1_NAME,COL_Y1_VALUE,COL_Y2_NAME,COL_Y3_NAME,
       TITLE,PRIM,VIEW_ROW)
  SELECT
    month_num AS COL_SORT,  
    'Месяц' AS COL_X1_NAME,
    month_str AS COL_X1_VALUE,  
    'ФАСОВКА,ТТХ,СОПУТСТВУЮЩИЕ' AS COL_Y1_NAME, 
    SUM(summa) AS COL_Y1_VALUE,
    '% к предыдущему месяцу' AS COL_Y2_NAME, 
    '% к аналогичному периоду прошлого года' AS COL_Y3_NAME, 
	' на '||DATE_END,
	cPRIM,
	VIEW_ROW
  FROM 
  (
    -- ТТХ и Фасовка
    SELECT
	  (CASE WHEN OBOROT_KONS.DATE_OPER>dDATE_BEG-1 THEN 1 ELSE 0 END) as VIEW_ROW, 
      TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYYMM') AS month_num,
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month YY') AS month_str,
      NVL(SUM(CASE
	        WHEN grp.GROUP_ABBR IN ('ФАС','ТТХ') THEN OBOROT_KONS.SUMMA_REALIZ/1000
			ELSE 0
		  END),0) AS summa
    FROM OBOROT_KONS, KLS_PROD_KONS,KLS_PROD_GR_KONS,ORG_STRUCTURE,KLS_ORG_KIND,
	     KLS_PROD_KONS_GROUPS_DESC grp9, KLS_PROD_GR2GR_DESC grp11, KLS_PROD_GROUPS grp 
    WHERE OBOROT_KONS.TIP_OP_ID=3
	  AND OBOROT_KONS.TIP_REAL_ID<>2 
	  AND OBOROT_KONS.VID_REAL_ID<>5
	  AND OBOROT_KONS.PROD_KONS_ID=KLS_PROD_KONS.ID
	  AND KLS_PROD_KONS.ID=grp9.PROD_KONS_ID
	  AND grp9.PROD_GROUPS_ID=grp11.PROD_GROUPS_ID_1
	  AND grp11.PROD_TYPE_GRP_ID_1=9
	  AND grp11.PROD_TYPE_GRP_ID_2=11
	  AND grp11.PROD_GROUPS_ID_2=grp.ID
	  AND KLS_PROD_KONS.GR_KONS_ID=KLS_PROD_GR_KONS.ID_GR
	  AND OBOROT_KONS.ORG_STRU_ID=ORG_STRUCTURE.ID
	  AND ORG_STRUCTURE.ORG_KIND_ID=KLS_ORG_KIND.ID
	  AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта	 
	  AND OBOROT_KONS.DATE_OPER>dDATE_START-1 
	  AND OBOROT_KONS.DATE_OPER<dDATE_END+1
	  AND (OBOROT_KONS.FILIAL_ID=NVL(nFILIAL,OBOROT_KONS.FILIAL_ID)) -- филиал 
	  AND (OBOROT_KONS.ORG_STRU_ID=NVL(nAZC,OBOROT_KONS.ORG_STRU_ID)) -- подразделение (АЗС)	 
--	  AND (KLS_PROD_GR_KONS.ID_GLOBAL_GR=NVL(cPROD_GR,KLS_PROD_GR_KONS.ID_GLOBAL_GR)) -- группа продуктов
	  AND (grp9.PROD_GROUPS_ID=NVL(nPROD,grp9.PROD_GROUPS_ID)) -- продукт
    GROUP BY 
	  (CASE WHEN OBOROT_KONS.DATE_OPER>dDATE_BEG-1 THEN 1 ELSE 0 END), 
      TO_CHAR(OBOROT_KONS.DATE_OPER,'YYYYMM'),
      TO_CHAR(OBOROT_KONS.DATE_OPER,'Month YY')
	UNION ALL 
	-- Сопутствующие товары+Битум   
    select 
	  (CASE WHEN A.DOCDATE>dDATE_BEG-1 THEN 1 ELSE 0 END) as VIEW_ROW, 
      TO_CHAR(A.DOCDATE,'YYYYMM') AS month_num,
      TO_CHAR(A.DOCDATE,'Month YY') AS month_str,
      SUM(a.SUMMA/1000) AS Summa
    from vaneev.v_soputs_psv@ORACLE.WORLD A, PARUS_STORE_ORG_STRU_LINK B, V_ORG_STRUCTURE C, KLS_ORG_KIND
   WHERE A.docdate>dDATE_START-1 
     AND A.docdate<dDATE_END+1
	 and (nPROD=176 OR nPROD IS NULL) 
 	 and a.STORE_RN=B.STORE_RN
	 and b.ORG_STRU_ID=C.ID
     AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
	 AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
     AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID)) -- филиал 
	 AND (B.ORG_STRU_ID=NVL(nAZC,B.ORG_STRU_ID)) -- подразделение (АЗС)	 
   GROUP BY
	  (CASE WHEN A.DOCDATE>dDATE_BEG-1 THEN 1 ELSE 0 END), 
      TO_CHAR(A.DOCDATE,'YYYYMM'),
      TO_CHAR(A.DOCDATE,'Month YY')
  ) oborot 
  GROUP BY
    month_num,  
    month_str,
    VIEW_ROW;  
	

  -- Заполняем остальные поля  	
  FOR lcur IN (SELECT * FROM DIAGRAM 
                WHERE TERMINAL_NAME = For_Init.GetCurrTerm
                  AND OSUSER_NAME = For_Init.GetCurrUser AND VIEW_ROW=1) 
  LOOP
    -- Предыдущий месяц
	PrevMon := TO_CHAR(ADD_MONTHS(TO_DATE(lcur.COL_SORT,'yyyymm'),-1),'yyyymm');
    -- Предыдущий год
	PrevYear := TO_CHAR(ADD_MONTHS(TO_DATE(lcur.COL_SORT,'yyyymm'),-12),'yyyymm'); 
    -- Значение из предыдущего месяца
	BEGIN
  	  SELECT COL_Y1_VALUE,COL_Y4_VALUE,COL_Y7_VALUE,
	         COL_Y10_VALUE,COL_Y13_VALUE,COL_Y16_VALUE
        INTO vCOL_Y2_VALUE,vCOL_Y5_VALUE,vCOL_Y8_VALUE,
             vCOL_Y11_VALUE,vCOL_Y14_VALUE,vCOL_Y17_VALUE			 
	   FROM DIAGRAM 
	   WHERE TERMINAL_NAME = For_Init.GetCurrTerm
         AND OSUSER_NAME = For_Init.GetCurrUser
	     AND COL_SORT=PrevMon;
    EXCEPTION 
	  WHEN OTHERS THEN
	    vCOL_Y2_VALUE:='0';
		vCOL_Y5_VALUE:='0';
		vCOL_Y8_VALUE:='0';
		vCOL_Y11_VALUE:='0';
		vCOL_Y14_VALUE:='0';
		vCOL_Y17_VALUE:='0';
	END;
    -- Значение из предыдущего года
	BEGIN
  	  SELECT COL_Y1_VALUE,COL_Y4_VALUE,COL_Y7_VALUE,
	         COL_Y10_VALUE,COL_Y13_VALUE,COL_Y16_VALUE
        INTO vCOL_Y3_VALUE,vCOL_Y6_VALUE,vCOL_Y9_VALUE,
             vCOL_Y12_VALUE,vCOL_Y15_VALUE,vCOL_Y18_VALUE			 
	   FROM DIAGRAM 
	   WHERE TERMINAL_NAME = For_Init.GetCurrTerm
               AND OSUSER_NAME = For_Init.GetCurrUser
			   AND COL_SORT=PrevYear;
    EXCEPTION 
	  WHEN OTHERS THEN
	    vCOL_Y3_VALUE:='0';
		vCOL_Y6_VALUE:='0';
		vCOL_Y9_VALUE:='0';
		vCOL_Y12_VALUE:='0';
		vCOL_Y15_VALUE:='0';
		vCOL_Y18_VALUE:='0';
	END;
	vCOL_Y2_VALUE:=REPLACE(vCOL_Y2_VALUE,',','.');
	vCOL_Y3_VALUE:=REPLACE(vCOL_Y3_VALUE,',','.');
	vCOL_Y5_VALUE:=REPLACE(vCOL_Y5_VALUE,',','.');
	vCOL_Y6_VALUE:=REPLACE(vCOL_Y6_VALUE,',','.');
	vCOL_Y8_VALUE:=REPLACE(vCOL_Y8_VALUE,',','.');
	vCOL_Y9_VALUE:=REPLACE(vCOL_Y9_VALUE,',','.');
	vCOL_Y11_VALUE:=REPLACE(vCOL_Y11_VALUE,',','.');
	vCOL_Y12_VALUE:=REPLACE(vCOL_Y12_VALUE,',','.');
	vCOL_Y14_VALUE:=REPLACE(vCOL_Y14_VALUE,',','.');
	vCOL_Y15_VALUE:=REPLACE(vCOL_Y15_VALUE,',','.');
	vCOL_Y17_VALUE:=REPLACE(vCOL_Y17_VALUE,',','.');
	vCOL_Y18_VALUE:=REPLACE(vCOL_Y18_VALUE,',','.');
    UPDATE DIAGRAM SET 
	   COL_Y2_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y2_VALUE||'),0,RC[-1]/'||vCOL_Y2_VALUE||')*100,2)',
	   COL_Y5_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y5_VALUE||'),0,RC[-1]/'||vCOL_Y5_VALUE||')*100,2)',
	   COL_Y3_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y3_VALUE||'),0,RC[-2]/'||vCOL_Y3_VALUE||')*100,2)',
	   COL_Y6_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y6_VALUE||'),0,RC[-2]/'||vCOL_Y6_VALUE||')*100,2)'/*,
	   COL_Y8_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y8_VALUE||'),0,RC[-1]/'||vCOL_Y8_VALUE||')*100,2)',
	   COL_Y11_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y11_VALUE||'),0,RC[-1]/'||vCOL_Y11_VALUE||')*100,2)',
	   COL_Y14_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y14_VALUE||'),0,RC[-1]/'||vCOL_Y14_VALUE||')*100,2)',
	   COL_Y17_VALUE='=ROUND(IF(ISERROR(RC[-1]/'||vCOL_Y17_VALUE||'),0,RC[-1]/'||vCOL_Y17_VALUE||')*100,2)',
	   COL_Y9_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y9_VALUE||'),0,RC[-2]/'||vCOL_Y9_VALUE||')*100,2)',
	   COL_Y12_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y12_VALUE||'),0,RC[-2]/'||vCOL_Y12_VALUE||')*100,2)',
	   COL_Y15_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y15_VALUE||'),0,RC[-2]/'||vCOL_Y15_VALUE||')*100,2)',
	   COL_Y18_VALUE='=ROUND(IF(ISERROR(RC[-2]/'||vCOL_Y18_VALUE||'),0,RC[-2]/'||vCOL_Y18_VALUE||')*100,2)'*/
    WHERE TERMINAL_NAME = For_Init.GetCurrTerm
      AND OSUSER_NAME = For_Init.GetCurrUser 
	  AND COL_SORT=lcur.COL_SORT;					        
  END LOOP;				  
	   
  COMMIT;
  
  -- Избавляемся от еще не наступивших месяцев	
  DELETE FROM V_DIAGRAM WHERE col_sort>cur_month OR VIEW_ROW=0;	

  -- Округляем
  UPDATE V_DIAGRAM SET 
    COL_Y1_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y1_VALUE))),
    COL_Y4_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y4_VALUE)))/*,
    COL_Y7_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y7_VALUE))),
    COL_Y10_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y10_VALUE))),
    COL_Y13_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y13_VALUE))),
    COL_Y16_VALUE=TO_CHAR(ROUND(TO_NUMBER(COL_Y16_VALUE)))*/;

  COMMIT;
  
END;

END; 
/

