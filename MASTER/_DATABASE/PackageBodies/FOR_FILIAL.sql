--
-- FOR_FILIAL  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_Filial AS

-- Загрузить отчет из буфера
FUNCTION LOAD_FROM_BUF RETURN NUMBER AS

 CURSOR tmp_cur IS
  SELECT FILIAL_ID, DATE_REPORT, FILENAME, DATE_LOAD, REP_TYPE_ID, TIP_ORG, NAME_ORG, PROD_TAG, PROD_NAME, 
       SUM(FACT) as FACT, SUM(FACT_SUM) as FACT_SUM
  FROM (   
    SELECT FILIAL_ID, DATE_REPORT, FILENAME, DATE_LOAD, REP_TYPE_ID, TIP_ORG, NAME_ORG, PROD_TAG, PROD_NAME, FACT, 0 as FACT_SUM 
    FROM LOAD_BUFFER.TMP_FIL_REALIZ
    WHERE TERMINAL_NAME=For_Init.GetCurrTerm AND OSUSER_NAME=For_Init.GetCurrUser
	  AND PROD_TAG NOT LIKE '%_RUB'
    union all
    SELECT FILIAL_ID, DATE_REPORT, FILENAME, DATE_LOAD, REP_TYPE_ID, TIP_ORG, NAME_ORG, SUBSTR(PROD_TAG,1,INSTR(PROD_TAG,'_RUB',-1)-1) as PROD_TAG, PROD_NAME, 0 as FACT, FACT as FACT_SUM 
    FROM LOAD_BUFFER.TMP_FIL_REALIZ
    WHERE TERMINAL_NAME=For_Init.GetCurrTerm AND OSUSER_NAME=For_Init.GetCurrUser
	  AND PROD_TAG LIKE '%_RUB'
  	   )
  GROUP BY FILIAL_ID, DATE_REPORT, FILENAME, DATE_LOAD, REP_TYPE_ID, TIP_ORG, NAME_ORG, PROD_TAG, PROD_NAME	  
  ORDER BY REP_TYPE_ID,FILIAL_ID,TIP_ORG,NAME_ORG,DATE_REPORT,PROD_TAG;

  IsFirst NUMBER(1);
  per_id NUMBER;
  org_id NUMBER;
  i NUMBER;
  prod_id NUMBER;
  reg_id NUMBER;
  vPROD_TAG VARCHAR2(200);
  vOPER_TAG VARCHAR2(200);
  oldORG_TAG VARCHAR2(200);
  vORG_TAG VARCHAR2(200);
  res NUMBER;
  DateNow DATE;
  vDATE_OPER DATE;
BEGIN
  IsFirst:=1;
  oldORG_TAG:='';
  DateNow:=SYSDATE;
  FOR lcur IN tmp_cur
  LOOP
    IF IsFirst=1 THEN
	  -- Поиск и обновление отчетного периода
	  UPDATE LOAD_FIL_PERIODS SET
	    (FILENAME, DATE_LOAD, USER_LOAD, STATUS)=
		(SELECT lcur.FILENAME,DateNow,For_Init.GetCurrUser,0 FROM dual)
      WHERE REP_TYPE_ID=lcur.REP_TYPE_ID
		AND FILIAL_ID=lcur.FILIAL_ID
		AND DATE_REPORT=TRUNC(lcur.DATE_REPORT,'MONTH');

	  IF SQL%NOTFOUND THEN
  	    INSERT INTO LOAD_FIL_PERIODS (FILIAL_ID, DATE_REPORT, FILENAME, DATE_LOAD, USER_LOAD, REP_TYPE_ID,STATUS)
 	  	  VALUES (lcur.FILIAL_ID,TRUNC(lcur.DATE_REPORT,'MONTH'),lcur.FILENAME,DateNow,For_Init.GetCurrUser, lcur.REP_TYPE_ID,0);
	  END IF;
	  COMMIT;

      SELECT id INTO per_id
	    FROM LOAD_FIL_PERIODS
	   WHERE REP_TYPE_ID=lcur.REP_TYPE_ID
		 AND FILIAL_ID=lcur.FILIAL_ID
		 AND DATE_REPORT=TRUNC(lcur.DATE_REPORT,'MONTH');

	  DELETE FROM LOAD_FIL_REALIZ
       WHERE REP_TYPE_ID=lcur.REP_TYPE_ID
         AND FILIAL_ID=lcur.FILIAL_ID
  		 AND FIL_PERIOD_ID=per_id;
	  COMMIT;
	END IF;
	IsFirst:=0;

	i:=INSTR(lcur.PROD_TAG,'_');
	IF i=0 THEN
	  vPROD_TAG:=NLS_UPPER(lcur.PROD_TAG);
	  vOPER_TAG:='';
	ELSE
	  vPROD_TAG:=SUBSTR(lcur.PROD_TAG,1,i-1);
	  vOPER_TAG:=SUBSTR(lcur.PROD_TAG,i+1,200);
	END IF;

  	-- Поиск и обновление продукта
    UPDATE LOAD_FIL_PROD SET NAME=lcur.PROD_NAME
        WHERE TAG=vPROD_TAG;

    IF SQL%NOTFOUND THEN
     INSERT INTO LOAD_FIL_PROD (TAG, NAME)
  	  VALUES (vPROD_TAG,lcur.PROD_NAME);
    END IF;
	COMMIT;

    SELECT id INTO prod_id
        FROM LOAD_FIL_PROD
       WHERE TAG=vPROD_TAG;

	-- Поиск и обновление подразделения
	vORG_TAG:=TO_CHAR(lcur.FILIAL_ID)||'_'||NLS_UPPER(lcur.NAME_ORG);
	IF oldORG_TAG||' '<>vORG_TAG||' ' THEN
	  oldORG_TAG:=vORG_TAG;

      UPDATE LOAD_FIL_ORG SET (NAME, ORG_KIND_ID)=
	    (SELECT lcur.NAME_ORG, DECODE(lcur.TIP_ORG,1,5,1) FROM dual)
        WHERE TAG=vORG_TAG AND FILIAL_ID=lcur.FILIAL_ID;

      IF SQL%NOTFOUND THEN
  	    INSERT INTO LOAD_FIL_ORG (TAG, FILIAL_ID, NAME, ORG_KIND_ID)
 	  	  VALUES (vORG_TAG,lcur.FILIAL_ID,lcur.NAME_ORG,DECODE(lcur.TIP_ORG,1,5,1));
      END IF;
	  COMMIT;

      SELECT id INTO org_id
        FROM LOAD_FIL_ORG
        WHERE TAG=vORG_TAG AND FILIAL_ID=lcur.FILIAL_ID;
	END IF;

	-- Добавить запись реализации
	IF vOPER_TAG='OST' THEN
	  vDATE_OPER:=lcur.DATE_REPORT+1;
	ELSE
	  vDATE_OPER:=lcur.DATE_REPORT;
	END IF;
  	INSERT INTO LOAD_FIL_REALIZ (FILIAL_ID, FIL_PERIOD_ID, FIL_ORG_ID, FIL_PROD_ID, TYPE_OPER_ID, FACT, FACT_SUM, REP_TYPE_ID, DATE_OPER)
  	  VALUES (lcur.FILIAL_ID,per_id,org_id,prod_id,DECODE(vOPER_TAG,'REAL',1,3),lcur.FACT,lcur.FACT_SUM,lcur.REP_TYPE_ID,vDATE_OPER);
--  	COMMIT;

  END LOOP;
  COMMIT;
  RETURN per_id;
END;


-- Перенос данных в AZC_OPERATION
PROCEDURE MOVE_TO_AZC_OPER (PeriodId NUMBER) IS
  FilialId NUMBER;
  FilialId_2 NUMBER;
  DateRep DATE;
  DateNow DATE;
  DateBeg DATE;
  DateEnd DATE;
BEGIN
  DateNow:=SYSDATE;

  -- Определяем филиал и отчетный период
  SELECT FILIAL_ID, DATE_REPORT INTO FilialId,DateRep FROM LOAD_FIL_PERIODS WHERE ID=PeriodId;
  DateRep:=TRUNC(DateRep,'MONTH');
  DateBeg:=DateRep;
  DateEnd:=LAST_DAY(DateBeg);
  
  FilialId_2:=0;
  IF FilialID=30 then
    FilialID_2:=59;
  END IF;	
  IF FilialID=31 then
    FilialID_2:=22;
  END IF;	

  -- Обновляем информацию по движению
  UPDATE AZC_OPERATION A SET
    (DENCITY, VOLUME, VES, NOTE, SOBSTV_ID, SUMMA, PRICE, PLACE_SEND_ID, DATE_INTO) =
	(SELECT 0, 0, SUM(FACT), 'ЗАГРУЗКА ИЗ ФИЛИАЛОВ',1,SUM(NVL(FACT_SUM,0)),0,1,DateNow
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D,V_ORG_STRUCTURE CC
	  WHERE B.FIL_ORG_ID=C.ID AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции 
		AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
		AND C.ORG_STRU_ID=CC.ID 
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND D.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND D.PROD_ID_NPR>='11900')) 
		) 
  WHERE A.DATE_OPER>DateBeg-1
	AND A.DATE_OPER<DateEnd+1 -- Период
	AND A.TYPE_OPER_ID<>3 -- Движение
	AND A.DISCOUNT=0
	AND A.PRICE=0
	AND EXISTS
	(SELECT NULL
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D,V_ORG_STRUCTURE CC
	  WHERE B.FIL_ORG_ID=C.ID AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции 
		AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
		AND C.ORG_STRU_ID=CC.ID 
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND D.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND D.PROD_ID_NPR>='11900')) 
		); 

  COMMIT;

  -- Обновляем информацию по остаткам
  UPDATE AZC_OPERATION A SET
    (DENCITY, VOLUME, VES, NOTE, SOBSTV_ID, SUMMA, PRICE, PLACE_SEND_ID, DATE_INTO) =
	(SELECT 0, 0, SUM(FACT), 'ЗАГРУЗКА ИЗ ФИЛИАЛОВ',1,SUM(NVL(FACT_SUM,0)),0,1,DateNow
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D,V_ORG_STRUCTURE CC
	  WHERE B.FIL_ORG_ID=C.ID AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции 
		AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
		AND C.ORG_STRU_ID=CC.ID 
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND D.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND D.PROD_ID_NPR>='11900')) 
		) 
  WHERE A.DATE_OPER>DateBeg
	AND A.DATE_OPER<DateEnd+2 -- Период со сдвигом на 1 день
	AND A.TYPE_OPER_ID=3 -- Остатки
	AND A.DISCOUNT=0
	AND A.PRICE=0
	AND EXISTS
	(SELECT NULL
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D,V_ORG_STRUCTURE CC
	  WHERE B.FIL_ORG_ID=C.ID AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции 
		AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
		AND C.ORG_STRU_ID=CC.ID 
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND D.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND D.PROD_ID_NPR>='11900')) 
		); 

  COMMIT;

  -- Добавляем информацию по движению
  INSERT INTO AZC_OPERATION
    (DATE_OPER, DENCITY, VOLUME, VES, NOTE, TYPE_OPER_ID, PROD_ID_NPR,
	 SOBSTV_ID, ORG_STRU_ID, SUMMA, PRICE, PLACE_SEND_ID, DATE_INTO)
	SELECT DATE_OPER,0,0,SUM(FACT),'ЗАГРУЗКА ИЗ ФИЛИАЛОВ',TYPE_OPER_ID,D.PROD_ID_NPR,
	   1,C.ORG_STRU_ID,SUM(NVL(FACT_SUM,0)),0,1,DateNow
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D,V_ORG_STRUCTURE CC
	  WHERE B.FIL_ORG_ID=C.ID AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.TYPE_OPER_ID<>3 -- Тип операции - Движение
		AND C.ORG_STRU_ID=CC.ID 
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND D.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND D.PROD_ID_NPR>='11900')) 
        AND NOT EXISTS
		(SELECT NULL
		   FROM AZC_OPERATION A
		  WHERE A.DATE_OPER>DateBeg-1
            AND A.DATE_OPER<DateEnd+1 -- Период
   	        AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		    AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции
		    AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		    AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
	        AND A.DISCOUNT=0
         	AND A.PRICE=0
			)
	GROUP BY DATE_OPER,TYPE_OPER_ID,D.PROD_ID_NPR,C.ORG_STRU_ID
	HAVING SUM(FACT)<>0; 

  COMMIT;

  -- Добавляем информацию по остаткам
  INSERT INTO AZC_OPERATION
    (DATE_OPER, DENCITY, VOLUME, VES, NOTE, TYPE_OPER_ID, PROD_ID_NPR,
	 SOBSTV_ID, ORG_STRU_ID, SUMMA, PRICE, PLACE_SEND_ID, DATE_INTO)
	SELECT DATE_OPER,0,0,SUM(FACT),'ЗАГРУЗКА ИЗ ФИЛИАЛОВ',TYPE_OPER_ID,D.PROD_ID_NPR,
	   1,C.ORG_STRU_ID,SUM(NVL(FACT_SUM,0)),0,1,DateNow
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D,V_ORG_STRUCTURE CC
	  WHERE B.FIL_ORG_ID=C.ID AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.TYPE_OPER_ID=3 -- Тип операции - остатки
		AND C.ORG_STRU_ID=CC.ID 
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND D.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND D.PROD_ID_NPR>='11900')) 
        AND NOT EXISTS
		(SELECT NULL
		   FROM AZC_OPERATION A
		  WHERE A.DATE_OPER>DateBeg
            AND A.DATE_OPER<DateEnd+2 -- Период
   	        AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		    AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции
		    AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		    AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
	        AND A.DISCOUNT=0
         	AND A.PRICE=0
			)
	GROUP BY DATE_OPER,TYPE_OPER_ID,D.PROD_ID_NPR,C.ORG_STRU_ID 
	HAVING SUM(FACT)<>0; 

  COMMIT;

  -- Удаление информации по движению
  DELETE FROM AZC_OPERATION A
  WHERE EXISTS 
    (SELECT NULL FROM V_ORG_STRUCTURE CC WHERE CC.ID=A.ORG_STRU_ID 
	    AND (CC.FILIAL_ID=FilialID OR CC.FILIAL_ID=FilialID_2) -- Филиал
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND A.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND A.PROD_ID_NPR>='11900'))
	)		  
    AND A.DATE_OPER>DateBeg-1
	AND A.DATE_OPER<DateEnd+1 -- Период
	AND A.TYPE_OPER_ID<>3 -- Тип операции: Движение
	AND NOT EXISTS
	(SELECT NULL
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D
	  WHERE B.FIL_ORG_ID=C.ID 
	    AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции 
		AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
     	AND FACT<>0 
		AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
        AND A.DISCOUNT=0
       	AND A.PRICE=0
		); 

  COMMIT;

  -- Удаление информации по остаткам
  DELETE FROM AZC_OPERATION A
  WHERE EXISTS 
    (SELECT NULL FROM V_ORG_STRUCTURE CC WHERE CC.ID=A.ORG_STRU_ID 
	    AND (CC.FILIAL_ID=FilialID OR CC.FILIAL_ID=FilialID_2) -- Филиал
		AND ((CC.LOAD_NALIV_FROM_XLS=1 AND A.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_XLS=1 AND A.PROD_ID_NPR>='11900'))
	)		  
    AND A.DATE_OPER>DateBeg
	AND A.DATE_OPER<DateEnd+2 -- Период со сдвигом на 1 день
	AND A.TYPE_OPER_ID=3 -- Тип операции: Остатки
	AND NOT EXISTS
	(SELECT NULL
	   FROM LOAD_FIL_REALIZ B, LOAD_FIL_ORG C, LOAD_FIL_PROD D
	  WHERE B.FIL_ORG_ID=C.ID 
	    AND B.FIL_PROD_ID=D.ID
	    AND B.FILIAL_ID=FilialID -- Филиал
	    AND B.FIL_PERIOD_ID=PeriodId -- Период
		AND B.REP_TYPE_ID=1
		AND B.DATE_OPER=A.DATE_OPER -- Отчетная дата
		AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции 
		AND D.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		AND C.ORG_STRU_ID=A.ORG_STRU_ID -- Подразделение
        AND A.DISCOUNT=0
      	AND A.PRICE=0
		); 

  COMMIT;

  -- Обновляем статус отчета
  UPDATE LOAD_FIL_PERIODS SET status=2 WHERE id=PeriodId;
  COMMIT;

END;

-- Подготовка данных для отчета "План-факт поставок и реализации"
-- TIP_CALC=0 - Рассчитывать ВСЕ
-- TIP_CALC=1 - Рассчитывать ПЛАН
-- TIP_CALC=2 - Рассчитывать ФАКТ (БЕЗ ОСТАТКОВ)
-- TIP_CALC=3 - Рассчитывать ФАКТ+ОСТАТКИ
-- TIP_CALC=4 - Рассчитывать ОСТАТКИ
-- TIP_CALC=5 - Рассчитывать ПЛАН+ФАКТ (БЕЗ ОСТАТКОВ)
-- ONLY_MAIN=0 - все филиалы 
-- ONLY_MAIN=1 -- только головное НПО (без Архангельска)
PROCEDURE PF_REALIZ(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2, TIP_CALC NUMBER DEFAULT 0) AS
  dDATE_BEG DATE;
  dDATE_END DATE;
  dDATE_PLAN DATE;
  cnt1 NUMBER;
  Koef FLOAT;
  dMON_END DATE;
BEGIN

  dDATE_END:=TO_DATE(date_end,'dd.mm.yyyy');
  dDATE_BEG:=TO_DATE(date_beg,'dd.mm.yyyy');
  dDATE_PLAN:=TRUNC(dDATE_BEG,'MONTH');
  dMON_END:=LAST_DAY(dDATE_END);
  Koef:=(dDATE_END-dDATE_PLAN+1)/(dMON_END-dDATE_PLAN+1);

  -- Очистка таблицы PLAN_FACT
  DELETE FROM V_PLAN_FACT_REALIZ;
  COMMIT;

  -- Регионы реализации: 1 - Коми, 2 - Арханегльск, 3 - Прочие
  -- Направление реализации: 1 - АЗС, 2-Нефтебазы, 3-Транзит
 
  -- 1) План поставок с УНП (ТРАНЗИТ)
  IF TIP_CALC=0 OR TIP_CALC=1 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, PLAN_POST_VES, NORMA_POST_VES)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      DECODE(D.REGION_ID,21,2,1) AS REGION_ID, -- Регион реализации
      DECODE(NVL(D.TIP_REAL_ID,0),1,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)) AS NAPR_ID, -- Направление реализации
      PROD_ID_NPR, -- Продукт
      SUM(PLAN_VES) AS PLAN_POST_VES, -- Вес в тоннах
	  SUM(PLAN_VES*Koef) AS NORMA_POST_VES -- Норма
    FROM PLAN_POST,V_KLS_PLANSTRU D,PLAN_PERIODS
    WHERE PLAN_POST.PLANSTRU_ID=D.ID
      AND PLAN_POST.PLAN_PER_ID=PLAN_PERIODS.ID
      AND PLAN_POST.PLAN_ID in (12,13) 
      AND D.SPF_NAME='ТРАНЗИТ'
      AND D.ID<>97-- План по ЛУКОЙЛ-СНП без отгрузки на хранение
      AND PLAN_PERIODS.DATE_PLAN BETWEEN dDATE_PLAN AND dDATE_END
    GROUP BY
      DECODE(D.REGION_ID,21,2,1),
      DECODE(NVL(D.TIP_REAL_ID,0),1,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)),
      PROD_ID_NPR;
  END IF;
  COMMIT;

 
  -- 2) План поставок АЗС+Нефтебазы
  IF TIP_CALC=0 OR TIP_CALC=1 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
    (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, PLAN_POST_VES, NORMA_POST_VES)
    SELECT
    'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
    DECODE(A.ORG_STRU_ID,40,2,1) AS REGION_ID, -- Регион реализации
    DECODE(A.TIP_REAL_ID,2,3,DECODE(A.ORG_KIND_ID,5,1,12,1,2)) AS NAPR_ID, -- Направление реализации
    B.PROD_ID_NPR, -- Продукт
    SUM(A.VES) AS PLAN_REAL_VES, -- Вес в тоннах
    SUM(A.VES*Koef) AS NORMA_REAL_VES -- Норма
    FROM PLAN_REALIZ A, PARUS_NOMEN_PROD_LINK B 
    WHERE A.DATE_PLAN BETWEEN dDATE_PLAN AND dDATE_END
      AND A.PARUS_RN IS NOT NULL
      AND A.PARUS_NOMEN=B.NOMEN_RN
	  AND A.ORG_STRU_ID<>40 -- Без Архангельска
    GROUP BY
    DECODE(A.ORG_STRU_ID,40,2,1),
    DECODE(A.TIP_REAL_ID,2,3,DECODE(A.ORG_KIND_ID,5,1,12,1,2)),
    B.PROD_ID_NPR;
  END IF;
  COMMIT;

  
  -- 3) Факт поставки
  IF TIP_CALC=0 OR TIP_CALC=2 OR TIP_CALC=3 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, FACT_POST_VES)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      DECODE(D.REGION_ID,21,2,1) AS REGION_ID, -- Регион реализации
      DECODE(KLS_DOG.PREDPR_ID,2641,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)) AS NAPR_ID, -- Направление реализации
      KVIT.PROD_ID_NPR, -- Продукт
      SUM(VES_BRUTTO) AS FACT_POST_VES -- Вес в тоннах
    FROM KVIT,MONTH,V_KLS_PLANSTRU D,ZAKAZ unp,ZAKAZ snp,KLS_DOG,KLS_DOG ORIG_DOG
    WHERE KVIT.NOM_ZD=MONTH.NOM_ZD
      AND snp.PLANSTRU_ID=D.ID
      AND D.ID<>97-- План по ЛУКОЙЛ-СНП без отгрузки на хранение
      AND snp.DOG_ID=KLS_DOG.ID AND MONTH.DOG_ID=ORIG_DOG.ID AND ORIG_DOG.PREDPR_ID=2641   
      AND MONTH.DATE_PLAN>=dDATE_PLAN
      AND KVIT.DATE_OTGR BETWEEN dDATE_BEG AND dDATE_END
	  AND month.ZAKAZ_ID=unp.ID AND unp.LINK_ID=snp.ID
    GROUP BY
      DECODE(D.REGION_ID,21,2,1),
      DECODE(KLS_DOG.PREDPR_ID,2641,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)),
      KVIT.PROD_ID_NPR;
  END IF;
  COMMIT;

  -- 4) План реализации
  IF TIP_CALC=0 OR TIP_CALC=1 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, PLAN_REAL_VES,NORMA_REAL_VES)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      DECODE(ORG_STRU_ID,40,2,1) AS REGION_ID, -- Регион реализации
      DECODE(TIP_REAL_ID,2,3,DECODE(ORG_KIND_ID,5,1,12,1,2)) AS NAPR_ID, -- Направление реализации
      PROD_ID_NPR, -- Продукт
      SUM(VES) AS PLAN_REAL_VES, -- Вес в тоннах
      SUM(VES*Koef) AS NORMA_REAL_VES -- Норма
    FROM PLAN_REALIZ A
    WHERE DATE_PLAN BETWEEN dDATE_PLAN AND dDATE_END
      AND A.PARUS_RN IS NULL
    GROUP BY
      DECODE(ORG_STRU_ID,40,2,1),
      DECODE(TIP_REAL_ID,2,3,DECODE(ORG_KIND_ID,5,1,12,1,2)),
      PROD_ID_NPR;
  END IF;
  COMMIT;

  -- 5) Факт реализации (с АЗС и Нефтебаз)
  IF TIP_CALC=0 OR TIP_CALC=2 OR TIP_CALC=3 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, FACT_REAL_VES)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      DECODE(NVL(C.FILIAL_ID,0),40,2,50,2,1) AS REGION_ID, -- Регион реализации
      DECODE(C.ORG_KIND_ID,5,1,12,1,2) AS NAPR_ID, -- Направление реализации
      PROD_ID_NPR, -- Продукт
      SUM(VES/1000) AS FACT_REAL_VES -- Вес в тоннах
    FROM AZC_OPERATION,V_ORG_STRUCTURE C
    WHERE AZC_OPERATION.TYPE_OPER_ID=1
      AND AZC_OPERATION.ORG_STRU_ID=C.ID
  	  AND AZC_OPERATION.ORG_STRU_ID not in (44,9049)  -- Без Автоналива и Архэнерго
      AND DATE_OPER BETWEEN dDATE_BEG AND dDATE_END
      AND C.ORG_KIND_ID IN (1,5,11,12,13)
	  AND AZC_OPERATION.DISCOUNT<>815
    GROUP BY
      DECODE(NVL(C.FILIAL_ID,0),40,2,50,2,1),
      DECODE(C.ORG_KIND_ID,5,1,12,1,2),
      PROD_ID_NPR;

	 -- Добавить Автоналив
	IF FILIAL_ID<>'40' THEN 
      INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, FACT_REAL_VES)
      SELECT
        'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
        1 AS REGION_ID, -- Регион реализации
        2 AS NAPR_ID, -- Направление реализации
        B.PROD_ID_NPR, -- Продукт
        SUM(A.NQUANTALT)/1000 AS FACT_REAL_VES -- Вес в тоннах
      FROM V_PARUS_TRANSINVCUST A,PARUS_NOMEN_PROD_LINK B,V_ORG_STRUCTURE C 
      WHERE A.sSTORE_CATALOG_NAME='Автоналив'
        AND A.NNOMEN=B.NOMEN_RN
        AND A.dDOCDATE>=dDATE_BEG
        AND A.dDOCDATE<=dDATE_END
	    AND C.ID=44 
      GROUP BY
        B.PROD_ID_NPR;
		
		null;
	
  	   -- Добавить Маслобазу (Дежневский нефтесклад) - НАЛИВНЫЕ МАСЛА
 /*     INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, FACT_REAL_VES)
      SELECT
        'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
        1 AS REGION_ID, -- Регион реализации
        2 AS NAPR_ID, -- Направление реализации
        B.ID_NPR as PROD_ID_NPR, -- Продукт
        SUM(A.NQUANTALT)/1000 AS FACT_REAL_VES -- Вес в тоннах
      FROM V_PARUS_TRANSINVCUST A,V_ORG_STRUCTURE C,KLS_PROD B 
      WHERE A.sSTORE_CATALOG_NAME='Маслобаза'
  	    AND A.sCATALOG_NAME='Маслобаза_налив'
        AND A.dDOCDATE>=dDATE_BEG
        AND A.dDOCDATE<=dDATE_END
	    AND B.ID_NPR='11900'
	    AND C.ID=2023 
      GROUP BY
        B.ID_NPR;

	   -- Добавить Маслобазу (Дежневский нефтесклад) - ФАСОВАННЫЕ МАСЛА
      INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, FACT_REAL_VES)
      SELECT
        'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
        1 AS REGION_ID, -- Регион реализации
        2 AS NAPR_ID, -- Направление реализации
        B.ID_NPR as PROD_ID_NPR, -- Продукт
        SUM(A.NQUANTALT)/1000 AS FACT_REAL_VES -- Вес в тоннах
      FROM V_PARUS_TRANSINVCUST A,V_ORG_STRUCTURE C,KLS_PROD B 
      WHERE A.sSTORE_CATALOG_NAME='Маслобаза'
	    AND A.sCATALOG_NAME='Маслобаза_фас'
        AND A.dDOCDATE>=dDATE_BEG
        AND A.dDOCDATE<=dDATE_END
	    AND B.ID_NPR='80018'
	    AND C.ID=2023 
      GROUP BY
        B.ID_NPR;*/
    END IF;
  END IF;
  COMMIT;

  -- 6) План реализации (ТРАНЗИТ)
  IF TIP_CALC=0 OR TIP_CALC=1 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, PLAN_REAL_VES, NORMA_REAL_VES)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      DECODE(D.REGION_ID,21,2,1) AS REGION_ID, -- Регион реализации
      DECODE(NVL(D.TIP_REAL_ID,0),1,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)) AS NAPR_ID, -- Направление реализации
      PROD_ID_NPR, -- Продукт
      SUM(PLAN_VES) AS PLAN_REAL_VES, -- Вес в тоннах
	  SUM(PLAN_VES*Koef) AS NORMA_REAL_VES -- Норма
    FROM PLAN_POST,V_KLS_PLANSTRU D,PLAN_PERIODS
    WHERE PLAN_POST.PLANSTRU_ID=D.ID
      AND PLAN_POST.PLAN_PER_ID=PLAN_PERIODS.ID
      AND PLAN_POST.PLAN_ID in (12,13) 
      AND D.SPF_NAME='ТРАНЗИТ'
      AND D.ID<>97-- План по ЛУКОЙЛ-СНП без отгрузки на хранение
      AND PLAN_PERIODS.DATE_PLAN BETWEEN dDATE_PLAN AND dDATE_END
    GROUP BY
      DECODE(D.REGION_ID,21,2,1),
      DECODE(NVL(D.TIP_REAL_ID,0),1,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)),
      PROD_ID_NPR;
	
  END IF;
  COMMIT;
  
  -- 6) Факт реализации (ТРАНЗИТ)
  IF TIP_CALC=0 OR TIP_CALC=2 OR TIP_CALC=3 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, FACT_REAL_VES)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
--      DECODE(D.REGION_ID,21,2,1) AS REGION_ID, -- Регион реализации
      1 as REGION_ID,
      DECODE(KLS_DOG.PREDPR_ID,2641,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)) AS NAPR_ID, -- Направление реализации
      KVIT.PROD_ID_NPR, -- Продукт
      SUM(VES_BRUTTO) AS FACT_REAL_VES -- Вес в тоннах
    FROM KVIT,MONTH,V_KLS_PLANSTRU D,ZAKAZ unp,ZAKAZ snp,KLS_DOG,KLS_DOG ORIG_DOG
    WHERE KVIT.NOM_ZD=MONTH.NOM_ZD
      AND snp.PLANSTRU_ID=D.ID
      AND D.ID<>97-- План по ЛУКОЙЛ-СНП без отгрузки на хранение
      AND snp.DOG_ID=KLS_DOG.ID AND MONTH.DOG_ID=ORIG_DOG.ID AND ORIG_DOG.PREDPR_ID=2641 AND KLS_DOG.PREDPR_ID<>2641  -- Транзит
--	  AND NVL(D.REGION_ID,0)<>21 -- Без Архангельска   
      AND MONTH.DATE_PLAN>=dDATE_PLAN
      AND KVIT.DATE_OTGR BETWEEN dDATE_BEG AND dDATE_END
	  AND month.ZAKAZ_ID=unp.ID AND unp.LINK_ID=snp.ID
    GROUP BY
--      DECODE(D.REGION_ID,21,2,1),
      DECODE(KLS_DOG.PREDPR_ID,2641,DECODE(D.ORG_KIND_ID,5,1,12,1,2),DECODE(D.REGION_ID,21,3,3)),
      KVIT.PROD_ID_NPR;
	
	-- Добавить Архангельский транзит  
/*    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, FACT_REAL_VES)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      2 AS REGION_ID, -- Регион реализации
      3 AS NAPR_ID, -- Направление реализации
      PROD_ID_NPR, -- Продукт
      SUM(VES/1000) AS FACT_REAL_VES -- Вес в тоннах
    FROM AZC_OPERATION,V_ORG_STRUCTURE C
    WHERE AZC_OPERATION.TYPE_OPER_ID=1
      AND AZC_OPERATION.ORG_STRU_ID=C.ID
  	  AND AZC_OPERATION.ORG_STRU_ID=9049  -- только Архэнерго
      AND DATE_OPER BETWEEN dDATE_BEG AND dDATE_END
	  AND AZC_OPERATION.DISCOUNT<>815
    GROUP BY
      PROD_ID_NPR;
*/	  
  END IF;
  COMMIT;

  IF TIP_CALC=0 OR TIP_CALC=3 OR TIP_CALC=4 THEN
  SELECT COUNT(*) INTO cnt1 FROM OSTAT_KONS WHERE DATE_OST=dDATE_BEG;
  IF cnt1>0 THEN
    -- 7) Остатки на начало периода (АЗС и Нефтебазы) по данныи консолидированной отчетности
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, BEGIN_OST)
    SELECT
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      DECODE(OSTAT_KONS.FILIAL_ID,40,2,1) AS REGION_ID, -- Регион реализации
      DECODE(ORG_STRUCTURE.ORG_KIND_ID,5,1,12,1,2) AS NAPR_ID, -- Направление реализации
      KLS_PROD.ID_NPR AS PROD_ID_NPR, -- Продукт
      SUM(KG/1000) AS BEGIN_OST -- Остаток в тоннах
    FROM OSTAT_KONS,KLS_PROD_KONS,ORG_STRUCTURE,KLS_PROD
    WHERE OSTAT_KONS.ORG_STRU_ID=ORG_STRUCTURE.ID
      AND OSTAT_KONS.PROD_KONS_ID=KLS_PROD_KONS.ID
      AND KLS_PROD_KONS.PROD_ID_NPR=KLS_PROD.ID_NPR
      AND OSTAT_KONS.DATE_OST=dDATE_BEG
      AND ORG_STRUCTURE.ORG_KIND_ID IN (1,5,11,12,13)
    GROUP BY
      DECODE(OSTAT_KONS.FILIAL_ID,40,2,1),
      DECODE(ORG_STRUCTURE.ORG_KIND_ID,5,1,12,1,2),
      KLS_PROD.ID_NPR;
  ELSE

    -- 7) Остатки на начало периода (АЗС и Нефтебазы) из по оперативным данным филиалов (AZC_OPERATION)
    FOR lcur IN (SELECT DISTINCT /* Выборка всех комбинаций Склад/продукт за последние 2-3 месяца - для ускорения */
                 C.FILIAL_ID, -- Филиал 
				 A.ORG_STRU_ID, -- Склад
				 A.PROD_ID_NPR, -- Продукт
                 DECODE(C.FILIAL_ID,40,2,1) AS REGION_ID, -- Регион реализации
                 DECODE(C.ORG_KIND_ID,5,1,12,1,2) AS NAPR_ID -- Направление реализации
               FROM AZC_OPERATION A, KLS_PROD B, v_org_structure C
			   WHERE A.DATE_OPER>=ADD_MONTHS(TRUNC(dDATE_BEG,'MONTH'),-2)
                 AND A.DATE_OPER<=dDATE_END
                 AND A.ORG_STRU_ID=C.ID
                 AND C.ORG_KIND_ID IN (1,5,11,12,13)
                 AND A.PROD_ID_NPR=B.ID_NPR
				) LOOP 
	
      INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, BEGIN_OST)
      VALUES (
        'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
        lcur.REGION_ID, -- Регион реализации
        lcur.NAPR_ID, -- Направление реализации
        lcur.PROD_ID_NPR, -- Продукт
        GET_OST_BEGIN_MAS(lcur.ORG_STRU_ID,lcur.PROD_ID_NPR,dDATE_BEG)/1000
	  ); -- Остаток в тоннах
    COMMIT; 
    END LOOP;
  END IF;
  COMMIT;

  -- 8) Остатки на конец периода (АЗС и Нефтебазы) по оперативным данным филиалов (AZC_OPERATION)
  FOR lcur IN (SELECT DISTINCT /* Выборка всех комбинаций Склад/продукт за последние 2-3 месяца - для ускорения */
                 C.FILIAL_ID, -- Филиал 
				 A.ORG_STRU_ID, -- Склад
				 A.PROD_ID_NPR, -- Продукт
                 DECODE(C.FILIAL_ID,40,2,1) AS REGION_ID, -- Регион реализации
                 DECODE(C.ORG_KIND_ID,5,1,12,1,2) AS NAPR_ID -- Направление реализации
               FROM AZC_OPERATION A, KLS_PROD B, v_org_structure C
			   WHERE A.DATE_OPER>=ADD_MONTHS(TRUNC(dDATE_BEG,'MONTH'),-2)
                 AND A.DATE_OPER<=dDATE_END
                 AND A.ORG_STRU_ID=C.ID
                 AND C.ORG_KIND_ID IN (1,5,11,12,13)
                 AND A.PROD_ID_NPR=B.ID_NPR
				) LOOP 

    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,REGION_ORDER, NAPR_ORDER, PROD_ID_NPR, END_OST)
    VALUES (
      'ПЛАН-ФАКТ ПОСТАВКИ И РЕАЛИЗАЦИИ',
      lcur.REGION_ID, -- Регион реализации
      lcur.NAPR_ID, -- Направление реализации
      lcur.PROD_ID_NPR, -- Продукт
      GET_OST_END_MAS(lcur.ORG_STRU_ID,lcur.PROD_ID_NPR,dDATE_END)/1000
	  );
	COMMIT;   
  END LOOP;
  END IF; -- TIP_CALC
  COMMIT;
  

  -- Удаление ненужного
  -- ТТХ
  DELETE FROM V_PLAN_FACT_REALIZ
    WHERE PROD_ID_NPR='80020';
  COMMIT;

  -- Удаление ненужного
  IF FILIAL_ID='40' THEN
    DELETE FROM V_PLAN_FACT_REALIZ
      WHERE REGION_ORDER<>2;
    COMMIT;
  END IF;	
  IF FILIAL_ID='31' THEN
    DELETE FROM V_PLAN_FACT_REALIZ
      WHERE REGION_ORDER=2;
    COMMIT;
  END IF;	
  
  -- Проставить дополнительные поля
  UPDATE V_PLAN_FACT_REALIZ SET
	DATE_BEGIN=dDATE_BEG,
	DATE_END=dDATE_END,
	DATE_PLAN=dDATE_PLAN;

  COMMIT;

  -- Регионы реализации: 1 - Коми, 2 - Арханегльск, 3 - Прочие
  UPDATE V_PLAN_FACT_REALIZ SET REGION_NAME='КОМИ' WHERE REGION_ORDER=1;
  UPDATE V_PLAN_FACT_REALIZ SET REGION_NAME='АРХАНГЕЛЬСК' WHERE REGION_ORDER=2;
  UPDATE V_PLAN_FACT_REALIZ SET REGION_NAME='ПРОЧИЕ РЕГИОНЫ' WHERE REGION_ORDER=3;

  COMMIT;

  -- Направление реализации: 1 - АЗС, 2-Нефтебазы, 3-Транзит
  UPDATE V_PLAN_FACT_REALIZ SET NAPR_NAME='АЗС' WHERE NAPR_ORDER=1;
  UPDATE V_PLAN_FACT_REALIZ SET NAPR_NAME='НЕФТЕБАЗЫ' WHERE NAPR_ORDER=2;
  UPDATE V_PLAN_FACT_REALIZ SET NAPR_NAME='ТРАНЗИТ' WHERE NAPR_ORDER=3;

  COMMIT;

  -- Группы продуктов
  UPDATE V_PLAN_FACT_REALIZ A SET (GROUP_ORDER, GROUP_NAME)=
    (SELECT B.GROUP_ORDER, B.GROUP_NAME FROM KLS_PROD_GROUPS B, KLS_PROD_GROUPS_DESC C
	  WHERE C.PROD_GROUPS_ID=B.ID AND C.PROD_TYPE_GRP_ID=5 AND C.PROD_ID_NPR=A.PROD_ID_NPR)
  WHERE EXISTS
    (SELECT NULL FROM KLS_PROD_GROUPS B, KLS_PROD_GROUPS_DESC C
	  WHERE C.PROD_GROUPS_ID=B.ID AND C.PROD_TYPE_GRP_ID=5 AND C.PROD_ID_NPR=A.PROD_ID_NPR);

  COMMIT;

  -- Округление
  UPDATE V_PLAN_FACT_REALIZ SET
    BEGIN_OST=ROUND(BEGIN_OST),
	PLAN_POST_VES=ROUND(PLAN_POST_VES),
	NORMA_POST_VES=ROUND(NORMA_POST_VES),
	FACT_POST_VES=ROUND(FACT_POST_VES),
	RESURS=ROUND(RESURS),
	PLAN_REAL_VES=ROUND(PLAN_REAL_VES),
	NORMA_REAL_VES=ROUND(NORMA_REAL_VES),
	FACT_REAL_VES=ROUND(FACT_REAL_VES),
	END_OST=ROUND(END_OST);

  COMMIT;
END;

-- Последний остаток по подразделению
FUNCTION LAST_OST(pFILIAL_ID NUMBER,pFIL_PERIOD_ID NUMBER,pFIL_ORG_ID NUMBER,pREP_TYPE_ID NUMBER) RETURN NUMBER AS
 CURSOR tmp_cur IS
  SELECT FIL_PROD_ID,MAX(DATE_OPER) AS maxDATE
    FROM LOAD_FIL_REALIZ
   WHERE FILIAl_ID=pFILIAL_ID
     AND FIL_PERIOD_ID=pFIL_PERIOD_ID
	 AND FIL_ORG_ID=pFIL_ORG_ID
	 AND REP_TYPE_ID=pREP_TYPE_ID
	 AND TYPE_OPER_ID=3
	 AND FACT<>0
   GROUP BY FIL_PROD_ID
   ORDER BY FIL_PROD_ID;

  vDATE_OPER DATE;
  vSUM NUMBER;
  vFACT NUMBER;
BEGIN
  vSUM:=0;
  FOR lcur IN tmp_cur
  LOOP

    SELECT SUM(FACT) INTO vFACT
      FROM LOAD_FIL_REALIZ
     WHERE FILIAl_ID=pFILIAL_ID
       AND FIL_PERIOD_ID=pFIL_PERIOD_ID
	   AND FIL_ORG_ID=pFIL_ORG_ID
  	   AND REP_TYPE_ID=pREP_TYPE_ID
	   AND TYPE_OPER_ID=3
  	   AND FIL_PROD_ID=lcur.FIL_PROD_ID
	   AND DATE_OPER=lcur.maxDATE;

	vSUM:=vSUM+vFACT;
  END LOOP;
  RETURN vSUM;

EXCEPTION
  WHEN OTHERS THEN
    RETURN 0;
END;

-- Подготовка данных для отчета "Суточная реализация с АЗС и Нефтебаз"
-- ADD_TRANZIT=1 - Добавить транзит
-- ONLY_FAS=0 - Наливные + фасовка без ТТХ
-- ONLY_FAS=1 - Фасовка с ТТХ
-- ONLY_FAS=2 - Только наливные (сгруппированная дизелька) 
-- ONLY_FAS=3 - Фасовка с ТТХ сгруппированные в ФАСОВАННЫЕ МАСЛА
-- ONLY_FAS=4 - Наливные + Фасовка + ТТХ + Сопутствующие
-- TIP_CALC=0 - Рассчитывать ВСЕ
-- TIP_CALC=1 - Рассчитывать ПЛАН
-- TIP_CALC=2 - Рассчитывать ФАКТ (БЕЗ ОСТАТКОВ)
-- TIP_CALC=3 - Рассчитывать ФАКТ+ОСТАТКИ
-- TIP_CALC=4 - Рассчитывать ОСТАТКИ
-- TIP_CALC=5 - Рассчитывать ПЛАН+ФАКТ (БЕЗ ОСТАТКОВ)
-- ONLY_MAIN=0 - все филиалы 
-- ONLY_MAIN=1 -- только головное НПО (без Архангельска)
-- FAS_IN_RUB=0 - фасовка в тн
-- FAS_IN_RUB=1 - фасовка в рублях
PROCEDURE FIL_SUT_REAL(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2,
          ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2,
		  ADD_TRANZIT NUMBER DEFAULT 0, ONLY_FAS NUMBER DEFAULT 0, TIP_CALC NUMBER DEFAULT 0, 
		  ONLY_MAIN NUMBER DEFAULT 0, FAS_IN_RUB NUMBER DEFAULT 0, pPROD_TYPE NUMBER DEFAULT 5) AS
  nFILIAL NUMBER;
  cFILIAL_NAME VARCHAR2(200);
  nORG_STRU NUMBER;
  nORG_KIND_GRP NUMBER;
  cPROD_GR VARCHAR2(5);
  cPROD VARCHAR2(5);
  nAZC_PROD_GR NUMBER;
  nAZC_PROD NUMBER;
  dDATE_BEG DATE;
  dDATE_END DATE;
  dDATE_PLAN DATE;
  cnt1 NUMBER;
  Koef FLOAT;
  dMON_END DATE;
  vOSUSER VARCHAR2(50);
  vTERMINAL VARCHAR2(50);
BEGIN

  vTERMINAL := For_Init.GetCurrTerm;
  vOSUSER := For_Init.GetCurrUser;

  dDATE_END:=TO_DATE(date_end,'dd.mm.yyyy');
  dDATE_BEG:=TO_DATE(date_beg,'dd.mm.yyyy');
  dDATE_PLAN:=TRUNC(dDATE_BEG,'MONTH');
  dMON_END:=LAST_DAY(dDATE_END);
  Koef:=(dDATE_END-dDATE_PLAN+1)/(dMON_END-dDATE_PLAN+1);

  IF FILIAL_ID<>'*' AND FILIAL_ID IS NOT NULL THEN
    nFILIAL:=TO_NUMBER(FILIAL_ID);
  ELSE
    nFILIAL:=NULL;
  END IF;

  IF ORG_KIND_GRP<>'*' AND ORG_KIND_GRP IS NOT NULL THEN
    nORG_KIND_GRP:=TO_NUMBER(ORG_KIND_GRP);
  ELSE
    nORG_KIND_GRP:=NULL;
  END IF;

  IF ORG_STRU_ID<>'*' AND ORG_STRU_ID IS NOT NULL THEN
    nORG_STRU:=TO_NUMBER(ORG_STRU_ID);
    IF nORG_STRU=9049 THEN
      nORG_STRU:=28;
    END IF;	
  ELSE
    nORG_STRU:=NULL;
  END IF;
  
  IF PROD_GR_id<>'*' AND PROD_GR_id IS NOT NULL THEN
    cPROD_GR:=PROD_GR_id;
  ELSE
    cPROD_GR:=NULL;
  END IF;

  IF PROD_id<>'*' AND PROD_id IS NOT NULL THEN
    cPROD:=PROD_id;
  ELSE
    cPROD:=NULL;
  END IF;

  -- Очистка таблицы PLAN_FACT
  DELETE
    FROM PLAN_FACT_REALIZ
   WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
     AND TERMINAL_NAME = vTERMINAL
     AND OSUSER_NAME = vOSUSER;
  COMMIT;

  -- 4) План реализации
  IF TIP_CALC=0 OR TIP_CALC=1 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	   ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	   PROD_ID_NPR, PLAN_REAL_VES,NORMA_REAL_VES)
    SELECT
      'СУТОЧНАЯ РЕАЛИЗАЦИЯ' AS TIP_ROW,
	  dDATE_BEG,
  	  dDATE_END,
	  dDATE_PLAN,
      C.FILIAL_ID, -- Филиал
      KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
      KLS_ORG_KIND.ID, -- Вид подразделения
      KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
      C.ID AS ORG_STRU_ORDER, -- Подразделение
      C.ID AS ORG_STRU_ID, -- Подразделение
      C.NAME AS ORG_STRU_NAME, -- Подразделение
      A.PROD_ID_NPR, -- Продукт
      SUM(NVL((CASE
	       WHEN KLS_PROD.FASOVKA=1 AND FAS_IN_RUB=1 THEN A.SUMMA
		   ELSE A.VES*1000
		 END),0)) AS PLAN_REAL_VES, -- План в кг (фасовка - в руб)
      SUM(NVL((CASE
	       WHEN KLS_PROD.FASOVKA=1 AND FAS_IN_RUB=1 THEN A.SUMMA
		   ELSE A.VES*1000
		 END)*Koef,0)) AS NORMA_REAL_VES -- Норма
    FROM PLAN_REALIZ A, KLS_PROD,
      V_ORG_STRUCTURE C,KLS_ORG_KIND
    WHERE A.DATE_PLAN BETWEEN dDATE_PLAN AND dDATE_END
      AND A.SKLAD_ID=C.ID
	  AND A.SKLAD_ID NOT IN (28,9049)
      AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
      AND C.ORG_KIND_ID IN (1,5,11,12,13)
	  AND A.PROD_ID_NPR=KLS_PROD.ID_NPR
	  AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	  AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
	  AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
      AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	  AND (A.SKLAD_ID=NVL(nORG_STRU,A.SKLAD_ID)) -- подразделение (АЗС)
	  AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID)) -- Филиал
      AND A.PARUS_RN IS NULL -- Без данных из Паруса
    GROUP BY
      C.FILIAL_ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      A.PROD_ID_NPR;
	
    COMMIT;
  END IF; -- TIP_CALC	
  
  -- 1) Факт реализации (с АЗС и Нефтебаз)
  IF TIP_CALC=0 OR TIP_CALC=2 OR TIP_CALC=3 OR TIP_CALC=5 THEN
    INSERT INTO PLAN_FACT_REALIZ
    (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	 ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
	 PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
    SELECT
    'СУТОЧНАЯ РЕАЛИЗАЦИЯ' AS TIP_ROW,
	dDATE_BEG,
	dDATE_END,
	dDATE_PLAN,
    C.FILIAL_ID, -- Филиал
    KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
    KLS_ORG_KIND.ID, -- Вид подразделения
    KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
    C.ID AS ORG_STRU_ORDER, -- Подразделение
    C.ID AS ORG_STRU_ID, -- Подразделение
    C.NAME AS ORG_STRU_NAME, -- Подразделение
    AZC_OPERATION.PROD_ID_NPR, -- Продукт
    SUM(AZC_OPERATION.VES) AS ALL_VES, -- Отгружено за период
    ROUND(SUM(AZC_OPERATION.VES)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
    SUM(AZC_OPERATION.SUMMA) AS ALL_SUMMA, -- Отгружено за период
    ROUND(SUM(AZC_OPERATION.SUMMA)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
    FROM AZC_OPERATION,AZC_TYPE_OPERATION,KLS_PROD,
    V_ORG_STRUCTURE C,KLS_ORG_KIND
    WHERE AZC_OPERATION.TYPE_OPER_ID=AZC_TYPE_OPERATION.ID
    AND AZC_TYPE_OPERATION.ID=1
    AND AZC_OPERATION.DATE_OPER>=dDATE_BEG
    AND AZC_OPERATION.DATE_OPER<=dDATE_END
	AND AZC_OPERATION.ORG_STRU_ID not in (44,9049)  -- Без Автоналива  и Архэнерго
    AND AZC_OPERATION.ORG_STRU_ID=C.ID
    AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
    AND C.ORG_KIND_ID IN (1,5,11,12,13)
	AND AZC_OPERATION.PROD_ID_NPR=KLS_PROD.ID_NPR
	AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
	AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
    AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	AND (AZC_OPERATION.ORG_STRU_ID=NVL(nORG_STRU,AZC_OPERATION.ORG_STRU_ID)) -- подразделение (АЗС)
	AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID)) -- Филиал
	AND AZC_OPERATION.DISCOUNT<>815
    GROUP BY
      C.FILIAL_ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      AZC_OPERATION.PROD_ID_NPR;

    COMMIT;
  END IF; -- TIP_CALC	

  IF (TIP_CALC=0 OR TIP_CALC=2 OR TIP_CALC=3 OR TIP_CALC=5) AND
     (nFILIAL IS NULL OR nFILIAL=31) AND 
     (nORG_KIND_GRP IS NULL OR nORG_KIND_GRP=1) AND
	 (nORG_STRU IS NULL OR nORG_STRU=44) THEN

	 -- 2) Добавить Автоналив
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	   ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	   PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
    SELECT
      'СУТОЧНАЯ РЕАЛИЗАЦИЯ' AS TIP_ROW,
  	  dDATE_BEG,
	  dDATE_END,
	  dDATE_PLAN,
      31 AS FILIAL_ID, -- Филиал
      KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
      KLS_ORG_KIND.ID, -- Вид подразделения
      KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
      C.ID AS ORG_STRU_ORDER, -- Подразделение
      C.ID AS ORG_STRU_ID, -- Подразделение
      C.NAME AS ORG_STRU_NAME, -- Подразделение
      B.PROD_ID_NPR as PROD_ID_NPR, -- Продукт
      SUM(A.NQUANTALT) AS ALL_VES, -- Отгружено за период
      ROUND(SUM(A.NQUANTALT)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
      SUM(A.NSUMMWITHNDS) AS ALL_SUMMA, -- Отгружено за период
      ROUND(SUM(A.NSUMMWITHNDS)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
    FROM V_PARUS_TRANSINVCUST A,PARUS_NOMEN_PROD_LINK B,ORG_STRUCTURE C,KLS_ORG_KIND,KLS_PROD 
    WHERE A.sSTORE_CATALOG_NAME='Автоналив'
      AND A.NNOMEN=B.NOMEN_RN
      AND A.dDOCDATE>=dDATE_BEG
      AND A.dDOCDATE<=dDATE_END
	  AND B.PROD_ID_NPR=KLS_PROD.ID_NPR
--	  AND B.IS_ACTUAL=1
	  AND C.ID=44 
      AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
  	  AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
 	  AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
      AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
    GROUP BY
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      B.PROD_ID_NPR;
    COMMIT;
  END IF;	

  IF (TIP_CALC=0 OR TIP_CALC=2 OR TIP_CALC=3) AND
     (nFILIAL IS NULL OR nFILIAL=31) AND 
     (nORG_KIND_GRP IS NULL OR nORG_KIND_GRP=1) AND
	 (nORG_STRU IS NULL OR nORG_STRU=2023) THEN
	
/*	 -- 3) Добавить Маслобазу (Дежневский нефтесклад) - НАЛИВНЫЕ МАСЛА
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	   ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	   PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
    SELECT
      'СУТОЧНАЯ РЕАЛИЗАЦИЯ' AS TIP_ROW,
  	  dDATE_BEG,
	  dDATE_END,
	  dDATE_PLAN,
      31 AS FILIAL_ID, -- Филиал
      KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
      KLS_ORG_KIND.ID, -- Вид подразделения
      KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
      C.ID AS ORG_STRU_ORDER, -- Подразделение
      C.ID AS ORG_STRU_ID, -- Подразделение
      C.NAME AS ORG_STRU_NAME, -- Подразделение
      KLS_PROD.ID_NPR as PROD_ID_NPR, -- Продукт
      SUM(A.NQUANTALT) AS ALL_VES, -- Отгружено за период
      ROUND(SUM(A.NQUANTALT)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
      SUM(A.NSUMMWITHNDS) AS ALL_SUMMA, -- Отгружено за период
      ROUND(SUM(A.NSUMMWITHNDS)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
    FROM V_PARUS_TRANSINVCUST A,ORG_STRUCTURE C,KLS_ORG_KIND,KLS_PROD 
    WHERE A.sSTORE_CATALOG_NAME='Маслобаза'
	  AND A.sCATALOG_NAME='Маслобаза_налив'
      AND A.dDOCDATE>=dDATE_BEG
      AND A.dDOCDATE<=dDATE_END
	  AND KLS_PROD.ID_NPR='11900'
	  AND C.ID=2023 
      AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
  	  AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
 	  AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
      AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
    GROUP BY
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      KLS_PROD.ID_NPR;
    COMMIT;

	 -- 3) Добавить Маслобазу (Дежневский нефтесклад) - ФАСОВАННЫЕ МАСЛА
    INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	   ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	   PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
    SELECT
      'СУТОЧНАЯ РЕАЛИЗАЦИЯ' AS TIP_ROW,
  	  dDATE_BEG,
	  dDATE_END,
	  dDATE_PLAN,
      31 AS FILIAL_ID, -- Филиал
      KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
      KLS_ORG_KIND.ID, -- Вид подразделения
      KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
      C.ID AS ORG_STRU_ORDER, -- Подразделение
      C.ID AS ORG_STRU_ID, -- Подразделение
      C.NAME AS ORG_STRU_NAME, -- Подразделение
      KLS_PROD.ID_NPR as PROD_ID_NPR, -- Продукт
      SUM(A.NQUANTALT) AS ALL_VES, -- Отгружено за период
      ROUND(SUM(A.NQUANTALT)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
      SUM(A.NSUMMWITHNDS) AS ALL_SUMMA, -- Отгружено за период
      ROUND(SUM(A.NSUMMWITHNDS)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
    FROM V_PARUS_TRANSINVCUST A,ORG_STRUCTURE C,KLS_ORG_KIND,KLS_PROD 
    WHERE A.sSTORE_CATALOG_NAME='Маслобаза'
	  AND A.sCATALOG_NAME='Маслобаза_фас'
      AND A.dDOCDATE>=dDATE_BEG
      AND A.dDOCDATE<=dDATE_END
	  AND KLS_PROD.ID_NPR='80018'
	  AND C.ID=2023 
      AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
  	  AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
 	  AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
	  AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
    GROUP BY
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      KLS_PROD.ID_NPR;*/
    COMMIT;
  	   
  END IF;	 
  
  IF ADD_TRANZIT=1 OR nORG_STRU=28 THEN
    -- 4) Транзит
	IF (TIP_CALC=0 OR TIP_CALC=2 OR TIP_CALC=3) THEN

      -- Коми	  
      INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	     ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	     PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
      SELECT
        'СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)' AS TIP_ROW,
	    dDATE_BEG,
  	    dDATE_END,
        dDATE_PLAN,
        31 AS FILIAL_ID, -- Филиал
        0 AS ORG_KIND_ORDER, -- Вид подразделения
        KLS_ORG_KIND.ID, -- Вид подразделения
        KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
        0 AS ORG_STRU_ORDER, -- Подразделение
        C.ID AS ORG_STRU_ID, -- Подразделение
        C.NAME AS ORG_STRU_NAME, -- Подразделение
        KVIT.PROD_ID_NPR, -- Продукт
        SUM(KVIT.VES_BRUTTO*1000) AS ALL_VES, -- Отгружено за период
        ROUND(SUM(KVIT.VES_BRUTTO*1000)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
	    SUM(KVIT.VES_BRUTTO*NVL(snp.PRICE,0)) as ALL_SUMMA,
        ROUND(SUM(KVIT.VES_BRUTTO*NVL(snp.PRICE,0))/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
      FROM KVIT,MONTH,V_KLS_PLANSTRU D,KLS_PROD,
        V_ORG_STRUCTURE C,KLS_ORG_KIND,ZAKAZ unp,ZAKAZ snp, KLS_DOG, KLS_DOG ORIG_DOG
      WHERE KVIT.NOM_ZD=MONTH.NOM_ZD AND MONTH.ZAKAZ_ID=unp.ID AND unp.LINK_ID=snp.ID
	    AND snp.DOG_ID=KLS_DOG.ID AND MONTH.DOG_ID=ORIG_DOG.ID AND ORIG_DOG.PREDPR_ID=2641 AND KLS_DOG.PREDPR_ID<>2641 -- Транзит
		AND NVL(D.REGION_ID,0)<>21 -- Без Архангельска  
		AND snp.POLUCH_ID<>3067 -- Без Котласа  
        AND KVIT.PROD_ID_NPR=KLS_PROD.ID_NPR
        AND snp.PLANSTRU_ID=D.ID
        AND D.ID<>97-- План по ЛУКОЙЛ-СНП без отгрузки на хранение
        AND C.ID=28
	    AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
        AND MONTH.DATE_PLAN>=dDATE_PLAN
        AND KVIT.DATE_OTGR BETWEEN dDATE_BEG AND dDATE_END
	    AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	    AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
  	    AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
        AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	    AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
        AND (31=NVL(nFILIAL,31)) -- Только Ухта
      GROUP BY
        KLS_ORG_KIND.ID,
        KLS_ORG_KIND.NAME,
        C.ID,
        C.NAME,
        KVIT.PROD_ID_NPR;

      -- Архангельск	  
      INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	     ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	     PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
      SELECT
        'СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)' AS TIP_ROW,
	    dDATE_BEG,
  	    dDATE_END,
        dDATE_PLAN,
        40 AS FILIAL_ID, -- Филиал
        0 AS ORG_KIND_ORDER, -- Вид подразделения
        KLS_ORG_KIND.ID, -- Вид подразделения
        KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
        0 AS ORG_STRU_ORDER, -- Подразделение
        C.ID AS ORG_STRU_ID, -- Подразделение
        C.NAME AS ORG_STRU_NAME, -- Подразделение
        KVIT.PROD_ID_NPR, -- Продукт
        SUM(KVIT.VES_BRUTTO*1000) AS ALL_VES, -- Отгружено за период
        ROUND(SUM(KVIT.VES_BRUTTO*1000)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
	    SUM(KVIT.VES_BRUTTO*NVL(snp.PRICE,0)) as ALL_SUMMA,
        ROUND(SUM(KVIT.VES_BRUTTO*NVL(snp.PRICE,0))/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
      FROM KVIT,MONTH,V_KLS_PLANSTRU D,KLS_PROD,
        V_ORG_STRUCTURE C,KLS_ORG_KIND,ZAKAZ unp,ZAKAZ snp, KLS_DOG, KLS_DOG ORIG_DOG
      WHERE KVIT.NOM_ZD=MONTH.NOM_ZD AND MONTH.ZAKAZ_ID=unp.ID AND unp.LINK_ID=snp.ID
	    AND snp.DOG_ID=KLS_DOG.ID AND MONTH.DOG_ID=ORIG_DOG.ID AND ORIG_DOG.PREDPR_ID=2641 AND KLS_DOG.PREDPR_ID<>2641 -- Транзит
		AND NVL(D.REGION_ID,0)=21 -- Архангельск  
		AND snp.POLUCH_ID<>3067 -- Без Котласа  
        AND KVIT.PROD_ID_NPR=KLS_PROD.ID_NPR
        AND snp.PLANSTRU_ID=D.ID
        AND D.ID<>97-- План по ЛУКОЙЛ-СНП без отгрузки на хранение
        AND C.ID=28
	    AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
        AND MONTH.DATE_PLAN>=dDATE_PLAN
        AND KVIT.DATE_OTGR BETWEEN dDATE_BEG AND dDATE_END
	    AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	    AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
  	    AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
        AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	    AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
        AND (40=NVL(nFILIAL,40)) -- Только Архангельск
      GROUP BY
        KLS_ORG_KIND.ID,
        KLS_ORG_KIND.NAME,
        C.ID,
        C.NAME,
        KVIT.PROD_ID_NPR;

      -- Котлас	  
      INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	     ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	     PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
      SELECT
        'СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)' AS TIP_ROW,
	    dDATE_BEG,
  	    dDATE_END,
        dDATE_PLAN,
        75 AS FILIAL_ID, -- Филиал
        0 AS ORG_KIND_ORDER, -- Вид подразделения
        KLS_ORG_KIND.ID, -- Вид подразделения
        KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
        0 AS ORG_STRU_ORDER, -- Подразделение
        C.ID AS ORG_STRU_ID, -- Подразделение
        C.NAME AS ORG_STRU_NAME, -- Подразделение
        KVIT.PROD_ID_NPR, -- Продукт
        SUM(KVIT.VES_BRUTTO*1000) AS ALL_VES, -- Отгружено за период
        ROUND(SUM(KVIT.VES_BRUTTO*1000)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
	    SUM(KVIT.VES_BRUTTO*NVL(snp.PRICE,0)) as ALL_SUMMA,
        ROUND(SUM(KVIT.VES_BRUTTO*NVL(snp.PRICE,0))/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
      FROM KVIT,MONTH,V_KLS_PLANSTRU D,KLS_PROD,
        V_ORG_STRUCTURE C,KLS_ORG_KIND,ZAKAZ unp,ZAKAZ snp, KLS_DOG, KLS_DOG ORIG_DOG
      WHERE KVIT.NOM_ZD=MONTH.NOM_ZD AND MONTH.ZAKAZ_ID=unp.ID AND unp.LINK_ID=snp.ID
	    AND snp.DOG_ID=KLS_DOG.ID AND MONTH.DOG_ID=ORIG_DOG.ID AND ORIG_DOG.PREDPR_ID=2641 AND KLS_DOG.PREDPR_ID<>2641 -- Транзит
		AND snp.POLUCH_ID=3067 -- Котлас  
        AND KVIT.PROD_ID_NPR=KLS_PROD.ID_NPR
        AND snp.PLANSTRU_ID=D.ID
        AND D.ID<>97-- План по ЛУКОЙЛ-СНП без отгрузки на хранение
        AND C.ID=28
	    AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
        AND MONTH.DATE_PLAN>=dDATE_PLAN
        AND KVIT.DATE_OTGR BETWEEN dDATE_BEG AND dDATE_END
	    AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	    AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
  	    AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
        AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	    AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
        AND (75=NVL(nFILIAL,75)) -- Только Котлас
      GROUP BY
        KLS_ORG_KIND.ID,
        KLS_ORG_KIND.NAME,
        C.ID,
        C.NAME,
        KVIT.PROD_ID_NPR;
		
/*      INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	     ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	     PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
      SELECT
        'СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)' AS TIP_ROW,
	    dDATE_BEG,
  	    dDATE_END,
        dDATE_PLAN,
        31 AS FILIAL_ID, -- Филиал
        0 AS ORG_KIND_ORDER, -- Вид подразделения
        KLS_ORG_KIND.ID, -- Вид подразделения
        KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
        0 AS ORG_STRU_ORDER, -- Подразделение
        C.ID AS ORG_STRU_ID, -- Подразделение
        C.NAME AS ORG_STRU_NAME, -- Подразделение
        B.PROD as PROD_ID_NPR, -- Продукт
        SUM(A.NQUANTALT) AS ALL_VES, -- Отгружено за период
        ROUND(SUM(A.NQUANTALT)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
        SUM(A.NSUMMWITHNDS) AS ALL_SUMMA, -- Отгружено за период
        ROUND(SUM(A.NSUMMWITHNDS)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
      FROM V_PARUS_TRANSINVCUST A,KLS_PROD_NOMENKLATOR B,ORG_STRUCTURE C,KLS_ORG_KIND,KLS_PROD 
    WHERE A.sDOCTYPE='СВЕД' -- Транзит с УНП
	  AND TRIM(A.sAGENT_NAME)<>'ОАО "Архангельская генерирующая компания"' -- Без Архангельска
      AND A.NNOMMODIF=B.PARUS_RN
      AND A.dDOCDATE>=dDATE_BEG
      AND A.dDOCDATE<=dDATE_END
	  AND B.PROD=KLS_PROD.ID_NPR
	  AND B.IS_ACTUAL=1
	  AND C.ID=28 
      AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
  	  AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
 	  AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
      AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
      AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
      AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
      AND (31=NVL(nFILIAL,31)) -- Только Ухта
    GROUP BY
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      B.PROD;*/

		-- Архангельский транзит 
/*  INSERT INTO PLAN_FACT_REALIZ
        (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	     ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	     PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
      SELECT
        'СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)' AS TIP_ROW,
	    dDATE_BEG,
  	    dDATE_END,
        dDATE_PLAN,
        40 AS FILIAL_ID, -- Филиал
        0 AS ORG_KIND_ORDER, -- Вид подразделения
        KLS_ORG_KIND.ID, -- Вид подразделения
        KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
        0 AS ORG_STRU_ORDER, -- Подразделение
        C.ID AS ORG_STRU_ID, -- Подразделение
        C.NAME AS ORG_STRU_NAME, -- Подразделение
        B.PROD as PROD_ID_NPR, -- Продукт
        SUM(A.NQUANTALT) AS ALL_VES, -- Отгружено за период
        ROUND(SUM(A.NQUANTALT)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
        SUM(A.NSUMMWITHNDS) AS ALL_SUMMA, -- Отгружено за период
        ROUND(SUM(A.NSUMMWITHNDS)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
      FROM V_PARUS_TRANSINVCUST A,KLS_PROD_NOMENKLATOR B,ORG_STRUCTURE C,KLS_ORG_KIND,KLS_PROD 
    WHERE A.sDOCTYPE='СВЕД' -- Транзит с УНП
	  AND TRIM(A.sAGENT_NAME)='ОАО "Архангельская генерирующая компания"' -- Только Архангельск
      AND A.NNOMMODIF=B.PARUS_RN
      AND A.dDOCDATE>=dDATE_BEG
      AND A.dDOCDATE<=dDATE_END
	  AND B.PROD=KLS_PROD.ID_NPR
	  AND B.IS_ACTUAL=1
	  AND C.ID=28 
      AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
  	  AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
 	  AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
      AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
      AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
      AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
      AND (40=NVL(nFILIAL,40)) -- Только Ухта
    GROUP BY
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      B.PROD;
	*/  

  /*    INSERT INTO PLAN_FACT_REALIZ
    (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	 ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
	 PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
    SELECT
    'СУТОЧНАЯ РЕАЛИЗАЦИЯ' AS TIP_ROW,
	dDATE_BEG,
	dDATE_END,
	dDATE_PLAN,
    40 as FILIAL_ID, -- Филиал
    0 AS ORG_KIND_ORDER, -- Вид подразделения
    KLS_ORG_KIND.ID, -- Вид подразделения
    KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
    0 AS ORG_STRU_ORDER, -- Подразделение
    C.ID AS ORG_STRU_ID, -- Подразделение
    C.NAME AS ORG_STRU_NAME, -- Подразделение
    AZC_OPERATION.PROD_ID_NPR, -- Продукт
    SUM(AZC_OPERATION.VES) AS ALL_VES, -- Отгружено за период
    ROUND(SUM(AZC_OPERATION.VES)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
    SUM(AZC_OPERATION.SUMMA) AS ALL_SUMMA, -- Отгружено за период
    ROUND(SUM(AZC_OPERATION.SUMMA)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
    FROM AZC_OPERATION,AZC_TYPE_OPERATION,KLS_PROD,
    V_ORG_STRUCTURE C,KLS_ORG_KIND
    WHERE AZC_OPERATION.TYPE_OPER_ID=AZC_TYPE_OPERATION.ID
    AND AZC_TYPE_OPERATION.ID=1
    AND AZC_OPERATION.DATE_OPER>=dDATE_BEG
    AND AZC_OPERATION.DATE_OPER<=dDATE_END
	AND AZC_OPERATION.ORG_STRU_ID=9049  -- Архэнерго
    AND C.ID=28
    AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
	AND AZC_OPERATION.PROD_ID_NPR=KLS_PROD.ID_NPR
	AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
	AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
    AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
	AND (40=NVL(nFILIAL,40)) -- Только Архангельск 
	AND AZC_OPERATION.DISCOUNT<>815
    GROUP BY
      KLS_ORG_KIND.ID,
      KLS_ORG_KIND.NAME,
      C.ID,
      C.NAME,
      AZC_OPERATION.PROD_ID_NPR;*/

	END IF; -- TIP_CALC  

	
    -- 4) План поставок по транзиту
	IF (TIP_CALC=0 OR TIP_CALC=1) THEN  


      INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	    ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
	    PROD_ID_NPR, PLAN_REAL_VES,NORMA_REAL_VES)
/*       SELECT
         'СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)' AS TIP_ROW,
	     dDATE_BEG,
         dDATE_END,
         dDATE_PLAN,
         DECODE(D.REGION_ID,21,40,31) AS FILIAL_ID, -- Филиал
         0 AS ORG_KIND_ORDER, -- Вид подразделения
         KLS_ORG_KIND.ID, -- Вид подразделения
         KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
         0 AS ORG_STRU_ORDER, -- Подразделение
         C.ID AS ORG_STRU_ID, -- Подразделение
         C.NAME AS ORG_STRU_NAME, -- Подразделение
         A.PROD_ID_NPR, -- Продукт
         SUM(A.PLAN_VES*1000) AS PLAN_REAL_VES, -- План в кг
         SUM(A.PLAN_VES*1000*Koef) AS NORMA_REAL_VES -- Норма
       FROM PLAN_POST A, PLAN_PERIODS B, KLS_PROD,
            V_ORG_STRUCTURE C,v_kls_planstru D,KLS_ORG_KIND  
       WHERE A.PLAN_PER_ID=B.ID
	     AND B.PLAN_ID IN (12,13)
	     AND B.DATE_PLAN BETWEEN dDATE_PLAN AND dDATE_END
     	 AND C.ID=28
	     AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
		 AND A.PLANSTRU_ID=D.ID
         AND D.SPF_NAME='ТРАНЗИТ'
		 AND D.ID<>97 -- План по ЛУКОЙЛ-СНП без отгрузки на хранение
         AND A.PROD_ID_NPR=KLS_PROD.ID_NPR
	     AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	     AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
	     AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
         AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
  	     AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
         AND (DECODE(D.REGION_ID,21,40,31)=nFILIAL OR nFILIAL IS NULL) -- Филиал
       GROUP BY
         DECODE(D.REGION_ID,21,40,31),
         KLS_ORG_KIND.ID,
         KLS_ORG_KIND.NAME,
         C.ID,
         C.NAME,
         A.PROD_ID_NPR;*/
       SELECT
         'СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)' AS TIP_ROW,
	     dDATE_BEG,
  	     dDATE_END,
	     dDATE_PLAN,
         CC.FILIAL_ID, -- Филиал
         0 AS ORG_KIND_ORDER, -- Вид подразделения
         KLS_ORG_KIND.ID, -- Вид подразделения
         KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
         0 AS ORG_STRU_ORDER, -- Подразделение
         C.ID AS ORG_STRU_ID, -- Подразделение
         C.NAME AS ORG_STRU_NAME, -- Подразделение
         A.PROD_ID_NPR, -- Продукт
         SUM(NVL((CASE
	       WHEN KLS_PROD.FASOVKA=1 AND FAS_IN_RUB=1 THEN A.SUMMA
		   ELSE A.VES*1000
		 END),0)) AS PLAN_REAL_VES, -- План в кг (фасовка - в руб)
         SUM(NVL((CASE
	       WHEN KLS_PROD.FASOVKA=1 AND FAS_IN_RUB=1 THEN A.SUMMA
		   ELSE A.VES*1000
		 END)*Koef,0)) AS NORMA_REAL_VES -- Норма
       FROM PLAN_REALIZ A, KLS_PROD,
         V_ORG_STRUCTURE C,KLS_ORG_KIND,V_ORG_STRUCTURE CC
       WHERE A.DATE_PLAN BETWEEN dDATE_PLAN AND dDATE_END
         AND DECODE(A.SKLAD_ID,9049,28,A.SKLAD_ID)=C.ID
         AND A.SKLAD_ID=CC.ID
		 AND A.SKLAD_ID IN (28,9049)
         AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
--         AND C.ORG_KIND_ID IN (1,5,11,12,13)
   	     AND A.PROD_ID_NPR=KLS_PROD.ID_NPR
	     AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	     AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
	     AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
         AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	     AND (C.ID=NVL(nORG_STRU,C.ID)) -- подразделение (АЗС)
	     AND (CC.FILIAL_ID=NVL(nFILIAL,CC.FILIAL_ID)) -- Филиал
         AND A.PARUS_RN IS NULL -- Без данных из Паруса
       GROUP BY
         CC.FILIAL_ID,
         KLS_ORG_KIND.ID,
         KLS_ORG_KIND.ID,
         KLS_ORG_KIND.NAME,
         C.ID,
         C.NAME,
         A.PROD_ID_NPR;
		 
	END IF; -- TIP_CALC
    COMMIT;
  END IF;

  IF (TIP_CALC=0 OR TIP_CALC=3 OR TIP_CALC=4) THEN

    SELECT COUNT(*) INTO cnt1 FROM OSTAT_KONS WHERE DATE_OST=dDATE_END+1;
    IF cnt1>0 THEN
      -- 7) Остатки на конец периода (АЗС и Нефтебазы) по данным консолидированной отчетности
      INSERT INTO PLAN_FACT_REALIZ
      (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	   ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
  	   PROD_ID_NPR, END_OST)
      SELECT
      'СУТОЧНАЯ РЕАЛИЗАЦИЯ',
	  dDATE_BEG,
	  dDATE_END,
	  dDATE_PLAN,
      C.FILIAL_ID, -- Филиал
      KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
      KLS_ORG_KIND.ID, -- Вид подразделения
      KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
      C.ID AS ORG_STRU_ORDER, -- Подразделение
      C.ID AS ORG_STRU_ID, -- Подразделение
      C.NAME AS ORG_STRU_NAME, -- Подразделение
      KLS_PROD.ID_NPR AS PROD_ID_NPR, -- Продукт
      SUM(KG) AS END_OST -- Остаток в кг
      FROM OSTAT_KONS, KLS_PROD_KONS,V_ORG_STRUCTURE C,KLS_ORG_KIND,KLS_PROD
      WHERE DECODE(OSTAT_KONS.ORG_STRU_ID,2018,43,OSTAT_KONS.ORG_STRU_ID)=C.ID
      AND OSTAT_KONS.PROD_KONS_ID=KLS_PROD_KONS.ID
      AND KLS_PROD_KONS.PROD_ID_NPR=KLS_PROD.ID_NPR
      AND OSTAT_KONS.DATE_OST=dDATE_END+1
      AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
      AND C.ORG_KIND_ID IN (1,5,11,12,13)
  	  AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	  AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
	  AND (KLS_PROD.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,KLS_PROD.FASOVKA))
      AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	  AND (C.ORG_KIND_ID=NVL(nORG_STRU,C.ORG_KIND_ID)) -- подразделение (АЗС)
  	  AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID)) -- Филиал
      GROUP BY
      C.FILIAL_ID, -- Филиал
      KLS_ORG_KIND.ID, -- Вид подразделения
      KLS_ORG_KIND.NAME, -- Вид подразделения
      C.ID, -- Подразделение
      C.NAME, -- Подразделение
      KLS_PROD.ID_NPR; -- Продукт

  	  COMMIT;  

    ELSE

      -- 8) Остатки на конец периода (АЗС и Нефтебазы) по оперативным данным филиалов (AZC_OPERATION)
      FOR lcur IN (SELECT DISTINCT /* Выборка всех комбинаций Склад/продукт за последние 2-3 месяца - для ускорения */
                 C.FILIAL_ID, -- Филиал 
				 A.PROD_ID_NPR,
                 KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
                 KLS_ORG_KIND.ID as ORG_KIND_ID, -- Вид подразделения
                 KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
                 C.ID AS ORG_STRU_ORDER, -- Подразделение
                 C.ID AS ORG_STRU_ID, -- Подразделение
                 C.NAME AS ORG_STRU_NAME -- Подраздел				 
               FROM AZC_OPERATION A, KLS_PROD B, v_org_structure C, KLS_ORG_KIND
			   WHERE A.DATE_OPER>=ADD_MONTHS(TRUNC(dDATE_BEG,'MONTH'),-2)
                 AND A.DATE_OPER<=dDATE_END
                 AND A.ORG_STRU_ID=C.ID
                 AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
                 AND C.ORG_KIND_ID IN (1,5,11,12,13)
                 AND A.PROD_ID_NPR=B.ID_NPR
                 AND (B.ID_GROUP_NPR=NVL(cPROD_GR,B.ID_GROUP_NPR))
                 AND (B.ID_NPR=NVL(cPROD,B.ID_NPR))
 	             AND (B.FASOVKA=DECODE(ONLY_FAS,1,1,2,0,3,1,B.FASOVKA))
                 AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
                 AND (A.ORG_STRU_ID=NVL(nORG_STRU,A.ORG_STRU_ID)) -- подразделение (АЗС)
                 AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID)) -- Филиал
				) LOOP 
                      
        INSERT INTO PLAN_FACT_REALIZ
          (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
  	       ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
     	   PROD_ID_NPR, END_OST)
        VALUES (
          'СУТОЧНАЯ РЕАЛИЗАЦИЯ',
	      dDATE_BEG,
	      dDATE_END,
    	  dDATE_PLAN,
          lcur.FILIAL_ID, -- Филиал
          lcur.ORG_KIND_ORDER, -- Вид подразделения
          lcur.ORG_KIND_ID, -- Вид подразделения
          lcur.ORG_KIND_NAME, -- Вид подразделения
          lcur.ORG_STRU_ORDER, -- Подразделение
          lcur.ORG_STRU_ID, -- Подразделение
          lcur.ORG_STRU_NAME, -- Подразделение
          lcur.PROD_ID_NPR, -- Продукт
          GET_OST_END_MAS(lcur.ORG_STRU_ID,lcur.PROD_ID_NPR,dDATE_END) -- Остаток в тоннах на конец dDATE_END
         );
    	COMMIT; 
      END LOOP;
    END IF; -- cnt1>0
  END IF; -- TIP_CALC	  

  COMMIT;
  
  
  -- Фильтр по филиалу
/*  IF nFILIAL IS NOT NULL THEN
    DELETE
      FROM PLAN_FACT_REALIZ
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
	   AND (FILIAL_ID<>nFILIAL OR FILIAL_ID=0);
	COMMIT;
  END IF;*/

  -- Удаление ненужного
  -- Архангельск
  IF ONLY_MAIN=1 THEN
    DELETE
      FROM PLAN_FACT_REALIZ
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
       AND FILIAL_ID=40;
    COMMIT;
  END IF;	

  IF ONLY_FAS=0 THEN
    -- Удаление ТТХ
    DELETE
      FROM PLAN_FACT_REALIZ
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
       AND PROD_ID_NPR='80020';
    COMMIT;
  END IF;	

  IF ONLY_FAS<>4 THEN
    -- Удаление сопутствующих
    DELETE
      FROM PLAN_FACT_REALIZ
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
       AND PROD_ID_NPR in ('80019','10000');
    COMMIT;
  END IF;	
  
  IF ONLY_FAS=3 THEN
    -- Переводим все в фасованные масла
	INSERT INTO PLAN_FACT_REALIZ (TIP_ROW, DATE_BEGIN, DATE_END, DATE_PLAN, FILIAL_ORDER, FILIAL_ID, FILIAL_NAME, 
	  REGION_ORDER, REGION_NAME, NAPR_ORDER, NAPR_NAME, PROD_ID_NPR, PROD_ORDER, PROD_NAME, GROUP_ORDER, GROUP_NAME, 
  	  BEGIN_OST, PLAN_POST_VES, NORMA_POST_VES, FACT_POST_VES, RESURS, PLAN_REAL_VES, NORMA_REAL_VES, FACT_REAL_VES, 
	  END_OST, ORG_KIND_ORDER, ORG_KIND_ID, ORG_KIND_NAME, ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME, AVG_SUT_REAL_VES, 
	  GROUP_FULL_NAME, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
	SELECT TIP_ROW, DATE_BEGIN, DATE_END, DATE_PLAN, FILIAL_ORDER, FILIAL_ID, FILIAL_NAME, 
	  REGION_ORDER, REGION_NAME, NAPR_ORDER, NAPR_NAME, '80018.', PROD_ORDER, PROD_NAME, GROUP_ORDER, GROUP_NAME, 
  	  BEGIN_OST, PLAN_POST_VES, NORMA_POST_VES, FACT_POST_VES, RESURS, PLAN_REAL_VES, NORMA_REAL_VES, FACT_REAL_VES, 
	  END_OST, ORG_KIND_ORDER, ORG_KIND_ID, ORG_KIND_NAME, ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME, AVG_SUT_REAL_VES, 
	  GROUP_FULL_NAME, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA
	FROM PLAN_FACT_REALIZ
    WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
      AND TERMINAL_NAME = vTERMINAL
      AND OSUSER_NAME = vOSUSER
	  AND PROD_ID_NPR<>'80018.';
	
	DELETE FROM PLAN_FACT_REALIZ   
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
	   AND PROD_ID_NPR<>'80018.';
	   
	UPDATE PLAN_FACT_REALIZ SET PROD_ID_NPR='80018'   
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
	   AND PROD_ID_NPR='80018.';
  END IF;  

  IF ONLY_FAS=2 THEN
    -- Группируем дизельку
	INSERT INTO PLAN_FACT_REALIZ (TIP_ROW, DATE_BEGIN, DATE_END, DATE_PLAN, FILIAL_ORDER, FILIAL_ID, FILIAL_NAME, 
	  REGION_ORDER, REGION_NAME, NAPR_ORDER, NAPR_NAME, PROD_ID_NPR, PROD_ORDER, PROD_NAME, GROUP_ORDER, GROUP_NAME, 
  	  BEGIN_OST, PLAN_POST_VES, NORMA_POST_VES, FACT_POST_VES, RESURS, PLAN_REAL_VES, NORMA_REAL_VES, FACT_REAL_VES, 
	  END_OST, ORG_KIND_ORDER, ORG_KIND_ID, ORG_KIND_NAME, ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME, AVG_SUT_REAL_VES, 
	  GROUP_FULL_NAME, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
	SELECT TIP_ROW, DATE_BEGIN, DATE_END, DATE_PLAN, FILIAL_ORDER, FILIAL_ID, FILIAL_NAME, 
	  REGION_ORDER, REGION_NAME, NAPR_ORDER, NAPR_NAME, '10400.', PROD_ORDER, PROD_NAME, GROUP_ORDER, GROUP_NAME, 
  	  BEGIN_OST, PLAN_POST_VES, NORMA_POST_VES, FACT_POST_VES, RESURS, PLAN_REAL_VES, NORMA_REAL_VES, FACT_REAL_VES, 
	  END_OST, ORG_KIND_ORDER, ORG_KIND_ID, ORG_KIND_NAME, ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME, AVG_SUT_REAL_VES, 
	  GROUP_FULL_NAME, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA
	FROM PLAN_FACT_REALIZ
    WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
      AND TERMINAL_NAME = vTERMINAL
      AND OSUSER_NAME = vOSUSER
	  AND PROD_ID_NPR<>'10400.'
	  AND (SUBSTR(PROD_ID_NPR,1,3)='104' OR PROD_ID_NPR='80015');
	
	DELETE FROM PLAN_FACT_REALIZ   
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
	   AND PROD_ID_NPR<>'10400.'
	  AND (SUBSTR(PROD_ID_NPR,1,3)='104' OR PROD_ID_NPR='80015');
	   
	UPDATE PLAN_FACT_REALIZ SET PROD_ID_NPR='10400'   
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
	   AND PROD_ID_NPR='10400.';
  END IF;  

  -- Группы продуктов
  UPDATE PLAN_FACT_REALIZ A SET (GROUP_ORDER, GROUP_NAME, GROUP_FULL_NAME)=
    (SELECT B.GROUP_ORDER, B.GROUP_ABBR,B.GROUP_NAME FROM KLS_PROD_GROUPS B, KLS_PROD_GROUPS_DESC C
	  WHERE C.PROD_GROUPS_ID=B.ID AND C.PROD_TYPE_GRP_ID=pPROD_TYPE AND C.PROD_ID_NPR=A.PROD_ID_NPR)
  WHERE EXISTS
    (SELECT NULL FROM KLS_PROD_GROUPS B, KLS_PROD_GROUPS_DESC C
	  WHERE C.PROD_GROUPS_ID=B.ID AND C.PROD_TYPE_GRP_ID=pPROD_TYPE AND C.PROD_ID_NPR=A.PROD_ID_NPR)
     AND (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
     AND TERMINAL_NAME = vTERMINAL
     AND OSUSER_NAME = vOSUSER;

  -- Филиалы
  UPDATE PLAN_FACT_REALIZ A SET (FILIAL_NAME,FILIAL_ORDER)=
    (SELECT B.FULL_NAME,B.PLAN_REAL FROM ORG_STRUCTURE B WHERE B.ID=A.FILIAL_ID)
  WHERE EXISTS
    (SELECT NULL FROM ORG_STRUCTURE B WHERE B.ID=A.FILIAL_ID)
     AND (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
     AND TERMINAL_NAME = vTERMINAL
     AND OSUSER_NAME = vOSUSER;

  COMMIT;

  -- Округление
  IF ONLY_FAS=0 OR ONLY_FAS=2 OR ONLY_FAS=4 THEN
    UPDATE PLAN_FACT_REALIZ SET
	  FACT_REAL_VES=ROUND(FACT_REAL_VES),
	  AVG_SUT_REAL_VES=ROUND(AVG_SUT_REAL_VES),
	  FACT_REAL_SUMMA=ROUND(FACT_REAL_SUMMA),
	  AVG_SUT_REAL_SUMMA=ROUND(AVG_SUT_REAL_SUMMA),
	  END_OST=ROUND(END_OST)
    WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
      AND TERMINAL_NAME = vTERMINAL
      AND OSUSER_NAME = vOSUSER;
  ELSE
    UPDATE PLAN_FACT_REALIZ SET
	  FACT_REAL_VES=ROUND(FACT_REAL_VES,3),
	  AVG_SUT_REAL_VES=ROUND(AVG_SUT_REAL_VES,3),
	  FACT_REAL_SUMMA=ROUND(FACT_REAL_SUMMA,3),
	  AVG_SUT_REAL_SUMMA=ROUND(AVG_SUT_REAL_SUMMA,3),
	  END_OST=ROUND(END_OST,3)
    WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
      AND TERMINAL_NAME = vTERMINAL
      AND OSUSER_NAME = vOSUSER;
  END IF;	  

  COMMIT;
END;

-- Подготовка данных для отчета "Суточная реализация с АЗС и Нефтебаз"
PROCEDURE FIL_SUT_REAL_TRANSIT (DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2,
          ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2) AS
BEGIN
  FIL_SUT_REAL(DATE_BEG, DATE_END, FILIAL_ID,
          ORG_KIND_GRP, ORG_STRU_ID, PROD_GR_ID, PROD_ID,1,0,0,0,0);
END;

-- Подготовка данных для отчета "Реализация фасовки с АЗС и Нефтебаз"
PROCEDURE FIL_SUT_REAL_FAS(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2, 
  ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2) IS
BEGIN
  FIL_SUT_REAL(DATE_BEG,DATE_END,FILIAL_ID,ORG_KIND_GRP,ORG_STRU_ID,PROD_GR_ID,PROD_ID,0,1,0,0,0);
END;    

-- Подготовка данных для отчета "План-факт реализации наливных с ЛУКОЙЛ-СНП"
PROCEDURE FIL_SUT_REAL_PF(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2, 
  ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2) IS
BEGIN
  FIL_SUT_REAL(DATE_BEG,DATE_END,FILIAL_ID,ORG_KIND_GRP,ORG_STRU_ID,PROD_GR_ID,PROD_ID,0,2,0,0,1);
END;    

-- Подготовка данных для отчета "План-факт реализации фасованных с ЛУКОЙЛ-СНП"
PROCEDURE FIL_SUT_REAL_FAS_PF(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2, 
  ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2) IS
BEGIN
  FIL_SUT_REAL(DATE_BEG,DATE_END,FILIAL_ID,ORG_KIND_GRP,ORG_STRU_ID,PROD_GR_ID,PROD_ID,0,3,0,0,1);
END;    

-- Подготовка данных для отчета "План реализации сводный"
PROCEDURE FIL_SVOD_REAL(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2, 
  ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2) IS
  vOSUSER VARCHAR2(50);
  vTERMINAL VARCHAR2(50);
BEGIN
  FIL_SUT_REAL(DATE_BEG,DATE_END,FILIAL_ID,ORG_KIND_GRP,ORG_STRU_ID,PROD_GR_ID,PROD_ID,0,4,5,0,1,13);

  vTERMINAL := For_Init.GetCurrTerm;
  vOSUSER := For_Init.GetCurrUser;
    
  UPDATE PLAN_FACT_REALIZ SET AVG_SUT_REAL_VES=FACT_REAL_VES, AVG_SUT_REAL_SUMMA=FACT_REAL_SUMMA
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
	   AND PROD_ID_NPR in ('80019','10000');

  UPDATE PLAN_FACT_REALIZ SET AVG_SUT_REAL_VES=0, AVG_SUT_REAL_SUMMA=0
     WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
       AND TERMINAL_NAME = vTERMINAL
       AND OSUSER_NAME = vOSUSER
	   AND PROD_ID_NPR IN ('80017','80018','80020','80026');

   commit;	   
END;    

-- Подготовка данных для отчета "Реализация на собственные нужды"
PROCEDURE FIL_SOBS_REAL(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2, 
  ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2) AS

  nFILIAL NUMBER;
  cFILIAL_NAME VARCHAR2(200);
  nORG_STRU NUMBER;
  nORG_KIND_GRP NUMBER;
  cPROD_GR VARCHAR2(5);
  cPROD VARCHAR2(5);
  nAZC_PROD_GR NUMBER;
  nAZC_PROD NUMBER;
  dDATE_BEG DATE;
  dDATE_END DATE;
  dDATE_PLAN DATE;
  cnt1 NUMBER;
  Koef FLOAT;
  dMON_END DATE;
  vOSUSER VARCHAR2(50);
  vTERMINAL VARCHAR2(50);
BEGIN

  vTERMINAL := For_Init.GetCurrTerm;
  vOSUSER := For_Init.GetCurrUser;

  dDATE_END:=TO_DATE(date_end,'dd.mm.yyyy');
  dDATE_BEG:=TO_DATE(date_beg,'dd.mm.yyyy');
  dDATE_PLAN:=TRUNC(dDATE_BEG,'MONTH');
  dMON_END:=LAST_DAY(dDATE_END);
  Koef:=(dDATE_END-dDATE_PLAN+1)/(dMON_END-dDATE_PLAN+1);

  IF FILIAL_ID<>'*' AND FILIAL_ID IS NOT NULL THEN
    nFILIAL:=TO_NUMBER(FILIAL_ID);
  ELSE
    nFILIAL:=NULL;
  END IF;

  IF ORG_KIND_GRP<>'*' AND ORG_KIND_GRP IS NOT NULL THEN
    nORG_KIND_GRP:=TO_NUMBER(ORG_KIND_GRP);
  ELSE
    nORG_KIND_GRP:=NULL;
  END IF;

  IF ORG_STRU_ID<>'*' AND ORG_STRU_ID IS NOT NULL THEN
    nORG_STRU:=TO_NUMBER(ORG_STRU_ID);
  ELSE
    nORG_STRU:=NULL;
  END IF;

  IF PROD_GR_id<>'*' AND PROD_GR_id IS NOT NULL THEN
    cPROD_GR:=PROD_GR_id;
  ELSE
    cPROD_GR:=NULL;
  END IF;

  IF PROD_id<>'*' AND PROD_id IS NOT NULL THEN
    cPROD:=PROD_id;
  ELSE
    cPROD:=NULL;
  END IF;

  -- Очистка таблицы PLAN_FACT
  DELETE
    FROM PLAN_FACT_REALIZ
   WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
     AND TERMINAL_NAME = vTERMINAL
     AND OSUSER_NAME = vOSUSER;
  COMMIT;

  -- 1) Факт реализации (с АЗС и Нефтебаз)
  INSERT INTO PLAN_FACT_REALIZ
    (TIP_ROW,DATE_BEGIN,DATE_END,DATE_PLAN,FILIAL_ID,ORG_KIND_ORDER,ORG_KIND_ID,ORG_KIND_NAME,
	 ORG_STRU_ORDER, ORG_STRU_ID, ORG_STRU_NAME,
	 PROD_ID_NPR, FACT_REAL_VES, AVG_SUT_REAL_VES, FACT_REAL_SUMMA, AVG_SUT_REAL_SUMMA)
  SELECT
    'СУТОЧНАЯ РЕАЛИЗАЦИЯ' AS TIP_ROW,
	dDATE_BEG,
	dDATE_END,
	dDATE_PLAN,
    C.FILIAL_ID, -- Филиал
    KLS_ORG_KIND.ID AS ORG_KIND_ORDER, -- Вид подразделения
    KLS_ORG_KIND.ID, -- Вид подразделения
    KLS_ORG_KIND.NAME AS ORG_KIND_NAME, -- Вид подразделения
    C.ID AS ORG_STRU_ORDER, -- Подразделение
    C.ID AS ORG_STRU_ID, -- Подразделение
    C.NAME AS ORG_STRU_NAME, -- Подразделение
    AZC_OPERATION.PROD_ID_NPR, -- Продукт
    SUM(AZC_OPERATION.VES) AS ALL_VES, -- Отгружено за период
    ROUND(SUM(AZC_OPERATION.VES)/(dDATE_END-dDATE_BEG+1),0) AS AVG_VES, -- Среднесуточная отгрузка
    SUM(AZC_OPERATION.SUMMA) AS ALL_SUMMA, -- Отгружено за период
    ROUND(SUM(AZC_OPERATION.SUMMA)/(dDATE_END-dDATE_BEG+1),0) AS AVG_SUMMA -- Среднесуточная отгрузка
  FROM AZC_OPERATION,AZC_TYPE_OPERATION,KLS_PROD,
    V_ORG_STRUCTURE C,KLS_ORG_KIND
  WHERE AZC_OPERATION.TYPE_OPER_ID=AZC_TYPE_OPERATION.ID
    AND AZC_TYPE_OPERATION.ID=1
    AND AZC_OPERATION.DATE_OPER>=dDATE_BEG
    AND AZC_OPERATION.DATE_OPER<=dDATE_END
	--AND AZC_OPERATION.ORG_STRU_ID <>2023  -- Без Дежневского нефтесклада
    AND AZC_OPERATION.ORG_STRU_ID=C.ID
    AND C.ORG_KIND_ID=KLS_ORG_KIND.ID
    AND C.ORG_KIND_ID IN (1,5,11,12,13)
	AND AZC_OPERATION.PROD_ID_NPR=KLS_PROD.ID_NPR
	AND (KLS_PROD.ID_GROUP_NPR=NVL(cPROD_GR,KLS_PROD.ID_GROUP_NPR))
	AND (KLS_PROD.ID_NPR=NVL(cPROD,KLS_PROD.ID_NPR))
    AND (KLS_ORG_KIND.GROUP_KIND_ID=NVL(nORG_KIND_GRP,KLS_ORG_KIND.GROUP_KIND_ID)) -- тип объекта
	AND (AZC_OPERATION.ORG_STRU_ID=NVL(nORG_STRU,AZC_OPERATION.ORG_STRU_ID)) -- подразделение (АЗС)
	AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID)) -- Филиал
	AND AZC_OPERATION.DISCOUNT=815
  GROUP BY
    C.FILIAL_ID,
    KLS_ORG_KIND.ID,
    KLS_ORG_KIND.ID,
    KLS_ORG_KIND.NAME,
    C.ID,
    C.NAME,
    AZC_OPERATION.PROD_ID_NPR;

  COMMIT;

  -- Группы продуктов
  UPDATE PLAN_FACT_REALIZ A SET (GROUP_ORDER, GROUP_NAME, GROUP_FULL_NAME)=
    (SELECT B.GROUP_ORDER, B.GROUP_ABBR,B.GROUP_NAME FROM KLS_PROD_GROUPS B, KLS_PROD_GROUPS_DESC C
	  WHERE C.PROD_GROUPS_ID=B.ID AND C.PROD_TYPE_GRP_ID=5 AND C.PROD_ID_NPR=A.PROD_ID_NPR)
  WHERE EXISTS
    (SELECT NULL FROM KLS_PROD_GROUPS B, KLS_PROD_GROUPS_DESC C
	  WHERE C.PROD_GROUPS_ID=B.ID AND C.PROD_TYPE_GRP_ID=5 AND C.PROD_ID_NPR=A.PROD_ID_NPR)
     AND (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
     AND TERMINAL_NAME = vTERMINAL
     AND OSUSER_NAME = vOSUSER;

  -- Филиалы
  UPDATE PLAN_FACT_REALIZ A SET (FILIAL_NAME,FILIAL_ORDER)=
    (SELECT B.FULL_NAME,B.PLAN_REAL FROM ORG_STRUCTURE B WHERE B.ID=A.FILIAL_ID)
  WHERE EXISTS
    (SELECT NULL FROM ORG_STRUCTURE B WHERE B.ID=A.FILIAL_ID)
     AND (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
     AND TERMINAL_NAME = vTERMINAL
     AND OSUSER_NAME = vOSUSER;

  COMMIT;

  -- Округление
  UPDATE PLAN_FACT_REALIZ SET
	  FACT_REAL_VES=ROUND(FACT_REAL_VES),
	  AVG_SUT_REAL_VES=ROUND(AVG_SUT_REAL_VES),
	  FACT_REAL_SUMMA=ROUND(FACT_REAL_SUMMA),
	  AVG_SUT_REAL_SUMMA=ROUND(AVG_SUT_REAL_SUMMA),
	  END_OST=ROUND(END_OST)
    WHERE (TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ' OR TIP_ROW='СУТОЧНАЯ РЕАЛИЗАЦИЯ (ТРАНЗИТ)')
      AND TERMINAL_NAME = vTERMINAL
      AND OSUSER_NAME = vOSUSER;

  COMMIT;
END;


-- Подготовка данных для отчета "Продажа и запасы н/пр (статистика)"
PROCEDURE FIL_STAT_REAL(DATE_BEG VARCHAR2, DATE_END VARCHAR2, FILIAL_ID VARCHAR2,
          ORG_KIND_GRP VARCHAR2, ORG_STRU_ID VARCHAR2, PROD_GR_ID VARCHAR2, PROD_ID VARCHAR2) AS
  nFILIAL NUMBER;
  cFILIAL_NAME VARCHAR2(200);
  nORG_STRU NUMBER;
  nORG_KIND_GRP NUMBER;
  cPROD_GR VARCHAR2(5);
  cPROD VARCHAR2(5);
  dDATE_BEG DATE;
  dDATE_END DATE;
  dDATE_PLAN DATE;
  cnt1 NUMBER;
  Koef FLOAT;
  dMON_END DATE;
BEGIN

  -- Из Паруса
  dDATE_END:=TO_DATE(date_end,'dd.mm.yyyy');
  dDATE_BEG:=TO_DATE(date_beg,'dd.mm.yyyy');
  dDATE_PLAN:=TRUNC(dDATE_BEG,'MONTH');
  dMON_END:=LAST_DAY(dDATE_END);
  Koef:=(dDATE_END-dDATE_PLAN+1)/(dMON_END-dDATE_PLAN+1);

  IF FILIAL_ID<>'*' AND FILIAL_ID IS NOT NULL THEN
    nFILIAL:=TO_NUMBER(FILIAL_ID);
  ELSE
    nFILIAL:=NULL;
  END IF;

  IF ORG_KIND_GRP<>'*' AND ORG_KIND_GRP IS NOT NULL THEN
    nORG_KIND_GRP:=TO_NUMBER(ORG_KIND_GRP);
  ELSE
    nORG_KIND_GRP:=NULL;
  END IF;

  IF ORG_STRU_ID<>'*' AND ORG_STRU_ID IS NOT NULL THEN
    nORG_STRU:=TO_NUMBER(ORG_STRU_ID);
  ELSE
    nORG_STRU:=NULL;
  END IF;

  IF PROD_GR_id<>'*' AND PROD_GR_id IS NOT NULL THEN
    cPROD_GR:=PROD_GR_id;
  ELSE
    cPROD_GR:=NULL;
  END IF;

  IF PROD_id<>'*' AND PROD_id IS NOT NULL THEN
    cPROD:=PROD_id;
  ELSE
    cPROD:=NULL;
  END IF;

  -- Очистка таблицы AZC_FROM_PARUS
/*  DELETE FROM V_AZC_FROM_PARUS;
  COMMIT;

  INSERT INTO AZC_FROM_PARUS
    (NNOMEN, SNOMEN, NSTORE, SSTORE, REALIZ_ALL, REALIZ_AVG,IS_AZC, OSTATOK)
   SELECT NNOMEN,NOMEN,NSTORE,STORE,REAL_ALL,REAL_SR,AZS,QUANT
     FROM parus.v_snp_stat_osv@oracle.world;

  COMMIT;*/

  -- Из AZC_OPERATION
  FIL_SUT_REAL(DATE_BEG, DATE_END, FILIAL_ID,
          ORG_KIND_GRP, ORG_STRU_ID, PROD_GR_ID, PROD_ID, 1);

END;

-- Остаток на утро в кг
FUNCTION GET_OST_BEGIN_MAS(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
BEGIN
  RETURN GET_OST(pORG_STRU_ID,pPROD_ID_NPR,pDATE,0,0);
END;  

-- Остаток на утро в лит
FUNCTION GET_OST_BEGIN_VOL(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
BEGIN
  RETURN GET_OST(pORG_STRU_ID,pPROD_ID_NPR,pDATE,0,1);
END;  

-- Остаток на утро в руб.
FUNCTION GET_OST_BEGIN_SUM(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
BEGIN
  RETURN GET_OST(pORG_STRU_ID,pPROD_ID_NPR,pDATE,0,2);
END;  

-- Остаток на вечер в кг
FUNCTION GET_OST_END_MAS(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
BEGIN
  RETURN GET_OST(pORG_STRU_ID,pPROD_ID_NPR,pDATE,1,0);
END;  

-- Остаток на вечер в лит
FUNCTION GET_OST_END_VOL(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
BEGIN
  RETURN GET_OST(pORG_STRU_ID,pPROD_ID_NPR,pDATE,1,1);
END;  

-- Остаток на вечер в руб.
FUNCTION GET_OST_END_SUM(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE DATE DEFAULT SYSDATE) RETURN NUMBER IS
BEGIN
  RETURN GET_OST(pORG_STRU_ID,pPROD_ID_NPR,pDATE,1,2);
END;  

-- Универсальная функция расчета остатка  
FUNCTION GET_OST(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE DATE DEFAULT SYSDATE, pUTRO NUMBER DEFAULT 0, pTIP_OST NUMBER DEFAULT 0) RETURN NUMBER IS
  v_lastost DATE;
  v_lastoper DATE;
  v_ost_mas NUMBER;
  v_ost_vol NUMBER;
  v_ost_sum NUMBER;
  v_p_r_mas NUMBER;
  v_p_r_vol NUMBER;
  v_p_r_sum NUMBER;
  v_cnt NUMBER;
  dBEGIN_DATE DATE;
  dPREV_DATE DATE;
  dDATE_OPER DATE;
BEGIN

  -- pUTRO=0 - Остаток на утро
  -- pUTRO=1 - Остаток на вечер
  IF pUTRO=1 THEN
    dDATE_OPER:=TRUNC(pDATE)+1;
  ELSE
    dDATE_OPER:=TRUNC(pDATE);
  END IF;
  dBEGIN_DATE:=TRUNC(dDATE_OPER,'MONTH');		
  dPREV_DATE:=TRUNC(dDATE_OPER-10,'MONTH');		
  
  -- pTIP_OST=0 - КГ
  -- pTIP_OST=1 - Литры
  -- pTIP_OST=2 - Руб.

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;
  
  -- Попытаемся просто найти остаток по данному продукту на утро этого дня
  SELECT SUM(VES),SUM(VOLUME),SUM(SUMMA),COUNT(*) INTO v_ost_mas,v_ost_vol,v_ost_sum,v_cnt
    FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
   WHERE A.ORG_STRU_ID=pORG_STRU_ID
     AND A.PROD_ID_NPR=pPROD_ID_NPR
     AND A.TYPE_OPER_ID=B.ID
 	 AND B.KIND_OPER=0
	 AND A.DATE_OPER=dDATE_OPER;

  IF v_cnt>0 THEN
    IF pTIP_OST=0 THEN 
      RETURN NVL(v_ost_mas,0);
	ELSE
	  IF pTIP_OST=1 THEN  
        RETURN NVL(v_ost_vol,0);
	  ELSE	
        RETURN NVL(v_ost_sum,0);
	  END IF;
	END IF;  	
  END IF;
  	 
  -- Остаток на это день не найден - попытаемся его рассчитать	 

  -- Находим хотя бы одну операцию в этом месяце (по любому продукту)
 /* 	
  FOR lcur IN ( 
    SELECT DATE_OPER 
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER>=dBEGIN_DATE
	   AND A.DATE_OPER<dDATE_OPER
	   AND (B.KIND_OPER=1 OR B.KIND_OPER=2)) LOOP
	EXIT;
  END LOOP;*/	   
  
  v_lastoper:=dPREV_DATE;
  BEGIN
    SELECT /*+ RULE */ DISTINCT NULL INTO v_lastoper
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER>=dBEGIN_DATE
	   AND A.DATE_OPER<dDATE_OPER
	   AND (B.KIND_OPER=1 OR B.KIND_OPER=2);
    v_lastoper:=dBEGIN_DATE;	
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastoper:=dPREV_DATE;
  END;
  
  --  v_lastoper:=TRUNC(v_lastoper,'MONTH');
/*  IF v_lastoper<dBEGIN_DATE THEN
    v_lastoper:=dBEGIN_DATE;
  ELSE	
    v_lastoper:=TRUNC(v_lastoper,'MONTH');	
  END IF;*/

  -- Находим дату ввода последнего остатка по данному продукту
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
     WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER>=v_lastoper
	   AND A.DATE_OPER<=dDATE_OPER
	   AND B.KIND_OPER=0;
  EXCEPTION
    WHEN OTHERS THEN
      v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NOT NULL THEN
    SELECT SUM(VES),SUM(VOLUME),SUM(SUMMA) INTO v_ost_mas,v_ost_vol,v_ost_sum
      FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
  	WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  ELSE	 
    v_ost_mas:=0;
	v_ost_vol:=0;
	v_ost_sum:=0;
    v_lastost:=v_lastoper;
  END IF;

  -- Приход - Расход
  v_p_r_mas:=0;
  v_p_r_vol:=0;
  v_p_r_sum:=0;
  IF v_lastost<dDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VES,2,-A.VES,0)),
	       SUM(DECODE(B.KIND_OPER,1,A.VOLUME,2,-A.VOLUME,0)),
		   SUM(DECODE(B.KIND_OPER,1,A.SUMMA,2,-A.SUMMA,0)) 
	  INTO v_p_r_mas,v_p_r_vol,v_p_r_sum 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
  	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2) 
	     AND A.DATE_OPER>=v_lastost
	     AND A.DATE_OPER<dDATE_OPER;
  END IF;		 

  IF pTIP_OST=0 THEN 
    RETURN NVL(v_ost_mas,0)+NVL(v_p_r_mas,0);
  ELSE
	IF pTIP_OST=1 THEN  
      RETURN NVL(v_ost_vol,0)+NVL(v_p_r_vol,0);
	ELSE	
      RETURN NVL(v_ost_sum,0)+NVL(v_p_r_sum,0);
	END IF;
  END IF;  	
END;

-- Универсальная функция расчета остатка c учетом собственника   
FUNCTION GET_OST_SOBS(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pSOBSTV_ID NUMBER, pDATE DATE DEFAULT SYSDATE, pUTRO NUMBER DEFAULT 0, pTIP_OST NUMBER DEFAULT 0) RETURN NUMBER IS
  v_lastost DATE;
  v_lastoper DATE;
  v_ost_mas NUMBER;
  v_ost_vol NUMBER;
  v_ost_sum NUMBER;
  v_p_r_mas NUMBER;
  v_p_r_vol NUMBER;
  v_p_r_sum NUMBER;
  v_cnt NUMBER;
  dDATE_OPER DATE;
  dBEGIN_DATE DATE;
  dPREV_DATE DATE; 
BEGIN

  -- pUTRO=0 - Остаток на утро
  -- pUTRO=1 - Остаток на вечер
  IF pUTRO=1 THEN
    dDATE_OPER:=TRUNC(pDATE)+1;
  ELSE
    dDATE_OPER:=TRUNC(pDATE);
  END IF;		
  dBEGIN_DATE:=TRUNC(dDATE_OPER,'MONTH');		
  dPREV_DATE:=TRUNC(dDATE_OPER-10,'MONTH');		
  
  -- pTIP_OST=0 - КГ
  -- pTIP_OST=1 - Литры
  -- pTIP_OST=2 - Руб.

  IF NVL(pSOBSTV_ID,0)=0 THEN
    RETURN 0;
  END IF;	

  IF NVL(pORG_STRU_ID,0)=0 THEN
    RETURN 0;
  END IF;	

  IF NVL(pPROD_ID_NPR,'')||' '=' ' THEN
    RETURN 0;
  END IF;
  
  -- Попытаемся просто найти остаток по данному продукту на утро этого дня
  SELECT SUM(VES),SUM(VOLUME),SUM(SUMMA),COUNT(*) INTO v_ost_mas,v_ost_vol,v_ost_sum,v_cnt
    FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
   WHERE A.ORG_STRU_ID=pORG_STRU_ID
     AND A.PROD_ID_NPR=pPROD_ID_NPR
     AND A.SOBSTV_ID=pSOBSTV_ID
     AND A.TYPE_OPER_ID=B.ID
 	 AND B.KIND_OPER=0
	 AND A.DATE_OPER=dDATE_OPER;

  IF v_cnt>0 THEN
    IF pTIP_OST=0 THEN 
      RETURN NVL(v_ost_mas,0);
	ELSE
	  IF pTIP_OST=1 THEN  
        RETURN NVL(v_ost_vol,0);
	  ELSE	
        RETURN NVL(v_ost_sum,0);
	  END IF;
	END IF;  	
  END IF;
  	 
  -- Остаток на это день не найден - попытаемся его рассчитать	 

  -- Находим дату последней операции (по любому продукту)
  v_lastoper:=dPREV_DATE;
  BEGIN
    SELECT /*+ RULE */ DISTINCT NULL INTO v_lastoper
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER>=dBEGIN_DATE
	   AND A.DATE_OPER<dDATE_OPER
	   AND (B.KIND_OPER=1 OR B.KIND_OPER=2);
    v_lastoper:=dBEGIN_DATE;	
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastoper:=dPREV_DATE;
  END;
  
  -- Находим дату ввода последнего остатка по данному продукту
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastost
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
     WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
       AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER>=v_lastoper
	   AND A.DATE_OPER<=dDATE_OPER
	   AND B.KIND_OPER=0;
  EXCEPTION
    WHEN OTHERS THEN
      v_lastost:=NULL;
  END;

  -- Начальный остаток  
  IF v_lastost IS NOT NULL THEN
    SELECT SUM(VES),SUM(VOLUME),SUM(SUMMA) INTO v_ost_mas,v_ost_vol,v_ost_sum
      FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
  	WHERE A.ORG_STRU_ID=pORG_STRU_ID
	   AND A.PROD_ID_NPR=pPROD_ID_NPR
       AND A.SOBSTV_ID=pSOBSTV_ID
	   AND A.TYPE_OPER_ID=B.ID
	   AND B.KIND_OPER=0
	   AND A.DATE_OPER=v_lastost;
  ELSE	 
    v_ost_mas:=0;
	v_ost_vol:=0;
	v_ost_sum:=0;
    v_lastost:=v_lastoper;
  END IF;

  -- Приход - Расход
  v_p_r_mas:=0;
  v_p_r_vol:=0;
  v_p_r_sum:=0;
  IF v_lastost<dDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VES,2,-A.VES,0)),
	       SUM(DECODE(B.KIND_OPER,1,A.VOLUME,2,-A.VOLUME,0)),
		   SUM(DECODE(B.KIND_OPER,1,A.SUMMA,2,-A.SUMMA,0)) 
	  INTO v_p_r_mas,v_p_r_vol,v_p_r_sum 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
         AND A.SOBSTV_ID=pSOBSTV_ID
	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2) 
	     AND A.DATE_OPER>=v_lastost
	     AND A.DATE_OPER<dDATE_OPER;
  END IF;		 

  IF pTIP_OST=0 THEN 
    RETURN NVL(v_ost_mas,0)+NVL(v_p_r_mas,0);
  ELSE
	IF pTIP_OST=1 THEN  
      RETURN NVL(v_ost_vol,0)+NVL(v_p_r_vol,0);
	ELSE	
      RETURN NVL(v_ost_sum,0)+NVL(v_p_r_sum,0);
	END IF;
  END IF;  	
END;

-- Перенос данных из ПАРУСА в AZC_OPERATION
PROCEDURE PARUS_TO_AZC_OPER (pDATE_BEG VARCHAR2, pDATE_END VARCHAR2, pFilial NUMBER DEFAULT NULL, pOrgStru NUMBER DEFAULT NULL, ADD_SOPUT NUMBER DEFAULT 0, IS_SOPUT NUMBER DEFAULT 0) IS
  DateBeg DATE;
  DateEnd DATE;
  Filial_ID NUMBER;
  OrgStru_ID NUMBER;
  DateNow DATE;
  DisTop VARCHAR2(5);
BEGIN
  DateBeg:=TO_DATE(pDATE_BEG,'dd.mm.yyyy');
  DateEnd:=TO_DATE(pDATE_END,'dd.mm.yyyy');
  Filial_ID:=NVL(pFilial,0);
  OrgStru_ID:=NVL(pOrgStru,0);
  DateNow:=SYSDATE;
  
  
  DisTop:='10400';

  IF Filial_ID=37 AND DateBeg<TO_DATE('01.04.2004','dd.mm.yyyy') then
    -- Усть-Цильма - только с 1-го апреля 2004
    DateBeg:=TO_DATE('01.04.2004','dd.mm.yyyy');
  END IF;	
/*  IF Filial_ID=37  then
	DisTop:='10405';
  END IF;*/
  
  IF Filial_ID=32 AND DateBeg<TO_DATE('01.04.2004','dd.mm.yyyy') then
    -- Воркута - только с 1-го апреля 2004
    DateBeg:=TO_DATE('01.04.2004','dd.mm.yyyy');
  END IF;	
/*  IF Filial_ID=32 then
	DisTop:='10405';
  END IF;*/	

  IF Filial_ID=30 AND DateBeg<TO_DATE('01.01.2004','dd.mm.yyyy') then
    -- Сыктывкар - с 1-го января 2004
    DateBeg:=TO_DATE('01.01.2004','dd.mm.yyyy');
  END IF;	
/*  IF Filial_ID=30 then
	DisTop:='10405';
  END IF;*/	

  IF Filial_ID=38 AND DateBeg<TO_DATE('01.08.2006','dd.mm.yyyy') then
    -- Усинск - с 1-го августа 2006
    DateBeg:=TO_DATE('01.08.2006','dd.mm.yyyy');
  END IF;	
  
  -- Перенос во временную таблицу
  DELETE FROM V_AZS_REPORTS_TMP;
  COMMIT;

  IF IS_SOPUT=1 THEN
    -- Сопутствуюищие
    INSERT INTO AZS_REPORTS_TMP
      (TYPE_OPER_ID, DISCOUNT, ORG_STRU_ID, PROD_ID_NPR, OPER_DAY, PRICE, VOLUME, MASSA, SUMMA)
  	  SELECT A.TYPE_OPER_ID,A.DISCOUNT,C.ORG_STRU_ID,
	    '80019' as PROD_ID_NPR,
	    A.OPER_DAY,A.PRICE,SUM(A.VOLUME),SUM(A.MASSA),SUM(A.SUMMA)
        FROM parus.V_SNP_AZS_TO_MASTER_SOPUT_PSV@oracle.world A,
	         PARUS_STORE_ORG_STRU_LINK C, v_org_structure CC  
	    WHERE A.STORE_RN=C.STORE_RN 
	      AND C.ORG_STRU_ID=CC.ID
		  AND CC.NO_WORK=0 -- Работающие
		  AND CC.LOAD_FAS_FROM_PARUS=1 
	      AND CC.FILIAL_ID=DECODE(Filial_ID,0,CC.FILIAL_ID,Filial_ID) -- Филиал
		  AND C.ORG_STRU_ID=DECODE(OrgStru_ID,0,C.ORG_STRU_ID,OrgStru_ID) -- АЗС
		  AND A.OPER_DAY>=DateBeg
          AND A.OPER_DAY<=DateEnd -- Период
		  AND A.NOMEN_RN=6
	  GROUP BY A.TYPE_OPER_ID,A.DISCOUNT,C.ORG_STRU_ID,
	    A.OPER_DAY,A.PRICE
  	  HAVING SUM(A.SUMMA)<>0;
    -- Услуги
    INSERT INTO AZS_REPORTS_TMP
      (TYPE_OPER_ID, DISCOUNT, ORG_STRU_ID, PROD_ID_NPR, OPER_DAY, PRICE, VOLUME, MASSA, SUMMA)
  	  SELECT A.TYPE_OPER_ID,A.DISCOUNT,C.ORG_STRU_ID,
	    '10000' as PROD_ID_NPR,
	    A.OPER_DAY,A.PRICE,SUM(A.VOLUME),SUM(A.MASSA),SUM(A.SUMMA)
        FROM parus.V_SNP_AZS_TO_MASTER_SOPUT_PSV@oracle.world A,
	         PARUS_STORE_ORG_STRU_LINK C, v_org_structure CC  
	    WHERE A.STORE_RN=C.STORE_RN 
	      AND C.ORG_STRU_ID=CC.ID
		  AND CC.NO_WORK=0 -- Работающие
		  AND CC.LOAD_FAS_FROM_PARUS=1 
	      AND CC.FILIAL_ID=DECODE(Filial_ID,0,CC.FILIAL_ID,Filial_ID) -- Филиал
		  AND C.ORG_STRU_ID=DECODE(OrgStru_ID,0,C.ORG_STRU_ID,OrgStru_ID) -- АЗС
		  AND A.OPER_DAY>=DateBeg
          AND A.OPER_DAY<=DateEnd -- Период
		  AND A.NOMEN_RN=7
	  GROUP BY A.TYPE_OPER_ID,A.DISCOUNT,C.ORG_STRU_ID,
	    A.OPER_DAY,A.PRICE
  	  HAVING SUM(A.SUMMA)<>0;
  ELSE
    -- Основные
    INSERT INTO AZS_REPORTS_TMP
      (TYPE_OPER_ID, DISCOUNT, ORG_STRU_ID, PROD_ID_NPR, OPER_DAY, PRICE, VOLUME, MASSA, SUMMA)
	  SELECT TYPE_OPER_ID,DISCOUNT,ORG_STRU_ID,PROD_ID_NPR,
	    OPER_DAY,PRICE,volume,massa,summa
	  FROM
	  (	
	  SELECT A.TYPE_OPER_ID,A.DISCOUNT,C.ORG_STRU_ID,
	    DECODE(kls_prod.PROD_PLAN_ID,80018,'80018',80020,'80020',80026,'80026',DECODE(D.PROD_ID_NPR,'10400',DisTop,D.PROD_ID_NPR)) as PROD_ID_NPR,
	    A.OPER_DAY,A.PRICE,SUM(A.VOLUME) as volume,SUM(A.MASSA) as massa,SUM(A.SUMMA) as summa
        FROM parus.V_SNP_AZS_TO_MASTER_PSV@oracle.world A,
	         PARUS_NOMEN_PROD_LINK D, PARUS_STORE_ORG_STRU_LINK C, v_org_structure CC, kls_prod  
	    WHERE A.STORE_RN=C.STORE_RN 
	      AND C.ORG_STRU_ID=CC.ID
  	      AND CC.NO_WORK=0 -- Работающие
		  AND ((CC.LOAD_NALIV_FROM_PARUS=1 AND D.PROD_ID_NPR<'11900') OR 
		     (CC.LOAD_FAS_FROM_PARUS=1 AND D.PROD_ID_NPR>='11900'))
	      AND CC.FILIAL_ID=DECODE(Filial_ID,0,CC.FILIAL_ID,Filial_ID) -- Филиал
		  AND C.ORG_STRU_ID=DECODE(OrgStru_ID,0,C.ORG_STRU_ID,OrgStru_ID) -- АЗС
	      AND A.NOMEN_RN=D.NOMEN_RN
		  AND A.OPER_DAY>=DateBeg
          AND A.OPER_DAY<=DateEnd -- Период
		  AND d.prod_id_npr=kls_prod.id_npr
	  GROUP BY A.TYPE_OPER_ID,A.DISCOUNT,C.ORG_STRU_ID,
	    DECODE(kls_prod.PROD_PLAN_ID,80018,'80018',80020,'80020',80026,'80026',DECODE(D.PROD_ID_NPR,'10400',DisTop,D.PROD_ID_NPR)),
	    A.OPER_DAY,A.PRICE
	  )	
  	  WHERE MASSA<>0 OR (SUMMA<>0 AND PROD_ID_NPR in ('80018','80020','80026','80036'));
  END IF;	  
  COMMIT;

  -- Перебираем склады из закачаных сменных отчетов  
  FOR lcur IN (SELECT * FROM V_AZS_REPORTS_LAST) 
  LOOP
    DateEnd:=TO_DATE(pDATE_END,'dd.mm.yyyy');
	IF lcur.LAST_DAY<DateEnd THEN
	  DateEnd:=lcur.LAST_DAY;
	END IF;
  
    -- Обновляем информацию по движению
    UPDATE /*+ RULE */ AZC_OPERATION A SET
    (DENCITY, VOLUME, VES, NOTE, SUMMA) =
	(SELECT  (CASE
	     WHEN B.VOLUME<=0 OR B.MASSA<=0 THEN 0
	     WHEN B.MASSA/B.VOLUME>2 THEN 0
		 ELSE B.MASSA/B.VOLUME
	   END), B.VOLUME, 
	   (CASE
	      WHEN B.TYPE_OPER_ID=3 AND B.MASSA<0 THEN 0 
		  ELSE B.MASSA
		END), 'ЗАГРУЗКА ИЗ ПАРУСА',B.SUMMA
      FROM V_AZS_REPORTS_TMP B  
	  WHERE B.OPER_DAY=A.DATE_OPER -- Дата
		AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции
		AND B.DISCOUNT=A.DISCOUNT -- Скидка
		AND B.PRICE=A.PRICE  -- Цена 
		AND B.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		AND B.ORG_STRU_ID=A.ORG_STRU_ID) -- Подразделение
    WHERE A.DATE_OPER>=DateBeg
      AND A.DATE_OPER<=DateEnd -- Период
  	  AND A.TYPE_OPER_ID IN (1,3,4,19)  -- Приход, реализация, остаток, расход
      AND A.ORG_STRU_ID=lcur.ORG_STRU_ID -- Склад
	  AND EXISTS
	  (SELECT NULL
        FROM V_AZS_REPORTS_TMP B  
	    WHERE B.OPER_DAY=A.DATE_OPER -- Дата
	  	  AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции
 		  AND B.DISCOUNT=A.DISCOUNT -- Скидка
		  AND B.PRICE=A.PRICE  -- Цена 
		  AND B.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		  AND B.ORG_STRU_ID=A.ORG_STRU_ID); -- Подразделение

    -- Добавляем информацию по движению
    INSERT INTO AZC_OPERATION
      (DATE_OPER, DENCITY, VOLUME, VES, NOTE, TYPE_OPER_ID, PROD_ID_NPR,
	   SOBSTV_ID, ORG_STRU_ID, SUMMA, PRICE, PLACE_SEND_ID, DATE_INTO, DISCOUNT)
      SELECT /*+ RULE */ A.OPER_DAY,
	   (CASE
	     WHEN A.VOLUME<=0 OR A.MASSA<=0 THEN 0
	     WHEN A.MASSA/A.VOLUME>2 THEN 0
		 ELSE A.MASSA/A.VOLUME
	   END),A.VOLUME,
	   	   (CASE
	      WHEN A.TYPE_OPER_ID=3 AND A.MASSA<0 THEN 0 
		  ELSE A.MASSA
		END),'ЗАГРУЗКА ИЗ ПАРУСА',A.TYPE_OPER_ID,A.PROD_ID_NPR,
	   1,A.ORG_STRU_ID,A.SUMMA,A.PRICE,1,DateNow,A.DISCOUNT
        FROM V_AZS_REPORTS_TMP A  
	    WHERE A.OPER_DAY>=DateBeg
          AND A.OPER_DAY<=DateEnd -- Период
    	  AND A.TYPE_OPER_ID IN (1,3,4,19)  -- Приход, реализация, остаток, расход
		  AND A.ORG_STRU_ID=lcur.ORG_STRU_ID -- Склад
	      AND NOT EXISTS
         	(SELECT NULL
		     FROM AZC_OPERATION B
		    WHERE B.DATE_OPER=A.OPER_DAY -- Отчетная дата
		      AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции
              AND B.DISCOUNT=A.DISCOUNT -- Скидка
			  AND B.PRICE = A.PRICE -- Цена
		      AND B.PROD_ID_NPR = A.PROD_ID_NPR  -- продукт
		      AND B.ORG_STRU_ID = A.ORG_STRU_ID); -- Подразделение

    IF IS_SOPUT=1 THEN
      -- Сопутствуюищие
      -- Удаление информации по движению
      DELETE FROM /*+ rule */ AZC_OPERATION A
      WHERE A.DATE_OPER>=DateBeg
        AND A.DATE_OPER<=DateEnd -- Период
		AND A.PROD_ID_NPR IN ('80019','10000')
        AND A.ORG_STRU_ID=lcur.ORG_STRU_ID -- АЗС
   	    AND A.TYPE_OPER_ID IN (1,3,4,19)  -- Приход, реализация, остаток, расход
	    AND EXISTS
	      (SELECT NULL FROM V_ORG_STRUCTURE CC WHERE CC.ID=A.ORG_STRU_ID 
		    AND ((CC.LOAD_NALIV_FROM_PARUS=1 AND A.PROD_ID_NPR<'11900') OR 
		         (CC.LOAD_FAS_FROM_PARUS=1 AND A.PROD_ID_NPR>='11900'))
   	       )		  
        AND NOT EXISTS
	     (SELECT NULL
           FROM V_AZS_REPORTS_TMP B  
	      WHERE B.OPER_DAY=A.DATE_OPER -- Дата
  	        AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции
		    AND B.DISCOUNT=A.DISCOUNT -- Скидка
		    AND B.PRICE=A.PRICE  -- Цена 
		    AND B.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		    AND B.ORG_STRU_ID=A.ORG_STRU_ID); -- Подразделение
	  
    ELSE
      -- Основные	  
      -- Удаление информации по движению
      DELETE FROM /*+ rule */ AZC_OPERATION A
      WHERE A.DATE_OPER>=DateBeg
        AND A.DATE_OPER<=DateEnd -- Период
		AND A.PROD_ID_NPR not in ('80019','10000')
        AND A.ORG_STRU_ID=lcur.ORG_STRU_ID -- АЗС
   	    AND A.TYPE_OPER_ID IN (1,3,4,19)  -- Приход, реализация, остаток, расход
	    AND EXISTS
	      (SELECT NULL FROM V_ORG_STRUCTURE CC WHERE CC.ID=A.ORG_STRU_ID 
		    AND ((CC.LOAD_NALIV_FROM_PARUS=1 AND A.PROD_ID_NPR<'11900') OR 
		         (CC.LOAD_FAS_FROM_PARUS=1 AND A.PROD_ID_NPR>='11900'))
   	       )		  
        AND NOT EXISTS
	     (SELECT NULL
           FROM V_AZS_REPORTS_TMP B  
	      WHERE B.OPER_DAY=A.DATE_OPER -- Дата
  	        AND B.TYPE_OPER_ID=A.TYPE_OPER_ID -- Тип операции
		    AND B.DISCOUNT=A.DISCOUNT -- Скидка
		    AND B.PRICE=A.PRICE  -- Цена 
		    AND B.PROD_ID_NPR=A.PROD_ID_NPR  -- продукт
		    AND B.ORG_STRU_ID=A.ORG_STRU_ID); -- Подразделение
    END IF;	  
  END LOOP;

  COMMIT;
  
  IF ADD_SOPUT=0 THEN
    PARUS_TO_AZC_OPER (pDATE_BEG, pDATE_END, pFilial, pOrgStru, 1, 1);
  END IF;	
END;  


-- Подготовка данных для сообщения ПРН (в целом по НПО)
PROCEDURE SoobPRN_X6(DATE_BEG VARCHAR2, DATE_END VARCHAR2) as
BEGIN 
  PF_REALIZ(DATE_BEG, DATE_END,'*',1);
END;  

-- Подготовка данных для сообщения ПРН (Головное НПО)
PROCEDURE SoobPRN_X7(DATE_BEG VARCHAR2, DATE_END VARCHAR2) as
BEGIN 
  PF_REALIZ(DATE_BEG , DATE_END ,'31',1);
END;  

-- Подготовка данных для сообщения ПРН (Архангельск)
PROCEDURE SoobPRN_X8(DATE_BEG VARCHAR2, DATE_END VARCHAR2) as
BEGIN 
  PF_REALIZ(DATE_BEG , DATE_END , '40',1);
END;  

-- Подготовка данных для сообщения ФРН (в целом по НПО)
PROCEDURE SoobFRN_X6(DATE_BEG VARCHAR2, DATE_END VARCHAR2) as
BEGIN 
  PF_REALIZ(DATE_BEG , DATE_END , '*',5);
END;  

-- Подготовка данных для сообщения ФРН (Головное НПО)
PROCEDURE SoobFRN_X7(DATE_BEG VARCHAR2, DATE_END VARCHAR2) as
BEGIN 
  PF_REALIZ(DATE_BEG , DATE_END , '31',5);
END;  

-- Подготовка данных для сообщения ФРН (Архангельск)
PROCEDURE SoobFRN_X8(DATE_BEG VARCHAR2, DATE_END VARCHAR2) as
BEGIN 
  PF_REALIZ(DATE_BEG , DATE_END , '40',5);
END;  


END; 

/

