--
-- FOR_DISP_AZS  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_Disp_Azs AS

-- Подготовка данных для отчета "Контроль АЗС" по неавтоматизированным АЗС
PROCEDURE manual_azs(pDATE_BEG VARCHAR2, pDATE_END VARCHAR2, pPARUS_DEPARTMENT VARCHAR2) IS
  nFILIAL NUMBER;
  nFILIAL_2 NUMBER;
  cFILIAL_NAME VARCHAR2(200);
  dDATE_BEG DATE;
  dDATE_END DATE;
  dPREV_BEG DATE;
  dPREV_END DATE;
  cnt1 NUMBER;
  Koef FLOAT;
  dMON_END DATE;
BEGIN

  dDATE_END:=TO_DATE(pDate_end,'dd.mm.yyyy');
  dDATE_BEG:=TRUNC(TO_DATE(pDate_beg,'dd.mm.yyyy'),'MONTH');
  dPREV_END:=dDATE_BEG-1;
  dPREV_BEG:=TRUNC(dPREV_END,'MONTH');

  IF pPARUS_DEPARTMENT<>'*' AND pPARUS_DEPARTMENT IS NOT NULL THEN
	BEGIN
	  SELECT ID,NAME INTO nFILIAL,cFILIAL_NAME FROM ORG_STRUCTURE WHERE PARUS_DEPARTMENT=NLS_UPPER(pPARUS_DEPARTMENT);
	EXCEPTION
	  WHEN OTHERS THEN
	    nFILIAL:=NULL;
	    cFILIAL_NAME:='';
	END;
  ELSE
    nFILIAL:=NULL;
	cFILIAL_NAME:='';
  END IF;
  
  nFILIAl_2:=0;

/*  IF nFILIAL=31 THEN
    nFILIAL_2:=22;
  END IF;
  
  IF nFILIAL=30 THEN
    nFILIAL_2:=59;
  END IF;*/
  	
  -- Очистка таблицы DISP_AZS_MANUAL
  DELETE FROM V_DISP_AZS_MANUAL;
  COMMIT;

  -- Реализации за прошлый месяц по дням недели
  INSERT INTO DISP_AZS_MANUAL
    (BEG_DATE, END_DATE, ORG_STRU_ID, PROD_ID_NPR,  
	 OUT_O_1_VOL, OUT_O_1_MAS, OUT_O_2_VOL, OUT_O_2_MAS, OUT_O_3_VOL, OUT_O_3_MAS, 
	 OUT_O_4_VOL, OUT_O_4_MAS, OUT_O_5_VOL, OUT_O_5_MAS, OUT_O_6_VOL, OUT_O_6_MAS, 
	 OUT_O_7_VOL, OUT_O_7_MAS)
  SELECT
    dDATE_BEG, 
	dDATE_END, 
	A.ORG_STRU_ID, 
	A.PROD_ID_NPR, 
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),1,DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME),0)) as VOL_1,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),1,A.VES/1000,0)) as MAS_1,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),2,DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME),0)) as VOL_2,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),2,A.VES/1000,0)) as MAS_2,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),3,DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME),0)) as VOL_3,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),3,A.VES/1000,0)) as MAS_3,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),4,DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME),0)) as VOL_4,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),4,A.VES/1000,0)) as MAS_4,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),5,DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME),0)) as VOL_5,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),5,A.VES/1000,0)) as MAS_5,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),6,DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME),0)) as VOL_6,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),6,A.VES/1000,0)) as MAS_6,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),7,DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME),0)) as VOL_7,
    SUM(DECODE(TO_NUMBER(TO_CHAR(A.DATE_OPER,'D')),7,A.VES/1000,0)) as MAS_7
  FROM AZC_OPERATION A,AZC_TYPE_OPERATION B,V_ORG_STRUCTURE C,KLS_PROD D
  WHERE A.TYPE_OPER_ID=B.ID
    AND B.KIND_OPER=2
    AND A.ORG_STRU_ID=C.ID
    AND A.DATE_OPER BETWEEN dPREV_BEG AND dPREV_END
    AND C.ORG_KIND_ID IN (5,12)
	AND C.IS_AUTO_FOR_DISP_AZS=0
	AND C.NO_WORK=0
	AND A.PROD_ID_NPR<>'80020'
	AND A.PROD_ID_NPR=D.ID_NPR
	AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID) OR C.FILIAL_ID=NVL(nFILIAL_2,C.FILIAL_ID))
	AND (A.VOLUME<>0 OR A.VES<>0)
  GROUP BY
    A.ORG_STRU_ID, A.PROD_ID_NPR;

  COMMIT;

  -- Факт реализации за текущий месяц
  INSERT INTO DISP_AZS_MANUAL
    (BEG_DATE, END_DATE, ORG_STRU_ID, PROD_ID_NPR, OUT_O_VOL, OUT_O_MAS, LAST_DAY)
  SELECT
    dDATE_BEG, 
	dDATE_END, 
	A.ORG_STRU_ID, 
	A.PROD_ID_NPR, 
	SUM(DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME)),
	SUM(A.VES/1000),
	MAX(A.DATE_OPER)
  FROM AZC_OPERATION A,AZC_TYPE_OPERATION B,V_ORG_STRUCTURE C, KLS_PROD D
  WHERE A.TYPE_OPER_ID=B.ID
    AND B.KIND_OPER=2
    AND A.ORG_STRU_ID=C.ID
    AND A.DATE_OPER BETWEEN dDATE_BEG AND dDATE_END
    AND C.ORG_KIND_ID IN (5,12)
	AND C.IS_AUTO_FOR_DISP_AZS=0
	AND C.NO_WORK=0
	AND A.PROD_ID_NPR<>'80020'
	AND A.PROD_ID_NPR=D.ID_NPR
	AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID) OR C.FILIAL_ID=NVL(nFILIAL_2,C.FILIAL_ID))
	AND (A.VOLUME<>0 OR A.VES<>0)
  GROUP BY
    A.ORG_STRU_ID, A.PROD_ID_NPR;

  COMMIT;

  -- Факт поступления за текущий месяц
  INSERT INTO DISP_AZS_MANUAL
    (BEG_DATE, END_DATE, ORG_STRU_ID, PROD_ID_NPR, IN_O_VOL, IN_O_MAS, LAST_DAY)
  SELECT
    dDATE_BEG, 
	dDATE_END, 
	A.ORG_STRU_ID, 
	A.PROD_ID_NPR, 
	SUM(DECODE(NVL(A.VOLUME,0),0,A.VES/D.AVG_FACT_PL,A.VOLUME)),
	SUM(A.VES/1000),
	MAX(A.DATE_OPER)
  FROM AZC_OPERATION A,AZC_TYPE_OPERATION B,V_ORG_STRUCTURE C, KLS_PROD D
  WHERE A.TYPE_OPER_ID=B.ID
    AND B.KIND_OPER=1
    AND A.ORG_STRU_ID=C.ID
    AND A.DATE_OPER BETWEEN dDATE_BEG AND dDATE_END
    AND C.ORG_KIND_ID IN (5,12)
	AND C.IS_AUTO_FOR_DISP_AZS=0
	AND C.NO_WORK=0
	AND A.PROD_ID_NPR<>'80020'
	AND A.PROD_ID_NPR=D.ID_NPR
	AND (C.FILIAL_ID=NVL(nFILIAL,C.FILIAL_ID) OR C.FILIAL_ID=NVL(nFILIAL_2,C.FILIAL_ID))
	AND (A.VOLUME<>0 OR A.VES<>0)
  GROUP BY
    A.ORG_STRU_ID, A.PROD_ID_NPR;

  COMMIT;

  -- Остатки на конец периода 
  INSERT INTO DISP_AZS_MANUAL
    (BEG_DATE, END_DATE, ORG_STRU_ID, PROD_ID_NPR, END_VOLUME, END_MASSA)
  SELECT BEG_DATE, END_DATE, ORG_STRU_ID, PROD_ID_NPR, 
   DECODE(NVL(END_VOLUME,0),0,END_MASSA/AVG_FACT_PL,END_VOLUME), 
   END_MASSA/1000
  FROM
  (	
  SELECT
    dDATE_BEG as BEG_DATE, 
	dDATE_END as END_DATE, 
	A.ID as ORG_STRU_ID, 
	KLS_PROD.ID_NPR as PROD_ID_NPR,
	KLS_PROD.AVG_FACT_PL, 
    NVL(SUM(FOR_FILIAL.GET_OST_END_VOL(A.ID,KLS_PROD.ID_NPR,dDATE_END)),0) AS END_VOLUME, -- Остаток в л
    NVL(SUM(FOR_FILIAL.GET_OST_END_MAS(A.ID,KLS_PROD.ID_NPR,dDATE_END)),0) AS END_MASSA -- Остаток в тоннах
  FROM V_ORG_STRUCTURE A, KLS_PROD 
  WHERE KLS_PROD.AZC_PR_GRP_ID IS NOT NULL
    AND A.ORG_KIND_ID IN (5,12)
	AND A.IS_AUTO_FOR_DISP_AZS=0
	AND A.NO_WORK=0
	AND KLS_PROD.ID_NPR<>'80020'
	AND (A.FILIAL_ID=NVL(nFILIAL,A.FILIAL_ID) OR A.FILIAL_ID=NVL(nFILIAL_2,A.FILIAL_ID))
  GROUP BY
    A.ID, KLS_PROD.ID_NPR,
	KLS_PROD.AVG_FACT_PL
  ) 
  WHERE nvl(END_VOLUME,0)<>0 or NVL(END_MASSA,0)<>0;

  COMMIT;

  -- Округление
  UPDATE V_DISP_AZS_MANUAL SET
    OUT_O_VOL=ROUND(OUT_O_VOL),
	OUT_O_MAS=ROUND(OUT_O_MAS,3),
	END_VOLUME=ROUND(END_VOLUME),
	END_MASSA=ROUND(END_MASSA,3),
	OUT_O_1_VOL=ROUND(OUT_O_1_VOL),
	OUT_O_1_MAS=ROUND(OUT_O_1_MAS,3),
	OUT_O_2_VOL=ROUND(OUT_O_2_VOL),
	OUT_O_2_MAS=ROUND(OUT_O_2_MAS,3),
	OUT_O_3_VOL=ROUND(OUT_O_3_VOL),
	OUT_O_3_MAS=ROUND(OUT_O_3_MAS,3),
	OUT_O_4_VOL=ROUND(OUT_O_4_VOL),
	OUT_O_4_MAS=ROUND(OUT_O_4_MAS,3),
	OUT_O_5_VOL=ROUND(OUT_O_5_VOL),
	OUT_O_5_MAS=ROUND(OUT_O_5_MAS,3),
	OUT_O_6_VOL=ROUND(OUT_O_6_VOL),
	OUT_O_6_MAS=ROUND(OUT_O_6_MAS,3),
	OUT_O_7_VOL=ROUND(OUT_O_7_VOL),
	OUT_O_7_MAS=ROUND(OUT_O_7_MAS,3);

  COMMIT;
END;

-- Остаток на утро (т)
FUNCTION GET_OST_BEGIN_MAS1(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE_OPER DATE DEFAULT SYSDATE) RETURN NUMBER IS
  v_lastost DATE;
  v_lastoper DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату последней операции (по любому продукту)
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastoper
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
--	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER<=pDATE_OPER
	   AND (B.KIND_OPER=1 OR B.KIND_OPER=2);
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastoper:=NULL;
  END;
  
  IF v_lastoper IS NOT NULL THEN

    -- Находим дату ввода последнего остатка
    BEGIN
      SELECT MAX(A.DATE_OPER) INTO v_lastost
	    FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
       WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
	     AND A.TYPE_OPER_ID=B.ID
	     AND A.DATE_OPER<=pDATE_OPER
		 AND A.DATE_OPER>=TRUNC(v_lastoper,'MONTH')
	     AND B.KIND_OPER=0;
    EXCEPTION
       WHEN OTHERS THEN
	     v_lastost:=NULL;
    END;

    -- Начальный остаток  
    IF v_lastost IS NOT NULL THEN
      SELECT SUM(VES) INTO v_ost
	    FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
  	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
	     AND A.TYPE_OPER_ID=B.ID
	     AND B.KIND_OPER=0
	     AND A.DATE_OPER=v_lastost;
	ELSE	 
      v_ost:=0;
  	  v_lastost:=TRUNC(v_lastoper,'MONTH');
    END IF;
  ELSE
    v_ost:=0;
    v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  END IF;

  -- Приход - Расход
  v_prih_rash:=0;
  IF v_lastost<pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VES,2,-A.VES,0)) INTO v_prih_rash 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
  	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2) 
	     AND A.DATE_OPER>=v_lastost
	     AND A.DATE_OPER<pDATE_OPER;
  END IF;		 

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;

-- Остаток на утро (л)
FUNCTION GET_OST_BEGIN_VOL1(pORG_STRU_ID NUMBER, pPROD_ID_NPR VARCHAR2, pDATE_OPER DATE DEFAULT SYSDATE) RETURN NUMBER IS
  v_lastost DATE;
  v_lastoper DATE;
  v_ost NUMBER;
  v_prih_rash NUMBER;
BEGIN

  IF pORG_STRU_ID IS NULL THEN
    RETURN 0;
  END IF;	

  IF pPROD_ID_NPR IS NULL THEN
    RETURN 0;
  END IF;	

  -- Находим дату последней операции (по любому продукту)
  BEGIN
    SELECT MAX(A.DATE_OPER) INTO v_lastoper
	  FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	 WHERE A.ORG_STRU_ID=pORG_STRU_ID
--	   AND A.PROD_ID_NPR=pPROD_ID_NPR
	   AND A.TYPE_OPER_ID=B.ID
	   AND A.DATE_OPER<=pDATE_OPER
	   AND (B.KIND_OPER=1 OR B.KIND_OPER=2);
  EXCEPTION
     WHEN OTHERS THEN
	   v_lastoper:=NULL;
  END;
  
  IF v_lastoper IS NOT NULL THEN

    -- Находим дату ввода последнего остатка
    BEGIN
      SELECT MAX(A.DATE_OPER) INTO v_lastost
	    FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
       WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
	     AND A.TYPE_OPER_ID=B.ID
	     AND A.DATE_OPER<=pDATE_OPER
		 AND A.DATE_OPER>=TRUNC(v_lastoper,'MONTH')
	     AND B.KIND_OPER=0;
    EXCEPTION
       WHEN OTHERS THEN
	     v_lastost:=NULL;
    END;

    -- Начальный остаток  
    IF v_lastost IS NOT NULL THEN
      SELECT SUM(VOLUME) INTO v_ost
	    FROM AZC_OPERATION A,	 AZC_TYPE_OPERATION B
  	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
	     AND A.TYPE_OPER_ID=B.ID
	     AND B.KIND_OPER=0
         AND A.DATE_OPER=v_lastost;
    ELSE
      v_ost:=0;
  	  v_lastost:=TRUNC(v_lastoper,'MONTH');
    END IF;
  ELSE
    v_ost:=0;
    v_lastost:=TO_DATE('01.01.1900','dd.mm.yyyy');
  END IF;

  -- Приход - Расход
  v_prih_rash:=0;
  IF v_lastost<pDATE_OPER THEN
    SELECT SUM(DECODE(B.KIND_OPER,1,A.VOLUME,2,-A.VOLUME,0)) INTO v_prih_rash 
       FROM AZC_OPERATION A, AZC_TYPE_OPERATION B	
	   WHERE A.ORG_STRU_ID=pORG_STRU_ID
	     AND A.PROD_ID_NPR=pPROD_ID_NPR
  	     AND A.TYPE_OPER_ID=B.ID
	     AND (B.KIND_OPER=1 OR B.KIND_OPER=2) 
	     AND A.DATE_OPER>=v_lastost
	     AND A.DATE_OPER<pDATE_OPER;
  END IF;		 

  RETURN NVL(v_ost,0)+NVL(v_prih_rash,0);	   	     			
END;


END;

/

