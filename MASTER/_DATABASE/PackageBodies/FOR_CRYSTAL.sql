--
-- FOR_CRYSTAL  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_Crystal AS

PROCEDURE CRYSTAL_PASP(APASP_ID VARCHAR2, AMESTO_ID NUMBER,
  CRS IN OUT CURSTYPE) IS
--- Печать паспорта (PSV) 23.01.2002г.
BEGIN
  OPEN CRS FOR
  SELECT
    P.SORTBY,
    P.PASP_ID,
    P.PROD_ID_NPR,
    P.PASP_NUM,
    P.REZ_NUM,
    P.PASP_DATE,
    KLS_PROD.LONG_NAME_NPR,
    KLS_PROD.GOST_NPR,
    P.KODIF_ID,
    P.NAME,
    P.NORMTU,
    V.QUAL
  FROM
  (SELECT 0 AS SORTBY, KLS_PASP.ID AS PASP_ID, KLS_PASP.PROD_ID_NPR, KLS_PASP.PASP_NUM, KLS_PASP.REZ_NUM, KLS_PASP.PASP_DATE,
          1 AS KODIF_ID, 'Плотность при 20 oC, г/см3' AS NAME, 'не норм' AS NORMTU
     FROM KLS_PASP WHERE KLS_PASP.MESTO_ID=AMESTO_ID AND KLS_PASP.ID=APASP_ID
   UNION ALL
   SELECT KLS_TABLPOK.SORTBY, KLS_PASP.ID AS PASP_ID, KLS_PASP.PROD_ID_NPR, KLS_PASP.PASP_NUM, KLS_PASP.REZ_NUM, KLS_PASP.PASP_DATE,
          KLS_TABLPOK.KODIF_ID, KLS_KODIF.NAME, KLS_TABLPOK.NORMTU
     FROM KLS_PASP, KLS_TABLPOK, KLS_KODIF
    WHERE KLS_PASP.PROD_ID_NPR=KLS_TABLPOK.PROD_ID_NPR AND KLS_TABLPOK.KODIF_ID=KLS_KODIF.ID AND
	      KLS_PASP.MESTO_ID=AMESTO_ID AND KLS_PASP.ID=APASP_ID) P, KLS_VALPASP V, KLS_PROD
  WHERE P.PASP_ID=V.PASP_ID(+) AND
	  P.KODIF_ID=V.KODIF_ID(+) AND
	  P.PROD_ID_NPR = KLS_PROD.ID_NPR
  ORDER BY P.SORTBY;
END;

PROCEDURE CRYSTAL_SVED_GD(ASVEDNUM VARCHAR2, ANOMZD VARCHAR2,
  CRS IN OUT CURSTYPE) IS
--- Печать ЖД сведения (PSV) 21.01.2002г.
BEGIN
  OPEN CRS FOR
   SELECT /*+ ordered use_nl(KVIT,MONTH,SVED,V_SVED_VALPASP,KLS_DOVER,KLS_NARIAD,KLS_PASP,KLS_TEX_PD, 
	     otpr,pererab,KLS_DOG,plat,poluch,potreb,sobstv,
		 V_STAN_PREDPR,KLS_GDOR,
	     KLS_VAGOWNER,KLS_PROD,KLS_MESTO) */
	  MONTH.DATE_PLAN,
	  MONTH.NAZN_OTG_ID,
	  KVIT.sved_num,
	  KLS_MESTO.MESTO_SVEDNAME,
	  KVIT.DATE_OTGR AS SVED_DATE,
	  pererab.PREDPR_NAME AS pererab_name,
	  KVIT.NOM_ZD,
	  KLS_DOG.DOG_NUMBER,
	  KLS_DOG.DOG_DATE,
	  plat.PREDPR_NAME AS plat_name,
	  sobstv.PREDPR_NAME AS sobstv_name,
	  KLS_TEX_PD.TEX_PD_NAME,
	  otpr.PREDPR_NAME AS otpr_name,
	  KLS_PROD.LONG_NAME_NPR,
	  poluch.PREDPR_NAME AS poluch_name,
	  V_STAN_PREDPR.PREDPR_GDKOD AS poluch_gdkod,
	  KLS_STAN.STAN_NAME || ' ' || KLS_GDOR.SHORT_NAME || ' Ж.Д.' AS stan_name,
	  KLS_STAN.STAN_KOD AS stan_gdkod,
	  MONTH.GR4,
	  MONTH.PRIM,
	  SVED.GOTOV_TIME,
	  SVED.BEG_NALIV_TIME,
	  SVED.END_NALIV_TIME,
	  SVED.DATE_OFORML,
	  KVIT.PASP_ID,
	  KLS_PASP.REZ_NUM,
	  KLS_PASP.PASP_NUM,
	  V_SVED_VALPASP.P_SER,
	  V_SVED_VALPASP.P_VOD,
	  V_SVED_VALPASP.T_VSP,
	  V_SVED_VALPASP.U_VES,
	  KVIT.NUM_CIST,
	  KVIT.KALIBR_ID,
	  KVIT.VZLIV,
	  KVIT.TEMPER,
	  KVIT.FAKT_PL,
	  KVIT.NUM_KVIT,
	  KVIT.PLOMBA1,
	  KVIT.PLOMBA2,
      KVIT.VES,
	  KVIT.VES_CIST,
	  KVIT.VES_BRUTTO,
	  KVIT.ROSINSPL1,
	  KVIT.ROSINSPL2,
	  KLS_VAGOWNER.SHORT_NAME AS vag_owner
	FROM KVIT,MONTH,SVED,V_SVED_VALPASP,KLS_DOVER,KLS_NARIAD,KLS_PASP,KLS_TEX_PD, 
	     KLS_PREDPR otpr,KLS_PREDPR pererab,
		 KLS_DOG,KLS_PREDPR plat,
         KLS_PREDPR poluch,KLS_PREDPR potreb,KLS_PREDPR sobstv,
		 V_STAN_PREDPR,KLS_STAN,KLS_GDOR,
	     KLS_VAGOWNER,KLS_PROD,KLS_MESTO
	WHERE
	  (KVIT.sved_num=TO_NUMBER(ASVEDNUM)) AND
	  (KVIT.nom_zd=ANOMZD) AND
	  (KVIT.NOM_ZD=MONTH.NOM_ZD) AND
	  (KVIT.SVED_ID=SVED.ID(+)) AND
	  (SVED.ID=V_SVED_VALPASP.SVED_ID(+)) AND
	  (KLS_NARIAD.ID(+)=SVED.NARIAD_ID) AND
	  (KLS_DOVER.ID(+)=KLS_NARIAD.DOVER_ID) AND
	  (KVIT.PASP_ID=KLS_PASP.ID(+)) AND
	  (KVIT.TEX_PD_ID=KLS_TEX_PD.ID) AND
	  (KVIT.GROTP_ID=KLS_TEX_PD.GROTP_ID) AND
	  (KLS_TEX_PD.GROTP_ID=otpr.ID) AND
	  (KVIT.PERER_ID=pererab.ID(+)) AND
	  (MONTH.DOG_ID=KLS_DOG.ID) AND
	  (KLS_DOG.PREDPR_ID=plat.ID) AND
	  (sobstv.ID=MONTH.NPR_SOBSTV_ID) AND
	  (poluch.ID=MONTH.POLUCH_ID) AND
	  (potreb.ID=MONTH.POTREB_ID) AND
	  (KLS_STAN.ID=MONTH.STAN_ID) AND
	  (KLS_STAN.GDOR_ID=KLS_GDOR.ID) AND
	  (MONTH.POLUCH_ID=V_STAN_PREDPR.PREDPR_ID(+) AND MONTH.STAN_ID=V_STAN_PREDPR.STAN_ID(+)) AND
	  (KLS_MESTO.ID=KVIT.MESTO_ID) AND
	  (KVIT.VAGOWNER_ID=KLS_VAGOWNER.ID) AND
	  (KLS_PROD.ID_NPR=KVIT.PROD_ID_NPR) AND
	  (MONTH.LOAD_ABBR<>'САМ');
END;

PROCEDURE CRYSTAL_SVED_SAM(ASVEDNUM VARCHAR2, ANOMZD VARCHAR2,
  CRS IN OUT CURSTYPE) IS
--- Печать сведения Автоналива (PSV) 21.01.2002г.
BEGIN
  OPEN CRS FOR
   SELECT /*+ ordered use_nl(KVIT,MONTH,poluch,plat,potreb,sobstv,pererab,otpr,
	     KLS_PROD,KLS_DOG,SVED,KLS_TEX_PD,KLS_PASP,V_SVED_VALPASP,KLS_MESTO,KLS_DOVER,KLS_NARIAD) */
	  MONTH.DATE_PLAN,
	  MONTH.NAZN_OTG_ID,
	  KVIT.sved_num,
	  KLS_MESTO.MESTO_SVEDNAME,
	  KVIT.DATE_OTGR AS SVED_DATE,
	  pererab.PREDPR_NAME AS pererab_name,
	  KVIT.NOM_ZD,
	  KLS_DOG.DOG_NUMBER,
	  KLS_DOG.DOG_DATE,
	  plat.PREDPR_NAME AS plat_name,
	  sobstv.PREDPR_NAME AS sobstv_name,
	  KLS_TEX_PD.TEX_PD_NAME,
	  otpr.PREDPR_NAME AS otpr_name,
	  KLS_PROD.LONG_NAME_NPR,
	  poluch.PREDPR_NAME AS poluch_name,
	  potreb.PREDPR_NAME AS potreb_name,
	  '№ ' || KLS_DOVER.NUM_DOVER || ' от ' || TO_CHAR(KLS_DOVER.DATE_DOVER,'dd.mm.yyyy') || ' до ' || TO_CHAR(KLS_DOVER.DATE_END,'dd.mm.yyyy') AS dover,
	  MONTH.PRIM,
	  '№ ' || KLS_NARIAD.NUM_NAR || ' от ' || TO_CHAR(KLS_NARIAD.DATE_NAR,'dd.mm.yyyy') || ' до ' || TO_CHAR(KLS_NARIAD.DATE_END,'dd.mm.yyyy') AS nariad,
	  SVED.GOTOV_TIME,
	  SVED.BEG_NALIV_TIME,
	  SVED.END_NALIV_TIME,
	  SVED.DATE_OFORML,
	  KVIT.PASP_ID,
	  KLS_PASP.REZ_NUM,
	  KLS_PASP.PASP_NUM,
	  V_SVED_VALPASP.P_SER,
	  V_SVED_VALPASP.P_VOD,
	  V_SVED_VALPASP.T_VSP,
	  V_SVED_VALPASP.U_VES,
	  KVIT.NUM_CIST,
	  KVIT.VZLIV,
	  KVIT.TEMPER,
	  KVIT.FAKT_PL,
	  KVIT.NUM_KVIT,
	  KVIT.PLOMBA1,
	  KVIT.PLOMBA2,
      KVIT.VES,
	  KVIT.VES_CIST,
	  KVIT.VES_BRUTTO
	FROM KVIT,MONTH,SVED,V_SVED_VALPASP,KLS_DOVER,KLS_NARIAD,KLS_PASP,KLS_TEX_PD, 
	     KLS_PREDPR otpr,KLS_PREDPR pererab,
		 KLS_DOG,KLS_PREDPR plat,
         KLS_PREDPR poluch,KLS_PREDPR potreb,KLS_PREDPR sobstv,
	     KLS_PROD,KLS_MESTO
	WHERE
	  (KVIT.sved_num=TO_NUMBER(ASVEDNUM)) AND
	  (KVIT.nom_zd=ANOMZD) AND
	  (KVIT.NOM_ZD=MONTH.NOM_ZD) AND
	  (KVIT.SVED_ID=SVED.ID(+)) AND
	  (SVED.ID=V_SVED_VALPASP.SVED_ID(+)) AND
	  (KLS_NARIAD.ID(+)=SVED.NARIAD_ID) AND
	  (KLS_DOVER.ID(+)=KLS_NARIAD.DOVER_ID) AND
	  (KVIT.PASP_ID=KLS_PASP.ID(+)) AND
	  (KVIT.TEX_PD_ID=KLS_TEX_PD.ID) AND
	  (KVIT.GROTP_ID=KLS_TEX_PD.GROTP_ID) AND
	  (KLS_TEX_PD.GROTP_ID=otpr.ID) AND
	  (KVIT.PERER_ID=pererab.ID(+)) AND
	  (MONTH.DOG_ID=KLS_DOG.ID) AND
	  (KLS_DOG.PREDPR_ID=plat.ID) AND
	  (sobstv.ID=MONTH.NPR_SOBSTV_ID) AND
	  (poluch.ID=MONTH.POLUCH_ID) AND
	  (potreb.ID=MONTH.POTREB_ID) AND
	  (KLS_MESTO.ID=KVIT.MESTO_ID) AND
	  (KLS_PROD.ID_NPR=KVIT.PROD_ID_NPR) AND
	  (MONTH.LOAD_ABBR='САМ');

END;

PROCEDURE CR_DISP_COMMON(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2, 
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- Общая выборка для отчетов диспетчера (VEV) 11.08.2001г.

DATE0_1 DATE;
DATE0_2 DATE;
DATE1_1 DATE;
DATE1_2 DATE;
DATE2_1 DATE;
DATE2_2 DATE;
no_hran NUMBER(1);
NUM_PLAT_ID NUMBER;
NUM_POLUCH_ID NUMBER;
NUM_STAN_ID NUMBER;
NUM_LOAD_TYPE_ID NUMBER;
GROUP_NPR VARCHAR2(5);
NPR VARCHAR2(5);
NUM_NAZN_OTG_ID NUMBER;
NUM_TIP_DATE NUMBER;
NUM_OTPR_ID NUMBER;
NUM_TEX_PD_ID NUMBER;
NUM_SOBSTV_ID NUMBER;
CHR_SNP_OR_NOT VARCHAR2(3);
CHR_N_ZAD VARCHAR2(20);
INFO VARCHAR2(4000);
BEGIN
  IF SNP_OR_NOT IS NULL THEN
    CHR_SNP_OR_NOT:='LUK';
  ELSE
    CHR_SNP_OR_NOT:=SNP_OR_NOT;
  END IF;	
  
  IF N_ZAD IS NULL THEN
    CHR_N_ZAD:='%';
  ELSE
    CHR_N_ZAD:=N_ZAD;
  END IF;	

  IF plat_id<>'*' AND plat_id IS NOT NULL THEN
    NUM_PLAT_ID:=TO_NUMBER(plat_id);
  ELSE
    NUM_PLAT_ID:=NULL;
  END IF;

  IF poluch_id<>'*' AND poluch_id IS NOT NULL THEN
    NUM_POLUCH_ID:=TO_NUMBER(poluch_id);
  ELSE
    NUM_POLUCH_ID:=NULL;
  END IF;

  IF sobstv_id<>'*' AND sobstv_id IS NOT NULL THEN
    NUM_SOBSTV_ID:=TO_NUMBER(sobstv_id);
  ELSE
    NUM_SOBSTV_ID:=NULL;
  END IF;

  IF stan_id<>'*' AND stan_id IS NOT NULL THEN
    NUM_stan_ID:=TO_NUMBER(stan_id);
  ELSE
    NUM_stan_ID:=NULL;
  END IF;

  IF group_npr_id<>'*' AND group_npr_id IS NOT NULL THEN
    group_npr:=group_npr_id;
  ELSE
    group_npr:=NULL;
  END IF;

  IF npr_id<>'*' AND npr_id IS NOT NULL THEN
    npr:=npr_id;
  ELSE
    npr:=NULL;
  END IF;

  IF load_type_id<>'*' AND load_type_id IS NOT NULL THEN
    num_load_type_id:=load_type_id;
  ELSE
    num_load_type_id:=NULL;
  END IF;

  IF nazn_otg_id<>'*' AND nazn_otg_id IS NOT NULL AND nazn_otg_id<>'-9' THEN
    num_nazn_otg_id:=nazn_otg_id;
  ELSE
    num_nazn_otg_id:=NULL;
  END IF;

  IF nazn_otg_id='-9' THEN
    no_hran:=1;
  ELSE
    no_hran:=0;
  END IF;
  
  IF tip_date IS NULL THEN
    num_tip_date:=0;
  ELSE	
    num_tip_date:=tip_date;
  END IF;	

  DATE0_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE0_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  
  IF num_tip_date=0 THEN
    DATE0_1:=TO_DATE(DATE_BEG,'dd.mm.yyyy hh24:mi');
    DATE0_2:=TO_DATE(DATE_END,'dd.mm.yyyy hh24:mi');
  ELSE	
    IF num_tip_date=1 THEN
      DATE1_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE1_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    ELSE
      DATE2_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE2_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    END IF;
  END IF;

  IF otpr_id<>'*' AND otpr_id IS NOT NULL THEN
    NUM_OTPR_ID:=TO_NUMBER(otpr_id);
  ELSE
    NUM_OTPR_ID:=NULL;
  END IF;

  IF tex_pd_id<>'*' AND tex_pd_id IS NOT NULL THEN
    NUM_TEX_PD_ID:=TO_NUMBER(tex_pd_id);
  ELSE
    NUM_TEX_PD_ID:=NULL;
  END IF;

  OPEN CRS FOR
    SELECT /*+ ordered */
	  KVIT.sved_num,
	  KLS_PROD.NAME_NPR,
	  KLS_DOG.DOG_NUMBER,
	  plat.PREDPR_NAME AS plat_name,
	  poluch.PREDPR_NAME || ' ОКПО ' || RTRIM(poluch.OKPO) || ' Ж/Д КОД ' || RTRIM(poluch.GD_KOD)  AS poluch_name,
	  poluch.PREDPR_NAME AS short_poluch_name,
	  sobstv.PREDPR_NAME AS sobstv_name,
	  grotpr.PREDPR_NAME || ' ОКПО ' || RTRIM(grotpr.OKPO) || ' Ж/Д КОД ' || RTRIM(grotpr.GD_KOD) AS grotpr_name,
	  grotpr.PREDPR_NAME AS short_grotpr_name,
	  DECODE(SIGN(KLS_STAN.STAN_KOD-9999),1,TO_CHAR(KLS_STAN.STAN_KOD,'000000') || 
	       ' ' || KLS_STAN.STAN_NAME || ' ' || KLS_GDOR.SHORT_NAME || ' Ж.Д.',KLS_STAN.STAN_NAME) AS stan_name,
	  KLS_TEX_PD.ID AS TEX_PD_ID,
	  KLS_TEX_PD.TEX_PD_NAME,
	  KVIT.NUM_CIST,
	  KVIT.VES_BRUTTO,
	  KVIT.VZLIV,
	  KVIT.VES_CIST,
	  KVIT.TEMPER,
	  KVIT.KALIBR_ID,
	  KVIT.FAKT_PL,
	  KVIT.NOM_ZD,
	  KVIT.NUM_KVIT,
	  KVIT.PLOMBA1,
	  KVIT.PLOMBA2,
	  KVIT.ROSINSPL1,
	  KVIT.ROSINSPL2,
	  MONTH.NAZN_OTG_ID,
	  MONTH.DATE_PLAN,
	  MONTH.TONN_DECLARED,
	  MONTH.TONN_LOADED,
	  MONTH.GR4,
	  SVED.GOTOV_TIME,
	  SVED.BEG_NALIV_TIME,
	  SVED.END_NALIV_TIME,
	  KVIT.DATE_OFORML,
	  KVIT.DATE_OTGR AS SVED_DATE,
	  KLS_NAZN_OTG.NAZN_OTG_NAME,
	  NVL(DECODE(MONTH.NAZN_OTG_ID,5,'Экспорт'),'Россия') AS export,
	  KVIT.NUM_MILITARY,
	  NVL(USL_DOG.CAT_CEN_ID,0) AS CAT_CEN_ID,
	  MONTH.DATE_CEN, 
	  MONTH.CENA,
	  MONTH.CENA_OTP,
	  ROUND(MONTH.CENA * KVIT.VES_BRUTTO,2) AS SUMMA_BN,
	  ROUND(ROUND(MONTH.CENA * KVIT.VES_BRUTTO,2)*FOR_BILLS.GetNDSValue(kvit.DATE_KVIT),2) AS SUMMA_NDS,
	  ROUND(MONTH.CENA * KVIT.VES_BRUTTO,2)+ROUND(ROUND(MONTH.CENA * KVIT.VES_BRUTTO,2)*FOR_BILLS.GetNDSValue(kvit.DATE_KVIT),2) AS SUMMA_PROD,
	  MONTH.LOAD_ABBR,
	  KVIT.ID,
	  Rusmonth(MONTH.DATE_PLAN) AS MON_PLAN,
	  KVIT.UPAK_VES
	FROM KVIT,/*V_USER_MONTH_UNP */MONTH,KLS_PROD,KLS_PREDPR plat,KLS_PREDPR poluch,KLS_PREDPR sobstv,
	     KLS_DOG,KLS_STAN,KLS_GDOR,SVED,KLS_TEX_PD,KLS_VID_OTGR,KLS_NAZN_OTG, KLS_PREDPR grotpr,
		 USL_DOG
	WHERE
	  (MONTH.nom_zd=KVIT.nom_zd) AND
	  (plat.ID=KLS_DOG.PREDPR_ID) AND 
	  (
	    (KLS_DOG.ID=DECODE(CHR_SNP_OR_NOT,'SNP',MONTH.NPODOG_ID,MONTH.DOG_ID)) OR
	    (NVL(MONTH.npodog_id,0)=0 AND CHR_SNP_OR_NOT='SNP' AND KLS_DOG.ID=MONTH.dog_id AND KLS_DOG.IS_AGENT IN (0,2,3)) 
	  ) AND
	  (KVIT.PROD_ID_NPR=KLS_PROD.ID_NPR) AND
	  (MONTH.poluch_id=poluch.ID) AND
	  (MONTH.DOG_ID=USL_DOG.DOG_ID (+)) AND
	  (MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)) AND
	  (MONTH.stan_id=KLS_STAN.ID) AND
	  (sobstv.ID=MONTH.NPR_SOBSTV_ID) AND
	  (KLS_STAN.GDOR_ID=KLS_GDOR.ID) AND
	  (MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR) AND
	  (KVIT.SVED_ID=SVED.ID(+)) AND
	  (KVIT.TEX_PD_ID=KLS_TEX_PD.ID) AND
	  (KVIT.GROTP_ID=KLS_TEX_PD.GROTP_ID) AND
	  (KLS_TEX_PD.GROTP_ID=grotpr.ID) AND
	  (MONTH.NAZN_OTG_ID=KLS_NAZN_OTG.ID) AND
	  ((KVIT.DATE_OFORML>=date0_1 AND KVIT.DATE_OFORML<date0_2) OR
 	   (KVIT.DATE_OTGR>(date1_1-1) AND KVIT.DATE_OTGR<(date1_2+1)) OR
 	   (KVIT.DATE_KVIT>(date2_1-1) AND KVIT.DATE_KVIT<(date2_2+1))) AND
	  (plat.ID=NVL(num_plat_id,plat.ID)) AND
	  (poluch.ID=NVL(num_poluch_id,poluch.ID)) AND
	  (grotpr.ID=NVL(num_otpr_id,grotpr.ID)) AND
	  (sobstv.ID=NVL(num_sobstv_id,sobstv.ID)) AND
	  (KLS_TEX_PD.ID=NVL(num_tex_pd_id,KLS_TEX_PD.ID)) AND
	  (KLS_STAN.ID=NVL(num_stan_id,KLS_STAN.ID)) AND
	  (KLS_VID_OTGR.LOAD_TYPE_ID=NVL(num_load_type_id,KLS_VID_OTGR.LOAD_TYPE_ID)) AND
	  (KLS_NAZN_OTG.ID=NVL(num_nazn_otg_id,KLS_NAZN_OTG.ID)) AND
	  (KLS_NAZN_OTG.ID<>DECODE(no_hran,1,9,0)) AND	  
	  (KVIT.NOM_ZD LIKE CHR_N_ZAD) AND
	  (KLS_PROD.ID_GROUP_NPR=NVL(group_npr,KLS_PROD.ID_GROUP_NPR)) AND
	  (KLS_PROD.ID_NPR=NVL(npr,KLS_PROD.ID_NPR));
END;

PROCEDURE CR_ROSINSP(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2, 
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- Общая выборка для отчетов диспетчера (VEV) 11.08.2001г.

ADATE_END VARCHAR2(100);
ATIP_DATE VARCHAR2(100);
BEGIN
  IF tip_date='0' THEN
    ADATE_END:=TO_CHAR(TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy')-1,'dd.mm.yyyy');
	Atip_date:='1';
  END IF;
  	
  CR_DISP_COMMON(DATE_BEG, ADATE_END,
       PLAT_ID,POLUCH_ID,
       STAN_ID,'1',
       GROUP_NPR_ID,NPR_ID,
       N_ZAD, NAZN_OTG_ID, 
       ATIP_DATE,SNP_OR_NOT, 
       OTPR_ID, TEX_PD_ID, SOBSTV_ID, CRS);
END;

PROCEDURE CR_LUKOMA(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2, 
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- Общая выборка для отчетов диспетчера (VEV) 11.08.2001г.

ADATE_END VARCHAR2(100);
ATIP_DATE VARCHAR2(100);
BEGIN
  IF tip_date='0' THEN
    ADATE_END:=TO_CHAR(TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy')-1,'dd.mm.yyyy');
	Atip_date:='1';
  END IF;
  	
  CR_DISP_COMMON(DATE_BEG, ADATE_END,
       PLAT_ID,POLUCH_ID,
       STAN_ID,load_type_id,
       GROUP_NPR_ID,NPR_ID,
       N_ZAD, '-9', 
       ATIP_DATE,SNP_OR_NOT, 
       OTPR_ID, TEX_PD_ID, SOBSTV_ID, CRS);
END;

PROCEDURE CR_FIN_PRED(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_DOG VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2, 
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  CAT_CEN VARCHAR2, SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- Общая выборка для отчетов по предъявлению - суммарно (PSV) 17.12.2002г.

DATE0_1 DATE;
DATE0_2 DATE;
DATE1_1 DATE;
DATE1_2 DATE;
DATE2_1 DATE;
DATE2_2 DATE;
NUM_PLAT_ID NUMBER;
NUM_POLUCH_ID NUMBER;
NUM_STAN_ID NUMBER;
NUM_LOAD_TYPE_ID NUMBER;
GROUP_NPR VARCHAR2(5);
NPR VARCHAR2(5);
NUM_NAZN_OTG_ID NUMBER;
NUM_TIP_DATE NUMBER;
NUM_OTPR_ID NUMBER;
NUM_TEX_PD_ID NUMBER;
CHR_SNP_OR_NOT VARCHAR2(3);
CHR_N_DOG VARCHAR2(30);
NUM_CAT_CEN NUMBER;
NUM_SOBSTV_ID NUMBER;
BEGIN
  IF SNP_OR_NOT IS NULL THEN
    CHR_SNP_OR_NOT:='LUK';
  ELSE
    CHR_SNP_OR_NOT:=SNP_OR_NOT;
  END IF;	
  
  IF N_DOG IS NULL THEN
    CHR_N_DOG:='%';
  ELSE
    CHR_N_DOG:=N_DOG;
  END IF;	

  IF plat_id<>'*' AND plat_id IS NOT NULL THEN
    NUM_PLAT_ID:=TO_NUMBER(plat_id);
  ELSE
    NUM_PLAT_ID:=NULL;
  END IF;

  IF cat_cen<>'*' AND cat_cen IS NOT NULL THEN
    NUM_CAT_CEN:=TO_NUMBER(cat_cen);
  ELSE
    NUM_CAT_CEN:=NULL;
  END IF;

  IF poluch_id<>'*' AND poluch_id IS NOT NULL THEN
    NUM_POLUCH_ID:=TO_NUMBER(poluch_id);
  ELSE
    NUM_POLUCH_ID:=NULL;
  END IF;

  IF sobstv_id<>'*' AND sobstv_id IS NOT NULL THEN
    NUM_SOBSTV_ID:=TO_NUMBER(sobstv_id);
  ELSE
    NUM_SOBSTV_ID:=NULL;
  END IF;

  IF stan_id<>'*' AND stan_id IS NOT NULL THEN
    NUM_stan_ID:=TO_NUMBER(stan_id);
  ELSE
    NUM_stan_ID:=NULL;
  END IF;

  IF group_npr_id<>'*' AND group_npr_id IS NOT NULL THEN
    group_npr:=group_npr_id;
  ELSE
    group_npr:=NULL;
  END IF;

  IF npr_id<>'*' AND npr_id IS NOT NULL THEN
    npr:=npr_id;
  ELSE
    npr:=NULL;
  END IF;

  IF load_type_id<>'*' AND load_type_id IS NOT NULL THEN
    num_load_type_id:=load_type_id;
  ELSE
    num_load_type_id:=NULL;
  END IF;

  IF nazn_otg_id<>'*' AND nazn_otg_id IS NOT NULL THEN
    num_nazn_otg_id:=nazn_otg_id;
  ELSE
    num_nazn_otg_id:=NULL;
  END IF;
  
  IF tip_date IS NULL THEN
    num_tip_date:=0;
  ELSE	
    num_tip_date:=tip_date;
  END IF;	

  DATE0_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE0_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  
  IF num_tip_date=0 THEN
    DATE0_1:=TO_DATE(DATE_BEG,'dd.mm.yyyy');
    DATE0_2:=TO_DATE(DATE_END,'dd.mm.yyyy');
  ELSE	
    IF num_tip_date=1 THEN
      DATE1_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE1_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    ELSE
      DATE2_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE2_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    END IF;
  END IF;

  IF otpr_id<>'*' AND otpr_id IS NOT NULL THEN
    NUM_OTPR_ID:=TO_NUMBER(otpr_id);
  ELSE
    NUM_OTPR_ID:=NULL;
  END IF;

  IF tex_pd_id<>'*' AND tex_pd_id IS NOT NULL THEN
    NUM_TEX_PD_ID:=TO_NUMBER(tex_pd_id);
  ELSE
    NUM_TEX_PD_ID:=NULL;
  END IF;

  OPEN CRS FOR
    SELECT
	  A.NOM_SF,
	  A.OLD_NOM_SF,
	  A.NPO_SF,
	  A.DATE_KVIT,
	  A.KOL_DN,
	  A.DATE_MOS,
	  A.NUM_5_DAY,
	  A.DATE_VYP_SF,
	  A.DATE_BUXG,
	  KLS_PROD.SF_NAME AS NAME_NPR,
	  B.VES,
	  B.CENA_BN,
	  B.SUMMA_BN,
	  B.SUMMA_AKCIZ,
	  B.SUMMA_PROD_BN,
	  B.SUMMA_PROD_NDS,
	  B.CENA,
	  B.SUMMA_PROD,
	  B.TARIF_BN+B.TARIF_GUARD_BN as TARIF_BN,
	  B.TARIF_NDS+B.TARIF_GUARD_NDS as TARIF_NDS,
	  B.TARIF+B.TARIF_GUARD as TARIF,
	  B.VOZN11_BN+B.VOZN12_BN AS VOZN_BN,
	  B.VOZN11_NDS+B.VOZN12_NDS AS VOZN_NDS,
	  B.VOZN11+B.VOZN12 AS VOZN,
	  B.STRAH,
	  A.ORIG_SUMMA_DOK as SUMMA_DOK,
	  sobstv.PREDPR_NAME AS sobstv_name,
	  plat.PREDPR_NAME AS plat_name,
	  KLS_DOG.DOG_NUMBER,
	  LUK_DOG.DOG_NUMBER AS LUK_DOG_NUMBER,
	  poluch.PREDPR_NAME || ' ОКПО ' || RTRIM(poluch.OKPO) || ' Ж/Д КОД ' || RTRIM(poluch.GD_KOD)  AS poluch_name,
	  poluch.PREDPR_NAME AS short_poluch_name,
	  potreb.PREDPR_NAME || ' ОКПО ' || RTRIM(potreb.OKPO) || ' Ж/Д КОД ' || RTRIM(potreb.GD_KOD)  AS potreb_name,
	  potreb.PREDPR_NAME AS short_potreb_name,
	  grotpr.PREDPR_NAME || ' ОКПО ' || RTRIM(grotpr.OKPO) || ' Ж/Д КОД ' || RTRIM(grotpr.GD_KOD) AS grotpr_name,
	  grotpr.PREDPR_NAME AS short_grotpr_name,
	  DECODE(SIGN(KLS_STAN.STAN_KOD-9999),1,TO_CHAR(KLS_STAN.STAN_KOD,'000000') || 
	       ' ' || KLS_STAN.STAN_NAME || ' ' || KLS_GDOR.SHORT_NAME || ' Ж.Д.',KLS_STAN.STAN_NAME) AS stan_name,
	  KLS_REGION.REGION_NAME,	   
	  KLS_TEX_PD.ID AS TEX_PD_ID,
	  KLS_TEX_PD.TEX_PD_NAME,
	  KLS_NAZN_OTG.NAZN_OTG_NAME,
	  NVL(USL_DOG.CAT_CEN_ID,0) AS CAT_CEN_ID,
	  MONTH.DATE_CEN, 
	  MONTH.CENA_OTP,
	  MONTH.LOAD_ABBR
    FROM V_BILLS A,V_BILL_POS_FLAT B,KLS_DOG_MAIN,
	  MONTH,KLS_PROD,KLS_PREDPR plat,KLS_PREDPR poluch,KLS_PREDPR potreb,KLS_PREDPR sobstv,KLS_GDOR,
	     KLS_DOG,KLS_DOG LUK_DOG,KLS_STAN,KLS_TEX_PD,KLS_VID_OTGR,KLS_NAZN_OTG,KLS_PREDPR grotpr,USL_DOG,KLS_REGION
	WHERE
	  (A.NOM_DOK=B.NOM_DOK) AND
	  (A.nom_zd=MONTH.nom_zd) AND 
      (KLS_DOG.ID=DECODE(CHR_SNP_OR_NOT,'SNP',A.SNP_DOG_ID,A.ORIG_DOG_ID)) AND 
	  (plat.ID=KLS_DOG.PREDPR_ID) AND 
	  (A.PROD_ID_NPR=KLS_PROD.ID_NPR) AND
	  (MONTH.poluch_id=poluch.ID) AND
	  (MONTH.potreb_id=potreb.ID) AND
	  (MONTH.DOG_ID=USL_DOG.DOG_ID (+)) AND
	  (MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)) AND
	  (MONTH.stan_id=KLS_STAN.ID) AND
	  (MONTH.NPR_SOBSTV_ID=sobstv.ID) AND
	  (KLS_STAN.GDOR_ID=KLS_GDOR.ID) AND
	  (KLS_STAN.REGION_ID=KLS_REGION.ID) AND
	  (MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR) AND
	  (MONTH.TEX_PD_ID=KLS_TEX_PD.ID) AND
	  (MONTH.GROTP_ID=KLS_TEX_PD.GROTP_ID) AND
	  (KLS_TEX_PD.GROTP_ID=grotpr.ID) AND
	  (A.NAZN_OTG_ID=KLS_NAZN_OTG.ID) AND
	  ((A.DATE_VYP_SF>(date0_1-1) AND A.DATE_VYP_SF<(date0_2+1)) OR
 	   (A.DATE_KVIT>(date1_1-1) AND A.DATE_KVIT<(date1_2+1)) OR
 	   (A.DATE_BUXG>(date2_1-1) AND A.DATE_BUXG<(date2_2+1))) AND
	  (plat.ID=NVL(num_plat_id,plat.ID)) AND
	  (poluch.ID=NVL(num_poluch_id,poluch.ID)) AND
	  (grotpr.ID=NVL(num_otpr_id,grotpr.ID)) AND
	  (sobstv.ID=NVL(num_sobstv_id,sobstv.ID)) AND
	  (KLS_TEX_PD.ID=NVL(num_tex_pd_id,KLS_TEX_PD.ID)) AND
	  (KLS_STAN.ID=NVL(num_stan_id,KLS_STAN.ID)) AND
	  (KLS_VID_OTGR.LOAD_TYPE_ID=NVL(num_load_type_id,KLS_VID_OTGR.LOAD_TYPE_ID)) AND
	  (KLS_NAZN_OTG.ID=NVL(num_nazn_otg_id,KLS_NAZN_OTG.ID)) AND
	  (KLS_DOG.DOG_NUMBER LIKE CHR_N_DOG) AND
	  (NVL(USL_DOG.CAT_CEN_ID,0)=NVL(num_cat_cen,NVL(USL_DOG.CAT_CEN_ID,0))) AND
	  (KLS_PROD.ID_GROUP_NPR=NVL(group_npr,KLS_PROD.ID_GROUP_NPR)) AND
	  (KLS_PROD.ID_NPR=NVL(npr,KLS_PROD.ID_NPR))
      AND A.IS_AGENT=KLS_DOG_MAIN.IS_AGENT
      AND A.DATE_KVIT BETWEEN KLS_DOG_MAIN.FROM_DATE AND KLS_DOG_MAIN.TO_DATE
	  AND (KLS_DOG_MAIN.DOG_ID=LUK_DOG.ID(+));
END;

PROCEDURE CR_ISP_ZD(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2,NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2,
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- Общая выборка для отчетов диспетчера (VEV) 27.08.2001г.

anom_zd VARCHAR2(30);

BEGIN

  IF n_zad='%' OR n_zad IS NULL THEN
    --- Иначе вылезут все заявки и это будет очень долго :( VEV
    anom_zd:='XXXX';
  ELSE
    anom_zd:=n_zad;
  END IF;
  OPEN CRS FOR
    SELECT
	  KVIT.sved_num,
	  KLS_PROD.NAME_NPR,
	  month_prod.NAME_NPR AS month_name_npr,
	  KLS_DOG.DOG_NUMBER,
	  plat.PREDPR_NAME AS plat_name,
	  poluch.PREDPR_NAME AS poluch_name,
	  sobstv.PREDPR_NAME AS sobstv_name,
	  KLS_STAN.STAN_NAME || ' ' || KLS_GDOR.SHORT_NAME || ' Ж.Д.' AS stan_name,
	  KLS_TEX_PD.TEX_PD_NAME,
	  KVIT.NUM_CIST,
	  KVIT.VES_BRUTTO,
	  KVIT.VZLIV,
	  KVIT.VES_CIST,
	  KVIT.TEMPER,
	  KVIT.KALIBR_ID,
	  KVIT.FAKT_PL,
	  KVIT.NOM_ZD,
	  KVIT.NUM_KVIT,
	  KVIT.PLOMBA1,
	  KVIT.PLOMBA2,
	  KVIT.ROSINSPL1,
	  KVIT.ROSINSPL2,
	  MONTH.NAZN_OTG_ID,
	  MONTH.DATE_PLAN,
	  MONTH.TONN_DECLARED,
	  MONTH.TONN_LOADED,
	  MONTH.GR4,
	  SVED.GOTOV_TIME,
	  SVED.BEG_NALIV_TIME,
	  SVED.END_NALIV_TIME,
	  SVED.DATE_OFORML,
	  SVED.SVED_DATE
	FROM MONTH,KVIT,KLS_PROD,KLS_PREDPR plat,KLS_PREDPR poluch,KLS_PREDPR sobstv,
	     KLS_DOG,KLS_STAN,KLS_GDOR,SVED,KLS_TEX_PD,KLS_PROD month_prod
	WHERE
	  (MONTH.nom_zd=KVIT.nom_zd) AND
	  (plat.ID=KLS_DOG.PREDPR_ID) AND
	  (MONTH.DOG_ID=KLS_DOG.ID) AND
	  (MONTH.PROD_ID_NPR=month_prod.ID_NPR) AND
	  (KVIT.PROD_ID_NPR=KLS_PROD.ID_NPR) AND
	  (MONTH.poluch_id=poluch.ID) AND
	  (MONTH.stan_id=KLS_STAN.ID) AND
	  (sobstv.ID=MONTH.NPR_SOBSTV_ID) AND
	  (KLS_STAN.GDOR_ID=KLS_GDOR.ID) AND
	  (KVIT.SVED_ID=SVED.ID(+)) AND
	  (KVIT.TEX_PD_ID=KLS_TEX_PD.ID) AND
	  (KVIT.GROTP_ID=KLS_TEX_PD.GROTP_ID) AND
	  (KVIT.NOM_ZD LIKE anom_zd);
END;

PROCEDURE CR_LIST_ZAD_IN_NAR(ANARIAD_ID NUMBER,
  CRS IN OUT CURSTYPE)
IS
--- Список заданий в наряде (PSV) 21.08.2001г.
BEGIN
  OPEN CRS FOR
    SELECT MONTH.NOM_ZD, KLS_PROD_NAR.ABBR_NPR AS NAR_SHORT
    FROM KLS_NAR_LINE, MONTH, KLS_PROD, KLS_PROD_NAR
    WHERE KLS_NAR_LINE.NOM_ZD=MONTH.NOM_ZD AND
               MONTH.PROD_ID_NPR=KLS_PROD.ID_NPR AND
			   KLS_PROD.PROD_NAR_ID=KLS_PROD_NAR.ID AND
               MONTH.DATE_PLAN>=TO_DATE('01.01.2001','dd.mm.yyyy') AND
               KLS_NAR_LINE.NARIAD_ID = ANARIAD_ID
    ORDER BY MONTH.NOM_ZD;
END;

PROCEDURE CR_IVR_REP(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2,NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2,
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE)
IS
--- Отчет по отгрузке для ЖД (VEV) 28.08.2001г.
d_plan DATE;
num_plat_id NUMBER;
BEGIN

  IF plat_id<>'*' AND plat_id IS NOT NULL THEN
    NUM_PLAT_ID:=TO_NUMBER(plat_id);
  ELSE
    NUM_PLAT_ID:=NULL;
  END IF;

  d_plan:=TRUNC(TO_DATE(DATE_END,'dd.mm.yyyy hh24:mi'),'mm');
  OPEN CRS FOR
SELECT
  prod_gr.NAME_NPR,
  0 AS PLAN_POST,
  KLS_DOG.DOG_NUMBER,
  KLS_PREDPR.PREDPR_NAME,
  KLS_PROD.ABBR_NPR,
  KLS_GDOR.short_name || ' Ж.Д.' AS GDOR_NAME,
  KLS_STAN.STAN_NAME,
  MAX(MONTH.TONN_DECLARED) AS tonn_declared,
  KVIT.NOM_ZD,
  MONTH.INPUT_DATE,
  SUM(KVIT.ves) AS ves,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'01',KVIT.ves),0)) AS d01,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'02',KVIT.ves),0)) AS d02,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'03',KVIT.ves),0)) AS d03,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'04',KVIT.ves),0)) AS d04,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'05',KVIT.ves),0)) AS d05,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'06',KVIT.ves),0)) AS d06,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'07',KVIT.ves),0)) AS d07,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'08',KVIT.ves),0)) AS d08,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'09',KVIT.ves),0)) AS d09,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'10',KVIT.ves),0)) AS d10,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'11',KVIT.ves),0)) AS d11,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'12',KVIT.ves),0)) AS d12,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'13',KVIT.ves),0)) AS d13,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'14',KVIT.ves),0)) AS d14,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'15',KVIT.ves),0)) AS d15,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'16',KVIT.ves),0)) AS d16,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'17',KVIT.ves),0)) AS d17,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'18',KVIT.ves),0)) AS d18,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'19',KVIT.ves),0)) AS d19,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'20',KVIT.ves),0)) AS d20,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'21',KVIT.ves),0)) AS d21,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'22',KVIT.ves),0)) AS d22,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'23',KVIT.ves),0)) AS d23,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'24',KVIT.ves),0)) AS d24,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'25',KVIT.ves),0)) AS d25,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'26',KVIT.ves),0)) AS d26,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'27',KVIT.ves),0)) AS d27,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'28',KVIT.ves),0)) AS d28,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'29',KVIT.ves),0)) AS d29,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'30',KVIT.ves),0)) AS d30,
  SUM(NVL(DECODE(TO_CHAR(Gd_Date(KVIT.date_oforml),'DD'),'31',KVIT.ves),0)) AS d31
  FROM KVIT,MONTH,KLS_DOG,KLS_PROD,KLS_PROD prod_gr,KLS_PREDPR,KLS_STAN,KLS_GDOR
  WHERE
    (KVIT.date_oforml<=TO_DATE(DATE_END,'dd.mm.yyyy hh24:mi')) AND
	(MONTH.DATE_PLAN=d_plan) AND
	(KVIT.NOM_ZD=MONTH.NOM_ZD) AND
	(MONTH.DOG_ID=KLS_DOG.ID) AND
	(KLS_PROD.ID_NPR=KVIT.prod_id_npr) AND
	(prod_gr.ID_NPR=KLS_PROD.id_group_npr) AND
	(KLS_PREDPR.ID=KLS_DOG.PREDPR_ID) AND
	(KLS_STAN.ID=MONTH.stan_id) AND
	(KLS_GDOR.ID=KLS_STAN.gdor_id) AND
	(KLS_DOG.PREDPR_ID=NVL(num_plat_id,KLS_DOG.PREDPR_ID))
  GROUP BY
    prod_gr.NAME_NPR,
    0,
    KLS_DOG.DOG_NUMBER,
    KLS_PREDPR.PREDPR_NAME,
    KLS_PROD.ABBR_NPR,
    KLS_GDOR.short_name || ' Ж.Д.',
    KLS_STAN.STAN_NAME,
    KVIT.NOM_ZD,
    0,
    MONTH.INPUT_DATE
  ORDER BY
    prod_gr.NAME_NPR,
    KLS_DOG.DOG_NUMBER,
    KLS_PREDPR.PREDPR_NAME,
    KLS_PROD.ABBR_NPR,
    KLS_GDOR.short_name || ' Ж.Д.',
    KLS_STAN.STAN_NAME,
    KVIT.NOM_ZD,
    MONTH.INPUT_DATE;
END;


PROCEDURE CR_KTU_UNP(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2,NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2,
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE)
IS
--- Сравнение нарядов и отгрузки (PSV) 22.11.2001г.
Y1 NUMBER;
Y2 NUMBER;
M1 NUMBER;
M2 NUMBER;
anom_zd VARCHAR2(30);
NUM_PLAT_ID NUMBER;
NPR VARCHAR2(5);

BEGIN
  Y1:=TO_NUMBER(SUBSTR(DATE_BEG,7,4));
  Y2:=TO_NUMBER(SUBSTR(DATE_END,7,4));
  M1:=TO_NUMBER(SUBSTR(DATE_BEG,4,2));
  M2:=TO_NUMBER(SUBSTR(DATE_END,4,2));

  IF plat_id<>'*' AND plat_id IS NOT NULL THEN
    NUM_PLAT_ID:=TO_NUMBER(plat_id);
  ELSE
    NUM_PLAT_ID:=NULL;
  END IF;
  IF npr_id<>'*' AND npr_id IS NOT NULL THEN
    npr:=npr_id;
  ELSE
    npr:=NULL;
  END IF;

  OPEN CRS FOR
    SELECT *
    FROM V_KTU_UNP_READY
    WHERE YY>=Y1 AND
          YY<=Y2 AND
          MM>=M1 AND
          MM<=M2 AND
	      (NOM_ZD_KTU LIKE N_ZAD OR
  		   NOM_ZD_UNP LIKE N_ZAD) AND
	      (KOD_PLAT=NVL(num_plat_id,KOD_PLAT)) AND
   	      (KOD_PROD=NVL(npr,KOD_PROD));
END;


PROCEDURE CR_NPR_CEN(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2,NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2,
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- выборка для отчетов по ценам (VEV) 17.12.2001г.
npr VARCHAR2(5);
group_npr VARCHAR2(5);
BEGIN
  IF npr_id<>'*' AND npr_id IS NOT NULL THEN
    npr:=npr_id;
  ELSE
    npr:=NULL;
  END IF;

  IF group_npr_id<>'*' AND group_npr_id IS NOT NULL THEN
    group_npr:=group_npr_id;
  ELSE
    group_npr:=NULL;
  END IF;

  OPEN CRS FOR
SELECT
  KLS_CAT_CEN.ID,
  LPAD(KLS_CAT_CEN.ID,4,' ') || ' (' || KLS_CAT_CEN.CAT_CEN_NAME || ')' AS CAT_CEN_NAME,
  NPR_PRICES.cena_otp,
  NPR_PRICES.end_date,
  KLS_PROD.LONG_NAME_NPR,
  NVL(KLS_PREDPR.SHORT_NAME,KLS_CAT_CEN.cat_cen_name)
  FROM NPR_PRICES, KLS_CAT_CEN, KLS_PREDPR, KLS_PROD
 WHERE      (NPR_PRICES.cat_cen_id = KLS_CAT_CEN.ID)
        AND (KLS_CAT_CEN.predpr_id = KLS_PREDPR.ID(+))
        AND (NPR_PRICES.end_date IS NULL)
        AND (NPR_PRICES.PROD_ID_NPR = NVL(NPR,NPR_PRICES.PROD_ID_NPR))
        AND (KLS_PROD.ID_GROUP_NPR = NVL(group_npr,KLS_PROD.ID_GROUP_NPR))
        AND (NPR_PRICES.PROD_ID_NPR = KLS_PROD.ID_NPR)
  ORDER BY LONG_NAME_NPR;
END;

PROCEDURE CR_REZ_REPORT(DATE_BEG VARCHAR2,
  CRS IN OUT CURSTYPE) IS
BEGIN
  OPEN CRS FOR
    SELECT
	  DECODE(KLS_PROD_PLAN.ID,90099,TO_NUMBER(KLS_PROD.ID_NPR),KLS_PROD_PLAN.ORDER_NPR) AS ORDER_NPR,
	  TO_CHAR(DECODE(KLS_PROD_PLAN.ID,90099,TO_NUMBER(KLS_PROD.ID_NPR),KLS_PROD_PLAN.ORDER_NPR),'0000') ||
	  KLS_PROD.NAME_NPR AS ORDER_NPR_CH,	  
	  KLS_PROD.NAME_NPR, 
	  KLS_PROD.LONG_NAME_NPR, 
	  ARC_REZ.* 
	FROM ARC_REZ,KLS_PROD,KLS_PROD_PLAN 
	WHERE KLS_PROD.ID_NPR=ARC_REZ.PROD_ID_NPR 
	  AND KLS_PROD.PROD_PLAN_ID=KLS_PROD_PLAN.ID
	  AND dateupload=TO_DATE(DATE_BEG,'dd.mm.yyyy hh24:mi:ss');
END;

PROCEDURE CR_SF_PRINT(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,DOG_ID VARCHAR2,
  NUM_SF1 VARCHAR2,NUM_SF2 VARCHAR2,
  CRS IN OUT CURSTYPE) IS
BEGIN
  OPEN CRS FOR
    SELECT * FROM V_SF_PRINT
	  WHERE TO_NUMBER(sf_no) BETWEEN TO_NUMBER(NUM_SF1) AND TO_NUMBER(NUM_SF2);
END;

PROCEDURE CR_CHECK_PRICES(ACAT_CEN VARCHAR2, CRS IN OUT CURSTYPE) IS
BEGIN
  OPEN CRS FOR
    SELECT * FROM V_CHECK_PRICES
	  WHERE CAT_CEN_ID=TO_NUMBER(ACAT_CEN);
  NULL;	  
END;

PROCEDURE CR_CHECK_SNP_SF(ACAT_CEN VARCHAR2, CRS IN OUT CURSTYPE) IS
BEGIN
/*  OPEN CRS FOR
    SELECT * FROM V_CHECK_SNP_SF
	  WHERE NPOCAT_CEN_ID=TO_NUMBER(ACAT_CEN);*/
  NULL;	  
END;

PROCEDURE CR_GKH(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2, 
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- Отгрузка по госпрограмме ЖКН по договорам поставки

DATE0_1 DATE;
DATE0_2 DATE;
DATE1_1 DATE;
DATE1_2 DATE;
DATE2_1 DATE;
DATE2_2 DATE;
NUM_PLAT_ID NUMBER;
NUM_POLUCH_ID NUMBER;
NUM_STAN_ID NUMBER;
NUM_LOAD_TYPE_ID NUMBER;
GROUP_NPR VARCHAR2(5);
NPR VARCHAR2(5);
NUM_NAZN_OTG_ID NUMBER;
NUM_TIP_DATE NUMBER;
NUM_OTPR_ID NUMBER;
NUM_TEX_PD_ID NUMBER;
CHR_SNP_OR_NOT VARCHAR2(3);
CHR_N_ZAD VARCHAR2(20);
NUM_SOBSTV_ID NUMBER;
BEGIN
  IF SNP_OR_NOT IS NULL THEN
    CHR_SNP_OR_NOT:='LUK';
  ELSE
    CHR_SNP_OR_NOT:=SNP_OR_NOT;
  END IF;	
  
  IF N_ZAD IS NULL THEN
    CHR_N_ZAD:='%';
  ELSE
    CHR_N_ZAD:=N_ZAD;
  END IF;	

  IF plat_id<>'*' AND plat_id IS NOT NULL THEN
    NUM_PLAT_ID:=TO_NUMBER(plat_id);
  ELSE
    NUM_PLAT_ID:=NULL;
  END IF;

  IF poluch_id<>'*' AND poluch_id IS NOT NULL THEN
    NUM_POLUCH_ID:=TO_NUMBER(poluch_id);
  ELSE
    NUM_POLUCH_ID:=NULL;
  END IF;

  IF sobstv_id<>'*' AND sobstv_id IS NOT NULL THEN
    NUM_SOBSTV_ID:=TO_NUMBER(sobstv_id);
  ELSE
    NUM_SOBSTV_ID:=NULL;
  END IF;

  IF stan_id<>'*' AND stan_id IS NOT NULL THEN
    NUM_stan_ID:=TO_NUMBER(stan_id);
  ELSE
    NUM_stan_ID:=NULL;
  END IF;

  IF group_npr_id<>'*' AND group_npr_id IS NOT NULL THEN
    group_npr:=group_npr_id;
  ELSE
    group_npr:=NULL;
  END IF;

  IF npr_id<>'*' AND npr_id IS NOT NULL THEN
    npr:=npr_id;
  ELSE
    npr:=NULL;
  END IF;

  IF load_type_id<>'*' AND load_type_id IS NOT NULL THEN
    num_load_type_id:=load_type_id;
  ELSE
    num_load_type_id:=NULL;
  END IF;

  IF nazn_otg_id<>'*' AND nazn_otg_id IS NOT NULL THEN
    num_nazn_otg_id:=nazn_otg_id;
  ELSE
    num_nazn_otg_id:=NULL;
  END IF;
  
  IF tip_date IS NULL THEN
    num_tip_date:=0;
  ELSE	
    num_tip_date:=tip_date;
  END IF;	

  DATE0_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE0_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  
  IF num_tip_date=0 THEN
    DATE0_1:=TO_DATE(DATE_BEG,'dd.mm.yyyy hh24:mi');
    DATE0_2:=TO_DATE(DATE_END,'dd.mm.yyyy hh24:mi');
  ELSE	
    IF num_tip_date=1 THEN
      DATE1_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE1_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    ELSE
      DATE2_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE2_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    END IF;
  END IF;

  IF otpr_id<>'*' AND otpr_id IS NOT NULL THEN
    NUM_OTPR_ID:=TO_NUMBER(otpr_id);
  ELSE
    NUM_OTPR_ID:=NULL;
  END IF;

  IF tex_pd_id<>'*' AND tex_pd_id IS NOT NULL THEN
    NUM_TEX_PD_ID:=TO_NUMBER(tex_pd_id);
  ELSE
    NUM_TEX_PD_ID:=NULL;
  END IF;

  OPEN CRS FOR
    SELECT /*+ ordered use_nl(KVIT,MONTH,KLS_REGION,KLS_PREDPR PLAT,KLS_DOG, KLS_PREDPR POLUCH, KLS_PROD, KLS_STAN, KLS_TEX_PD,sobstv, KLS_VID_OTGR,  grotpr, KLS_NAZN_OTG) */
      PLAT.PREDPR_NAME AS PLAT_NAME,
	  poluch.PREDPR_NAME || ' ОКПО ' || RTRIM(poluch.OKPO) || ' Ж/Д КОД ' || RTRIM(poluch.GD_KOD)  AS poluch_name,
      KLS_PROD.LONG_NAME_NPR AS NAME_NPR,
      SUM(KVIT.VES_BRUTTO) AS VES_BRUTTO,
      COUNT(KVIT.ID) AS KOL,
	  grotpr.PREDPR_NAME as grotpr_name
    FROM KVIT,V_USER_MONTH_SNP month,KLS_REGION,KLS_PREDPR PLAT,KLS_DOG, KLS_PREDPR POLUCH, KLS_PROD, KLS_STAN, KLS_TEX_PD,KLS_PREDPR sobstv, KLS_VID_OTGR, KLS_PREDPR grotpr, KLS_NAZN_OTG 
    WHERE KVIT.NOM_ZD=MONTH.NOM_ZD
	  AND MONTH.IS_AGENT=2
      AND month.GOSPROG_ID=50
      AND MONTH.PLANSTRU_ID<>78
      AND month.NPODOG_ID=KLS_DOG.ID
      AND MONTH.POLUCH_ID=POLUCH.ID
      AND KLS_DOG.PREDPR_ID=PLAT.ID
      AND PLAT.REGION_ID=KLS_REGION.ID AND
	  (MONTH.stan_id=KLS_STAN.ID) AND
	  (sobstv.ID=MONTH.NPR_SOBSTV_ID) AND
	  (MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR) AND
	  (KVIT.TEX_PD_ID=KLS_TEX_PD.ID) AND
	  (KVIT.GROTP_ID=KLS_TEX_PD.GROTP_ID) AND
	  (KLS_TEX_PD.GROTP_ID=grotpr.ID) AND
	  (MONTH.NAZN_OTG_ID=KLS_NAZN_OTG.ID) AND
      KVIT.PROD_ID_NPR=KLS_PROD.ID_NPR AND
--	  ((KVIT.DATE_OFORML>=date0_1 AND KVIT.DATE_OFORML<date0_2) OR
-- 	   (KVIT.DATE_OTGR>(date1_1-1) AND KVIT.DATE_OTGR<(date1_2+1)) OR
-- 	   (KVIT.DATE_KVIT>(date2_1-1) AND KVIT.DATE_KVIT<(date2_2+1))) AND
	  (KVIT.DATE_OTGR>(date2_1-1) AND KVIT.DATE_OTGR<(date2_2+1)) AND 
	  (plat.ID=NVL(num_plat_id,plat.ID)) AND
	  (poluch.ID=NVL(num_poluch_id,poluch.ID)) AND
	  (grotpr.ID=NVL(num_otpr_id,grotpr.ID)) AND
	  (sobstv.ID=NVL(num_sobstv_id,sobstv.ID)) AND
	  (KLS_TEX_PD.ID=NVL(num_tex_pd_id,KLS_TEX_PD.ID)) AND
	  (KLS_STAN.ID=NVL(num_stan_id,KLS_STAN.ID)) AND
	  (KLS_VID_OTGR.LOAD_TYPE_ID=NVL(num_load_type_id,KLS_VID_OTGR.LOAD_TYPE_ID)) AND
	  (KLS_NAZN_OTG.ID=NVL(num_nazn_otg_id,KLS_NAZN_OTG.ID)) AND
	  (KLS_PROD.ID_GROUP_NPR=NVL(group_npr,KLS_PROD.ID_GROUP_NPR)) AND
	  (KLS_PROD.ID_NPR=NVL(npr,KLS_PROD.ID_NPR))
    GROUP BY
      PLAT.PREDPR_NAME,
	  poluch.PREDPR_NAME || ' ОКПО ' || RTRIM(poluch.OKPO) || ' Ж/Д КОД ' || RTRIM(poluch.GD_KOD),
      KLS_PROD.LONG_NAME_NPR,
	  grotpr.PREDPR_NAME
    ORDER BY
      PLAT.PREDPR_NAME,
	  poluch.PREDPR_NAME || ' ОКПО ' || RTRIM(poluch.OKPO) || ' Ж/Д КОД ' || RTRIM(poluch.GD_KOD),
      KLS_PROD.LONG_NAME_NPR,
	  grotpr.PREDPR_NAME;

END;

PROCEDURE CR_REG_POL(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, REGION_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
BEGIN
CR_REGIONS(DATE_BEG, DATE_END,
  PLAT_ID,POLUCH_ID,
  STAN_ID,LOAD_TYPE_ID,
  GROUP_NPR_ID,NPR_ID,
  N_ZAD, '1_4_8', 
  TIP_DATE,SNP_OR_NOT, 
  OTPR_ID, TEX_PD_ID, 
  SOBSTV_ID, REGION_ID, CRS);
END;  

PROCEDURE CR_REG_14(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
BEGIN
CR_REGIONS(DATE_BEG, DATE_END,
  PLAT_ID,POLUCH_ID,
  STAN_ID,LOAD_TYPE_ID,
  GROUP_NPR_ID,NPR_ID,
  N_ZAD, '1_4', 
  TIP_DATE,SNP_OR_NOT, 
  OTPR_ID, TEX_PD_ID, 
  SOBSTV_ID, '*', CRS);
END;  

PROCEDURE CR_REG_148(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
BEGIN
CR_REGIONS(DATE_BEG, DATE_END,
  PLAT_ID,POLUCH_ID,
  STAN_ID,LOAD_TYPE_ID,
  GROUP_NPR_ID,NPR_ID,
  N_ZAD, '1_4_8', 
  TIP_DATE,SNP_OR_NOT, 
  OTPR_ID, TEX_PD_ID, 
  SOBSTV_ID, '*', CRS);
END;  
 
PROCEDURE CR_REG_1489(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
BEGIN
CR_REGIONS(DATE_BEG, DATE_END,
  PLAT_ID,POLUCH_ID,
  STAN_ID,LOAD_TYPE_ID,
  GROUP_NPR_ID,NPR_ID,
  N_ZAD, '1_4_8_9', 
  TIP_DATE,SNP_OR_NOT, 
  OTPR_ID, TEX_PD_ID, 
  SOBSTV_ID, '*', CRS);
END;  

PROCEDURE CR_REG_ALL(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2,
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
BEGIN
CR_REGIONS(DATE_BEG, DATE_END,
  PLAT_ID,POLUCH_ID,
  STAN_ID,LOAD_TYPE_ID,
  GROUP_NPR_ID,NPR_ID,
  N_ZAD, 'ALL', 
  TIP_DATE,SNP_OR_NOT, 
  OTPR_ID, TEX_PD_ID, 
  SOBSTV_ID, '*', CRS);
END;  

PROCEDURE CR_REGIONS(DATE_BEG VARCHAR2, DATE_END VARCHAR2,
  PLAT_ID VARCHAR2,POLUCH_ID VARCHAR2,
  STAN_ID VARCHAR2,LOAD_TYPE_ID VARCHAR2,
  GROUP_NPR_ID VARCHAR2,NPR_ID VARCHAR2,
  N_ZAD VARCHAR2, NAZN_OTG_ID VARCHAR2, 
  TIP_DATE VARCHAR2,SNP_OR_NOT VARCHAR2, 
  OTPR_ID VARCHAR2, TEX_PD_ID VARCHAR2, 
  SOBSTV_ID VARCHAR2, REGION_ID VARCHAR2, CRS IN OUT CURSTYPE) IS
--- Отгрузка в регионы РФ

DATE0_1 DATE;
DATE0_2 DATE;
DATE1_1 DATE;
DATE1_2 DATE;
DATE2_1 DATE;
DATE2_2 DATE;
NUM_PLAT_ID NUMBER;
NUM_POLUCH_ID NUMBER;
NUM_STAN_ID NUMBER;
NUM_LOAD_TYPE_ID NUMBER;
GROUP_NPR VARCHAR2(5);
NPR VARCHAR2(5);
--NUM_NAZN_OTG_ID NUMBER;
CHR_NAZN_OTG_ID VARCHAR2(100);
NUM_TIP_DATE NUMBER;
NUM_OTPR_ID NUMBER;
NUM_TEX_PD_ID NUMBER;
CHR_SNP_OR_NOT VARCHAR2(3);
CHR_N_ZAD VARCHAR2(20);
NUM_SOBSTV_ID NUMBER;
NUM_REGION_ID NUMBER;
BEGIN
  IF SNP_OR_NOT IS NULL THEN
    CHR_SNP_OR_NOT:='LUK';
  ELSE
    CHR_SNP_OR_NOT:=SNP_OR_NOT;
  END IF;	
  
  IF N_ZAD IS NULL THEN
    CHR_N_ZAD:='%';
  ELSE
    CHR_N_ZAD:=N_ZAD;
  END IF;	

  IF plat_id<>'*' AND plat_id IS NOT NULL THEN
    NUM_PLAT_ID:=TO_NUMBER(plat_id);
  ELSE
    NUM_PLAT_ID:=NULL;
  END IF;

  IF poluch_id<>'*' AND poluch_id IS NOT NULL THEN
    NUM_POLUCH_ID:=TO_NUMBER(poluch_id);
  ELSE
    NUM_POLUCH_ID:=NULL;
  END IF;

  IF sobstv_id<>'*' AND sobstv_id IS NOT NULL THEN
    NUM_SOBSTV_ID:=TO_NUMBER(sobstv_id);
  ELSE
    NUM_SOBSTV_ID:=NULL;
  END IF;

  IF region_id<>'*' AND region_id IS NOT NULL THEN
    NUM_REGION_ID:=TO_NUMBER(region_id);
  ELSE
    NUM_REGION_ID:=NULL;
  END IF;

  IF stan_id<>'*' AND stan_id IS NOT NULL THEN
    NUM_stan_ID:=TO_NUMBER(stan_id);
  ELSE
    NUM_stan_ID:=NULL;
  END IF;

  IF group_npr_id<>'*' AND group_npr_id IS NOT NULL THEN
    group_npr:=group_npr_id;
  ELSE
    group_npr:=NULL;
  END IF;

  IF npr_id<>'*' AND npr_id IS NOT NULL THEN
    npr:=npr_id;
  ELSE
    npr:=NULL;
  END IF;

  IF load_type_id<>'*' AND load_type_id IS NOT NULL THEN
    num_load_type_id:=load_type_id;
  ELSE
    num_load_type_id:=NULL;
  END IF;

/*  IF nazn_otg_id<>'*' AND nazn_otg_id IS NOT NULL THEN
    num_nazn_otg_id:=nazn_otg_id;
  ELSE
    num_nazn_otg_id:=NULL;
  END IF;*/
  chr_nazn_otg_id:=nazn_otg_id;
  
  IF tip_date IS NULL THEN
    num_tip_date:=0;
  ELSE	
    num_tip_date:=tip_date;
  END IF;	

  DATE0_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE0_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE1_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_1:=TO_DATE('01.01.2050','dd.mm.yyyy');
  DATE2_2:=TO_DATE('01.01.2050','dd.mm.yyyy');
  
  IF num_tip_date=0 THEN
    DATE0_1:=TO_DATE(DATE_BEG,'dd.mm.yyyy hh24:mi');
    DATE0_2:=TO_DATE(DATE_END,'dd.mm.yyyy hh24:mi');
  ELSE	
    IF num_tip_date=1 THEN
      DATE1_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE1_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    ELSE
      DATE2_1:=TO_DATE(SUBSTR(DATE_BEG,1,10),'dd.mm.yyyy');
      DATE2_2:=TO_DATE(SUBSTR(DATE_END,1,10),'dd.mm.yyyy');
    END IF;
  END IF;

  IF otpr_id<>'*' AND otpr_id IS NOT NULL THEN
    NUM_OTPR_ID:=TO_NUMBER(otpr_id);
  ELSE
    NUM_OTPR_ID:=NULL;
  END IF;

  IF tex_pd_id<>'*' AND tex_pd_id IS NOT NULL THEN
    NUM_TEX_PD_ID:=TO_NUMBER(tex_pd_id);
  ELSE
    NUM_TEX_PD_ID:=NULL;
  END IF;

  OPEN CRS FOR
    SELECT /*+ rule */
	  grotpr.PREDPR_NAME as grotpr_name,
	  DECODE(num_sobstv_id,NULL,'По всем владельцам','Владелец ' || sobstv.PREDPR_NAME) || DECODE(CHR_NAZN_OTG_ID,'ALL',' вкл. отгрузку с хранения/на хранение и ЭКСПОРТ','1_4','','1_4_8',' вкл. отгрузку на хранение','1_4_8_9','вкл. отгрузку на хранение и с хранения') AS REPORT_PRIM,
	  poluch_REGION.REGION_NAME AS REGION_NAME,
	  poluch_REGION.OKATO AS OKATO,
      KVIT.VES_BRUTTO AS ALL_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10300',DECODE(KLS_PROD.GD_KOD_NPR,'211056',KVIT.VES_BRUTTO,0),0) AS AUTOBENZIN_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10300',DECODE(KLS_PROD.GD_KOD_NPR,'211056',1,0),0) AS AUTOBENZIN_CNT,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10300',DECODE(KLS_PROD.GD_KOD_NPR,'211056',0,KVIT.VES_BRUTTO),0) AS PR_BENZIN_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10300',DECODE(KLS_PROD.GD_KOD_NPR,'211056',0,1),0) AS PR_BENZIN_CNT,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10400',KVIT.VES_BRUTTO,0) AS DIZEL_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10400',1,0) AS DIZEL_CNT,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10500',KVIT.VES_BRUTTO,0) AS KER_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10500',1,0) AS KER_CNT,
      DECODE(KLS_PROD.ID_GROUP_NPR,'11500',KVIT.VES_BRUTTO,0) AS MAZUT_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'11500',1,0) AS MAZUT_CNT,
      DECODE(KLS_PROD.ID_GROUP_NPR,'11900',KVIT.VES_BRUTTO,0) AS MASLO_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'11900',1,0) AS MASLO_CNT,
      DECODE(KLS_PROD.ID_GROUP_NPR,'13000',KVIT.VES_BRUTTO,0) AS BITUM_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'13000',1,0) AS BITUM_CNT,
      DECODE(KLS_PROD.ID_GROUP_NPR,'23000',KVIT.VES_BRUTTO,'90099',KVIT.VES_BRUTTO,'21000',KVIT.VES_BRUTTO,'21100',KVIT.VES_BRUTTO,'21200',KVIT.VES_BRUTTO,0) AS PR_VES,
      DECODE(KLS_PROD.ID_GROUP_NPR,'23000',1,'90099',1,'21000',1,'21100',1,'21200',1,0) AS PR_CNT,
	  KVIT.DATE_OFORML,
	  KVIT.SVED_NUM,
	  KVIT.NUM_CIST,
	  KVIT.DATE_OTGR AS SVED_DATE,
	  KVIT.NOM_ZD,
	  MONTH.GR4,
	  KLS_PROD.NAME_NPR,
	  poluch.PREDPR_NAME || ' ОКПО ' || RTRIM(poluch.OKPO) || ' Ж/Д КОД ' || RTRIM(poluch.GD_KOD)  AS poluch_name,
	  DECODE(SIGN(KLS_STAN.STAN_KOD-9999),1,TO_CHAR(KLS_STAN.STAN_KOD,'000000') || 
	       ' ' || KLS_STAN.STAN_NAME || ' ' || KLS_GDOR.SHORT_NAME || ' Ж.Д.',KLS_STAN.STAN_NAME) AS stan_name
    FROM KVIT,MONTH,KLS_PREDPR PLAT,KLS_PREDPR POLUCH,KLS_PREDPR sobstv,KLS_PREDPR grotpr,
	     KLS_REGION poluch_region,KLS_DOG,KLS_STAN,KLS_PROD,KLS_TEX_PD,
	     KLS_VID_OTGR, KLS_NAZN_OTG, KLS_GDOR
    WHERE (KVIT.NOM_ZD=MONTH.NOM_ZD) AND
      (MONTH.DOG_ID=KLS_DOG.ID) AND
      (MONTH.POLUCH_ID=POLUCH.ID) AND
      (MONTH.stan_id=KLS_STAN.ID) AND
	  (KLS_DOG.PREDPR_ID=plat.ID) AND 
	  (poluch.REGION_ID=poluch_region.ID) AND
	  (MONTH.NPR_SOBSTV_ID=sobstv.ID) AND
	  (MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR) AND
	  (KVIT.TEX_PD_ID=KLS_TEX_PD.ID) AND
	  (KVIT.GROTP_ID=KLS_TEX_PD.GROTP_ID) AND
	  (KLS_TEX_PD.GROTP_ID=grotpr.ID) AND
	  (MONTH.NAZN_OTG_ID=KLS_NAZN_OTG.ID) AND
      (KVIT.PROD_ID_NPR=KLS_PROD.ID_NPR) AND
	  (KLS_STAN.GDOR_ID=KLS_GDOR.ID) AND
      ((KVIT.DATE_OFORML>=date0_1 AND KVIT.DATE_OFORML<date0_2) OR
 	   (KVIT.DATE_OTGR>(date1_1-1) AND KVIT.DATE_OTGR<(date1_2+1)) OR
 	   (KVIT.DATE_KVIT>(date2_1-1) AND KVIT.DATE_KVIT<(date2_2+1))) AND
	  (plat.ID=NVL(num_plat_id,plat.ID)) AND
	  (poluch.ID=NVL(num_poluch_id,poluch.ID)) AND
	  (grotpr.ID=NVL(num_otpr_id,grotpr.ID)) AND
	  (sobstv.ID=NVL(num_sobstv_id,sobstv.ID)) AND
	  (KLS_TEX_PD.ID=NVL(num_tex_pd_id,KLS_TEX_PD.ID)) AND
	  (KLS_STAN.ID=NVL(num_stan_id,KLS_STAN.ID)) AND
	  (KLS_VID_OTGR.LOAD_TYPE_ID=NVL(num_load_type_id,KLS_VID_OTGR.LOAD_TYPE_ID)) AND
	  (KLS_PROD.ID_GROUP_NPR=NVL(group_npr,KLS_PROD.ID_GROUP_NPR)) AND
	  (KLS_PROD.ID_NPR=NVL(npr,KLS_PROD.ID_NPR)) AND
	  (MONTH.NAZN_OTG_ID<>5 OR CHR_NAZN_OTG_ID='ALL') AND
	  (MONTH.NAZN_OTG_ID<>9 OR CHR_NAZN_OTG_ID='1_4_8_9' OR CHR_NAZN_OTG_ID='ALL') AND
	  (MONTH.NAZN_OTG_ID<>8 OR CHR_NAZN_OTG_ID='1_4_8' OR CHR_NAZN_OTG_ID='1_4_8_9' OR CHR_NAZN_OTG_ID='ALL') AND
	  MONTH.NAZN_OTG_ID<>50 AND
	  MONTH.NAZN_OTG_ID<>10 AND
	  (poluch.REGION_ID=NVL(num_region_id,poluch.REGION_ID)) AND
	  (POLUCH.REGION_ID<>999 OR MONTH.NAZN_OTG_ID=5) AND
	  (POLUCH.REGION_ID<>998 OR MONTH.NAZN_OTG_ID=5) AND
	  (POLUCH.REGION_ID<>0 OR MONTH.NAZN_OTG_ID=5);
	  
END;

PROCEDURE CR_PLOTNOST(DATE_BEG VARCHAR2, DATE_END VARCHAR2, 
  CRS IN OUT CURSTYPE) IS
DATE0_1 DATE;
DATE0_2 DATE;
BEGIN  
  DATE0_1:=TO_DATE(DATE_BEG,'dd.mm.yyyy');
  DATE0_2:=TO_DATE(DATE_END,'dd.mm.yyyy');

  OPEN CRS FOR
    SELECT 
      KLS_PROD.ID_GROUP_NPR,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10300',DECODE(KLS_PROD.GD_KOD_NPR,'211056','АВТОБЕНЗИНЫ','ПРОЧИЕ БЕНЗИНЫ'),
         '10400',DECODE(KLS_PROD.ID_KIND_NPR,'10405','ДТ ЗИМНЕЕ','ДТ ЛЕТНЕЕ'),GROUP_PROD.LONG_NAME_NPR) AS NAME, 
      SUM(VES_BRUTTO) AS VES, 
      SUM(VES_BRUTTO)/SUM(VES_BRUTTO/FAKT_PL) AS PLOT,
      SUM(VES_BRUTTO/FAKT_PL) AS VOLUME 
    FROM KVIT,MONTH,KLS_PROD,KLS_PROD GROUP_PROD,KLS_VID_OTGR
    WHERE KVIT.nom_zd=MONTH.nom_zd 
      AND KVIT.prod_id_npr=KLS_PROD.id_npr
      AND KLS_PROD.ID_GROUP_NPR=GROUP_PROD.ID_NPR
      AND KVIT.VES_BRUTTO>0
      AND KVIT.FAKT_PL>0
      AND MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR
      AND KLS_VID_OTGR.LOAD_TYPE_ID=1
 	  AND KVIT.DATE_OTGR>(date0_1-1) AND KVIT.DATE_OTGR<(date0_2+1)
    GROUP BY
      KLS_PROD.ID_GROUP_NPR,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10300',DECODE(KLS_PROD.GD_KOD_NPR,'211056','АВТОБЕНЗИНЫ','ПРОЧИЕ БЕНЗИНЫ'),
        '10400',DECODE(KLS_PROD.ID_KIND_NPR,'10405','ДТ ЗИМНЕЕ','ДТ ЛЕТНЕЕ'),GROUP_PROD.LONG_NAME_NPR)
    ORDER BY
      KLS_PROD.ID_GROUP_NPR,
      DECODE(KLS_PROD.ID_GROUP_NPR,'10300',DECODE(KLS_PROD.GD_KOD_NPR,'211056','АВТОБЕНЗИНЫ','ПРОЧИЕ БЕНЗИНЫ'),
        '10400',DECODE(KLS_PROD.ID_KIND_NPR,'10405','ДТ ЗИМНЕЕ','ДТ ЛЕТНЕЕ'),GROUP_PROD.LONG_NAME_NPR);
END;

PROCEDURE CR_R3_BILLS(DATE_BEG VARCHAR2, DATE_END VARCHAR2, 
  IS_AGENT VARCHAR2, CRS IN OUT CURSTYPE) IS
DATE0_1 DATE;
DATE0_2 DATE;
NUM_IS_AGENT NUMBER;
BEGIN  
  DATE0_1:=TO_DATE(DATE_BEG,'dd.mm.yyyy');
  DATE0_2:=TO_DATE(DATE_END,'dd.mm.yyyy');

  IF IS_AGENT IS NOT NULL THEN
    NUM_IS_AGENT:=TO_NUMBER(IS_AGENT);
  ELSE
    NUM_IS_AGENT:=NULL;
  END IF;

  OPEN CRS FOR
    SELECT DECODE(NUM_IS_AGENT,0,' (отчет комиссионера)',1,' (отчет агента)',2,' (отчет по поставке)','') AS IS_AGENT_NAME, 
	       A.* FROM V_R3_CHECK_BILLS A
	WHERE A.NPO_DATE_KVIT>(date0_1-1) AND A.NPO_DATE_KVIT<(date0_2+1) 
      AND A.IS_AGENT=NUM_IS_AGENT
    ORDER BY A.NPO_NOM_SF;
END;  

END; 
/

