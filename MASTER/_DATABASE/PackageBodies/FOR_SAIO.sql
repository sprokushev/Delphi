--
-- FOR_SAIO  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY MASTER.For_Saio AS

PROCEDURE LORP_LOAD_BILL(ADATE_BEG VARCHAR2, ADATE_END VARCHAR2) IS
DATE_BEG DATE;
DATE_END DATE;
DAY_BEG NUMBER;
DAY_END NUMBER;
REP_TYPE NUMBER;
DB_CODE NUMBER;
BEGIN
  DATE_BEG:=TO_DATE(ADATE_BEG,'dd.mm.yyyy');
  DATE_END:=TO_DATE(ADATE_END,'dd.mm.yyyy');
  DAY_BEG:=TO_NUMBER(TO_CHAR(DATE_BEG,'DD'));
  DAY_END:=TO_NUMBER(TO_CHAR(DATE_END,'DD'));
  
  IF (DAY_BEG=1 AND DAY_END=5) OR 
     (DAY_BEG=6 AND DAY_END=10) OR
     (DAY_BEG=11 AND DAY_END=15) OR
     (DAY_BEG=16 AND DAY_END=20) OR
     (DAY_BEG=21 AND DAY_END=25) OR
     (DAY_BEG=26 AND DAY_END=30) OR
	 (DAY_BEG=31 AND DATE_END=LAST_DAY(DATE_END)) OR
 	 (DAY_BEG=26 AND DATE_END=LAST_DAY(DATE_END)) THEN

--   IF false THEN

	 -- Обновление номеров счетов
	 UPDATE SAIO04.LO_BILL A SET NOTE=(SELECT B.NPO_SF FROM KTU_2_NPO_SF B WHERE B.NOM_DOK=A.ID)
	  WHERE EXISTS (SELECT B.NPO_SF FROM KTU_2_NPO_SF B WHERE B.NOM_DOK=A.ID)
	    AND A.DATABASE_CODE=9
	    AND A.CHECK_DATE BETWEEN DATE_BEG-5 AND DATE_END+5;
		
	 COMMIT;
	 	   
	 -- Очистка буфера
     DELETE FROM SAIO04.LORP_BUF;

	 -- Заполнение буфера - КОМИССИЯ
     INSERT INTO SAIO04.LORP_BUF (CHECK_ID,CHECK_CORP_RESOURCE_ID,ELEMENT_ID) 
       SELECT KVIT_ID,DECODE(SOBSTV,1,1,SOBSTV-1) SOBSTV,NOM_DOK FROM MASTER.V_LUKREP_SF_MON 
        WHERE DATE_MOS BETWEEN DATE_BEG AND DATE_END
          AND IS_AGENT=0 AND CNT_KVIT<=1;
	 COMMIT;

     -- Загрузка из буфера в основные таблицы - КОМИССИЯ
     SAIO04.LORP_LOAD.LOAD(9,2,1,DATE_BEG,DATE_END);

	 -- Очистка буфера
     DELETE FROM SAIO04.LORP_BUF;

	 -- Заполнение буфера - АГЕНТСКИЙ
     INSERT INTO SAIO04.LORP_BUF (CHECK_ID,CHECK_CORP_RESOURCE_ID,ELEMENT_ID) 
       SELECT KVIT_ID,DECODE(SOBSTV,1,1,SOBSTV-1) SOBSTV,NOM_DOK FROM MASTER.V_LUKREP_SF_MON 
        WHERE DATE_MOS BETWEEN DATE_BEG AND DATE_END
          AND IS_AGENT=1 AND CNT_KVIT<=1;
	 COMMIT;

     -- Загрузка из буфера в основные таблицы - АГЕНТСКИЙ
     SAIO04.LORP_LOAD.LOAD(80,1,1,DATE_BEG,DATE_END);

	 -- Очистка буфера
     DELETE FROM SAIO04.LORP_BUF;

	 -- Заполнение буфера - ПОСТАВКА
     INSERT INTO SAIO04.LORP_BUF (CHECK_ID,CHECK_CORP_RESOURCE_ID,ELEMENT_ID) 
       SELECT KVIT_ID,DECODE(SOBSTV,1,1,SOBSTV-1) SOBSTV,NOM_DOK FROM MASTER.V_LUKREP_SF_MON 
        WHERE DATE_MOS BETWEEN DATE_BEG AND DATE_END
          AND IS_AGENT=2 AND CNT_KVIT<=1;
	 COMMIT;

     -- Загрузка из буфера в основные таблицы - ПОСТАВКА
     SAIO04.LORP_LOAD.LOAD(80,4,1,DATE_BEG,DATE_END);

--   END IF; 

	 -- Очистка буфера
     DELETE FROM SAIO04.LORP_BUF;

	 -- Заполнение буфера - АГЕНТСКОЕ ВОЗНАГРАЖДЕНИЕ по 0210205, 0410889
     INSERT INTO SAIO04.LORP_BUF (CHECK_ID,CHECK_CORP_RESOURCE_ID,ELEMENT_ID) 
       SELECT NULL, 1 , LO_BILL.ID FROM SAIO04.LO_BILL, MASTER.KLS_DOG_MAIN
        WHERE CHECK_DATE BETWEEN DATE_BEG AND DATE_END
		  AND DOGOVOR_ID = KLS_DOG_MAIN.DOG_ID
		  AND KLS_DOG_MAIN.IS_AGENT=1
		  AND PRODUCT_ID IN (24,25,26);
		    
	 COMMIT;

	 -- Загрузка LORP_BUF в основные таблицы
     SAIO04.LORP_LOAD.LOAD(9,6,1,DATE_BEG,DATE_END);
 
  END IF;		  

END;

PROCEDURE LORP_DEL_BILL(ADATE_BEG VARCHAR2, ADATE_END VARCHAR2) IS

DATE_BEG DATE;
DATE_END DATE;
DAY_BEG NUMBER;
DAY_END NUMBER;

 CURSOR tmp_cur IS    
  SELECT ID FROM SAIO04.LORP_REPORT_HEADERS
   WHERE START_DATE=DATE_BEG 
	 AND END_DATE=DATE_END;

BEGIN
  DATE_BEG:=TO_DATE(ADATE_BEG,'dd.mm.yyyy');
  DATE_END:=TO_DATE(ADATE_END,'dd.mm.yyyy');
  DAY_BEG:=TO_NUMBER(TO_CHAR(DATE_BEG,'DD'));
  DAY_END:=TO_NUMBER(TO_CHAR(DATE_END,'DD'));
  
  IF (DAY_BEG=1 AND DAY_END=5) OR 
     (DAY_BEG=6 AND DAY_END=10) OR
     (DAY_BEG=11 AND DAY_END=15) OR
     (DAY_BEG=16 AND DAY_END=20) OR
     (DAY_BEG=21 AND DAY_END=25) OR
     (DAY_BEG=26 AND DAY_END=30) OR
	 (DAY_BEG=31 AND DATE_END=LAST_DAY(DATE_END)) OR
 	 (DAY_BEG=26 AND DATE_END=LAST_DAY(DATE_END)) THEN
	 
    FOR lcur IN tmp_cur 							   
    LOOP
      DELETE FROM SAIO04.LORP_TMP_CHECK WHERE HEADER_ID=lcur.ID;
      DELETE FROM SAIO04.LORP_REPORT_ELEMENTS WHERE HEADER_ID=lcur.ID;
      DELETE FROM SAIO04.LORP_REPORT_HEADERS WHERE ID=lcur.ID;
    END LOOP;
    COMMIT;
  END IF;
END;

PROCEDURE ADD_VOZN(ADATE_BEG DATE, ADATE_END DATE, ADBCODE NUMBER) IS
BEGIN
  INSERT INTO SAIO04.BU_BILL 
    (ID, DATABASE_CODE, BILL_NUM, BILL_DATE, BILL_TOTAL_SUM, WEIGHT, ACCOUNT_DATE, CHECK_DATE, CONTRACT_ID, PRICE_CATEGORY, 
     PRODUCT_ID, PRODUCT_PRICE, CONTRACT_PAYER_ID, CONSUMER_ID, STATION_ID, OLD_ID, OWNER_ID, RESOURCE_ID, DAYS_NUMBER, 
     CURRENCY_ID, PRODUCT_SUM, PRODUCT_NDS, PRODUCT_SP_TAX, PRODUCT_ROAD_TAX, PRODUCT_TOTAL_SUM, SERVICE_SUM, SERVICE_NDS, 
     SERVICE_SP_TAX, SERVICE_TOTAL_SUM, TARIFF_TOTAL_SUM, DATE_FROM, PRICE_CATEGORY_ID, INSURANCE, 
     TBONUSNDS, TBONUS, PRICE_GET, DOGOVOR_ID, CORP_UNIT_ID, CORP_UNIT_QUANTITY, TARIFF_NDS_SUM, BILL_NDS_SUM, IS_DELETED, 
     REWARD_SUM, REWARD_NDS_SUM, NOTE)
  SELECT 
    A.ID, A.DATABASE_CODE, BILL_NUM, BILL_DATE, BILL_TOTAL_SUM, WEIGHT, ACCOUNT_DATE, CHECK_DATE, CONTRACT_ID, PRICE_CATEGORY, 
    B.ID AS PRODUCT_ID, PRODUCT_PRICE, CONTRACT_PAYER_ID, CONSUMER_ID, STATION_ID, OLD_ID, OWNER_ID, RESOURCE_ID, DAYS_NUMBER, 
    CURRENCY_ID, PRODUCT_SUM, PRODUCT_NDS, PRODUCT_SP_TAX, PRODUCT_ROAD_TAX, PRODUCT_TOTAL_SUM, SERVICE_SUM, SERVICE_NDS, 
    SERVICE_SP_TAX, SERVICE_TOTAL_SUM, TARIFF_TOTAL_SUM, A.DATE_FROM, PRICE_CATEGORY_ID, INSURANCE, 
    TBONUSNDS, TBONUS, PRICE_GET, DOGOVOR_ID, CORP_UNIT_ID, CORP_UNIT_QUANTITY, TARIFF_NDS_SUM, BILL_NDS_SUM, IS_DELETED, 
    REWARD_SUM, REWARD_NDS_SUM, NOTE
  FROM 
    (SELECT 
      nom_dok AS ID,
      DECODE(KLS_DOG_MAIN.IS_AGENT,1,9,80) AS database_code,
      TO_NUMBER(nom_sf) AS bill_num,
      DATE_VYP_SF AS bill_date,
      summa_dok AS BILL_TOTAL_SUM,
      0 AS WEIGHT,
      DATE_BUXG AS ACCOUNT_DATE,
      DATE_KVIT AS CHECK_DATE,
      KLS_DOG_MAIN.U_DOG_ID AS contract_id,
      0 AS price_category,
      0 AS product_price,
      2641 AS contract_payer_id,
      2641 AS consumer_id,
      NULL AS STATION_ID,
      NULL AS OLD_ID,
      1 AS OWNER_ID,
      NULL AS RESOURCE_ID,
      0 AS DAYS_NUMBER,
      2 AS CURRENCY_ID,
      SUMMA_AKCIZ+SUMMA_PROD-SUMMA_PROD_NDS AS PRODUCT_SUM,
      SUMMA_PROD_NDS AS PRODUCT_NDS,
      0 AS PRODUCT_SP_TAX,
      SUMMA_GSM AS PRODUCT_ROAD_TAX,
      SUMMA_AKCIZ+SUMMA_PROD AS PRODUCT_TOTAL_SUM,
      SUMMA_VOZN-SUMMA_VOZN_NDS AS SERVICE_SUM,
      SUMMA_VOZN_NDS AS SERVICE_NDS,
      0 AS SERVICE_SP_TAX,
      SUMMA_VOZN AS SERVICE_TOTAL_SUM,
      SUMMA_TARIF AS TARIFF_TOTAL_SUM,
      SYSDATE AS DATE_FROM,
      2201 AS price_category_id,
      SUMMA_STRAH AS INSURANCE,
      SUMMA_VOZN_NDS AS TBONUSNDS,
      SUMMA_VOZN-SUMMA_VOZN_NDS AS TBONUS,
      NULL AS PRICE_GET,
      KLS_DOG_MAIN.DOG_ID AS dogovor_id,
      NULL AS CORP_UNIT_ID,
      NULL AS CORP_UNIT_QUANTITY,
      SUMMA_TARIF_NDS AS TARIFF_NDS_SUM,
      SUMMA_VOZN_NDS+SUMMA_TARIF_NDS AS BILL_NDS_SUM,
      '0' AS IS_DELETED,
      SUMMA_VOZN AS REWARD_SUM,
      SUMMA_VOZN_NDS AS REWARD_NDS_SUM,
      'Счет № '||NPO_SF||' '||PRIM AS NOTE,
      PROD_ID_NPR  
    FROM BILLS_PARUS, MASTER.KLS_DOG_MAIN
    WHERE KLS_DOG_MAIN.IS_AGENT IN (0,1) -- Только Комиссия и Агентский
	  AND num_dog=KLS_DOG_MAIN.DOG_ID
	  AND DATE_VYP_SF BETWEEN ADATE_BEG AND ADATE_END
    ) A, SAIO04.LO_PRODUCT B
  WHERE A.PROD_ID_NPR=B.CODE
    AND A.DATABASE_CODE=B.DATABASE_CODE
    AND A.PROD_ID_NPR<>'10006'
	AND A.DATABASE_CODE=ADBCODE;

  COMMIT;	 
END;

END;

/

