--
-- V_UNP_REP_OTGR  (View) 
--
CREATE OR REPLACE FORCE VIEW MASTER.V_UNP_REP_OTGR
(DATE_VYP_SF, DATE_BUXG, NOM_SF, DATE_KVIT, PROD_ID_NPR, 
 VES_BRUTTO, NUM_CIST, NUM_KVIT, SUM_PROD, SUM_PROD_NDS, 
 TARIF, TARIF_NDS, SUM_STRAH, GROTP_ID, TARIF_GUARD, 
 TARIF_GUARD_NDS, SVED_NUM, GROTP_NAME, TEX_PD_ID, NAME_NPR, 
 ID_GROUP_NPR, GROUP_NPR_NAME, POLUCH_ID, POLUCH_NAME, STAN_ID, 
 STAN_NAME, NAZN_OTG_ID, SOBSTV_ID, SOBSTV_NAME, N_DOG, 
 DOG_ID, LOAD_TYPE_ID, LOAD_TYPE_NAME, OWN_VAG_ID, SOBVAG_NAME, 
 PLAT_ID, PLAT_NAME, SUM_VOZ, DATE_OTGR, TARIF19, 
 CENA, CENA_OTP, SUM_VOZN11, SUM_VOZN11_NDS, SUM_VOZN12, 
 SUM_VOZN12_NDS, CAT_CEN_ID, USL_BEGIN_DATE, USL_END_DATE, ID_KIND_NPR, 
 SBOR, SHTRAF, DOG_ID2, PLAT_ID2, PLAT_NAME2, 
 N_DOG2, KOL_DN, DATE_PLAT, NOM_ZD)
AS 
SELECT /*+ RULE */
B.DATE_VYP_SF
,B.DATE_BUXG
,B.NOM_SF
,K.DATE_KVIT
,K.PROD_ID_NPR
,K.VES_BRUTTO
,K.NUM_CIST
,DECODE(K.NUM_KVIT,NULL,0,99999,0,K.NUM_KVIT) AS NUM_KVIT 
,K.SUM_PROD
,K.SUM_PROD_NDS
,K.TARIF
,K.TARIF_NDS
--,K.SUM_VOZN11+K.SUM_VOZN12 AS USL_TRANSP
--,K.SUM_VOZN11_NDS+K.SUM_VOZN12_NDS AS USL_TRANSP_NDS
,K.SUM_STRAH
,K.GROTP_ID
,K.TARIF_GUARD
,K.TARIF_GUARD_NDS
,K.SVED_NUM
,PR1.PREDPR_NAME AS GROTP_NAME
,K.TEX_PD_ID
,P1.NAME_NPR
,P1.ID_GROUP_NPR
,P2.NAME_NPR AS GROUP_NPR_NAME
,M.POTREB_ID AS POLUCH_ID
,PR2.PREDPR_NAME AS POLUCH_NAME
,M.STAN_ID
,S.STAN_NAME
,M.NAZN_OTG_ID
,M.NPR_SOBSTV_ID AS SOBSTV_ID
,PR3.PREDPR_NAME AS SOBSTV_NAME
,D.SHORT_NUMBER AS N_DOG
,B.DOG_ID
,LT.ID AS LOAD_TYPE_ID
,LT.TYPE_OTGR_NAME AS LOAD_TYPE_NAME
,OWN1.ID AS OWN_VAG_ID
,OWN1.VAGOWNER_NAME AS SOBVAG_NAME
,PR4.ID AS PLAT_ID
,PR4.PREDPR_NAME AS PLAT_NAME
,K.SUM_VOZ
,K.DATE_OTGR
,K.TARIF19
,(CASE WHEN K.CENA IS NULL THEN 0 ELSE K.CENA END) AS CENA
--,K.CENA
--,K.CENA_OTP
,(CASE WHEN K.CENA_OTP IS NULL THEN 0 ELSE K.CENA_OTP END) AS CENA_OTP
,K.SUM_VOZN11
,K.SUM_VOZN11_NDS
,K.SUM_VOZN12
,K.SUM_VOZN12_NDS
,UD.CAT_CEN_ID
,UD.USL_BEGIN_DATE
,UD.USL_END_DATE
,P1.ID_KIND_NPR
,0 AS SBOR
,0 AS SHTRAF
,M.DOG_ID AS DOG_ID2
,PR5.ID AS PLAT_ID2
,PR5.PREDPR_NAME AS PLAT_NAME2
,D2.SHORT_NUMBER AS N_DOG2
,B.KOL_DN
,B.DATE_PLAT
,K.NOM_ZD
FROM
V_KVIT_ALL K
,BILLS B
,KLS_PROD P1
,KLS_PROD P2
,MONTH M
,KLS_PREDPR PR1 --ОТПРАВИТЕЛЬ
,KLS_PREDPR PR2 --ПОЛУЧАТЕЛЬ
,KLS_PREDPR PR3 --СОБСТВЕННИК ПРОДУКТА
,KLS_PREDPR PR4 --ПЛАТЕЛЬЩИК
,KLS_PREDPR PR5 --ПЛАТЕЛЬЩИК 2
,KLS_STAN S
,KLS_DOG D
,KLS_DOG D2
,KLS_VID_OTGR VO
,KLS_LOAD_TYPE LT
,KLS_VAGOWNER OWN1
,USL_DOG UD
WHERE
K.BILL_ID=B.NOM_DOK(+)
AND K.PROD_ID_NPR=P1.ID_NPR
AND P1.ID_GROUP_NPR=P2.ID_NPR
AND K.NOM_ZD=M.NOM_ZD
AND K.GROTP_ID=PR1.ID
AND M.POTREB_ID=PR2.ID
AND M.NPR_SOBSTV_ID=PR3.ID
AND M.STAN_ID=S.ID
AND (CASE
       WHEN B.DOG_ID IS NOT NULL THEN B.DOG_ID  -- если есть СФ, то договор из СФ
    WHEN M.IS_EXP=1 THEN 2519 -- если экспорт, то договор поставки лукойлу
    ELSE M.DOG_ID -- иначе - договор из заявки
  END)=D.ID
AND M.LOAD_ABBR=VO.LOAD_ABBR
AND VO.LOAD_TYPE_ID=LT.ID
AND K.VAGOWNER_ID=OWN1.ID
AND D.PREDPR_ID=PR4.ID
AND M.DOG_ID=UD.DOG_ID
AND M.USL_NUMBER=UD.USL_NUMBER
AND M.DOG_ID=D2.ID
AND D2.PREDPR_ID=PR5.ID;


