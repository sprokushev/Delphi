--
-- V_OUT_PLAT_DBF  (View) 
--
CREATE OR REPLACE FORCE VIEW MASTER.V_OUT_PLAT_DBF
(NOM_SF, NOM_DOK, DATA_DOK, DATA_KVIT, SUMMA_DOK, 
 NOM_DOG, DATA_DOG, K_USL, KOD_PLAT, PRIM, 
 PRIZN_CEN, KATEG_PR, KOD_NFP, CENA_NFP, DATE_CEN, 
 VES, KOD_ZATAR, CEN_ZATAR, SUM_ZATAR, NACENKA, 
 SUM_NACEN, D_41, SUM_AKCIZ, D_191, D_67, 
 D_441, D_442, D_443, D_194, CPEC_PROD, 
 CPEC_TARIF, SUMMA_POR, TIP_OTGR, KOD_GROTP, KOD_POTR, 
 KOD_STAN, KOD_GD, FIO_ISPOL, M_VS, ERROR, 
 OLD_SF, OLD_NOM, OLD_DATA, DATA_BUXG, WRITE, 
 GR_DVZ, OGR_TAR, KOD_USL, KSOB_USL, SUM_NALIV, 
 NDC_NAL20, NDC_NAL03, NDC_VN20, NDC_VN03, NDC_TR20, 
 NDC_TR03, VID_OPL, KOL_DN, USL_PPZT, NDC_PPZT, 
 CN_PPZT, KOD_OTGR, VES_KOM, KOM_V, NDS_KOM, 
 NDF_KOM, CN_KOM, PATH, T_DATE, T_TIME, 
 VES_NAL, MESTO, M_KORR, G_KORR, G_KORR4, 
 K_VARPOST, VIDOG, DEN_SOD, NOM_ZD, NOM_ZV, 
 UN_CODE, MOSC_OUT, KOD_POST, KOD_SOB, SOB_GD, 
 TAX_SALE, PRICE_GET, SUM_PGET, NDS_PGET, GSM_PGET, 
 M_SS, Y_SS, PR_DIVIDE, NUM_SS, DATE_MOS, 
 NOM_R3, PROTO_NUM, PROTO_DATE, NO_AKCIZ, CENA_VOZN, 
 DOP_TARIF, NDC_DOPTAR)
AS 
SELECT /*+ RULE */ 
  NOM_SF, 
  BILLS.NOM_DOK, 
  DATE_VYP_SF as DATA_DOK, 
  BILLS.DATE_KVIT as DATA_KVIT, 
  MAX(BILLS.SUMMA_DOK) as SUMMA_DOK, 
  MAX(KLS_DOG.SHORT_NUMBER) as NOM_DOG, 
  MAX(KLS_DOG.DOG_DATE) as DATA_DOG, 
  MAX(NVL(USL_DOG.USL_NUMBER,1)) as K_USL, 
  MAX(KLS_DOG.PREDPR_ID) as KOD_PLAT, 
  MAX(NVL(BILLS.PRIM,' ')) as PRIM, 
  0 as PRIZN_CEN, 
  MAX(NVL(USL_DOG.CAT_CEN_ID,2)) as kateg_pr, 
  BILLS.PROD_ID_NPR as KOD_NFP, 
  MAX(CASE 
        WHEN BILLS.PROD_ID_NPR<'10100' AND BILLS.PROD_ID_NPR<>'10080' THEN CENA_BN 
	    WHEN BILLS.PROD_ID_NPR>='10100' AND BILL_POS_ID<10 THEN CENA_BN 
	    ELSE 0 
	  END) AS CENA_NFP, 
  TO_DATE(NULL) as DATE_CEN, 
  SUM(CASE 
        WHEN BILLS.PROD_ID_NPR<'10100' AND BILLS.PROD_ID_NPR<>'10080' THEN VES 
	    WHEN BILLS.PROD_ID_NPR>='10100' AND BILL_POS_ID<10 THEN VES 
	    ELSE 0 
	  END) AS VES, 
  ' ' as KOD_ZATAR, 
  0 as CEN_ZATAR, 
  0 as SUM_ZATAR, 
  MAX(NACENKA) as NACENKA, 
  SUM(DECODE(BILL_POS_ID,20,SUMMA,0)) AS SUM_NACEN, 
  SUM(DECODE(SIGN(BILL_POS_ID-10),-1,SUMMA_BN,0)) AS D_41, 
  SUM(DECODE(SIGN(BILL_POS_ID-10),-1,SUMMA_AKCIZ,0)) AS SUM_AKCIZ, 
  SUM(DECODE(SIGN(BILL_POS_ID-10),-1,SUMMA_NDS20,0)) AS D_191, 
  0 as D_67, 
  SUM(DECODE(BILL_POS_ID,10,SUMMA_BN,0)) AS D_441, 
  SUM(DECODE(BILL_POS_ID,12,SUMMA_BN,0)) AS D_442, 
  0 as D_443, 
  SUM(DECODE(BILL_POS_ID,10,SUMMA_NDS20,0)) AS D_194, 
  0 as cpec_prod, 
  0 as cpec_tarif, 
  MAX(BILLS.SUMMA_DOK) as SUMMA_POR, 
  MAX(NVL(KLS_VID_OTGR.LOAD_TYPE_ID,0)) as TIP_OTGR, 
  MAX(NVL(MONTH.GROTP_ID,8)) as kod_grotp, 
  MAX(NVL(MONTH.POLUCH_ID,KLS_DOG.PREDPR_ID)) as KOD_POTR, 
  MAX(NVL(KLS_STAN.STAN_KOD,0)) as KOD_STAN, 
  MAX(NVL(KLS_STAN.GDOR_ID,0)) as KOD_GD, 
  MAX(NVL(FIO_ISPOL,' ')) as FIO_ISPOL, 
  0 as m_vs, 
  0 as error, 
  MAX(NVL(OLD_NOM_SF,0)) as OLD_SF, 
  NVL(BILLS.OLD_NOM_DOK,0) as OLD_NOM, 
  TO_DATE(NULL) as OLD_DATA, 
  MAX(DATE_BUXG) as DATA_BUXG, 
  0 as WRITE, 
  ' ' as gr_dvz, 
  0 as ogr_tar, 
  MAX(DECODE(BILLS.IS_AGENT,1,1,8)) as kod_usl, 
  13 as KSOB_USL, 
  SUM(DECODE(BILL_POS_ID,11,SUMMA_BN,0)) AS sum_naliv, 
  SUM(DECODE(BILL_POS_ID,11,SUMMA_NDS20,0)) AS NDC_NAL20, 
  0 as ndc_nal03, 
  0 as ndc_vn20, 
  0 as ndc_vn03, 
  SUM(DECODE(BILL_POS_ID,12,SUMMA_NDS20,0)) AS NDC_TR20, 
  0 as ndc_tr03, 
  0 as vid_opl, 
  MAX(BILLS.KOL_DN) as KOL_DN, 
  0 as USL_PPZT, 
  0 as NDC_PPZT, 
  0 as CN_PPZT, 
  MAX(NVL(BILLS.NAZN_OTG_ID,0)) as KOD_OTGR, 
  0 as VES_KOM, 
  0 as KOM_V, 
  0 as NDS_KOM, 
  0 as NDF_KOM, 
  0 as CN_KOM, 
  ' ' as Path, 
  MAX(DATE_VYP_SF) as T_DATE, 
  '00:00:00' as T_TIME, 
  SUM(DECODE(SIGN(BILL_POS_ID-10),-1,VES,0)) AS VES_NAL, 
  0 as mesto, 
  0 as m_korr, 
  0 as g_korr, 
  0 as g_korr4, 
  13 as k_varpost, 
  MAX(kls_dog.VIDDOG_ID) as vidog, 
  0 as den_sod, 
  MAX(NVL(MONTH.NOM_ZD,' ')) as NOM_ZD, 
  ' ' as nom_zv, 
  TO_CHAR(BILLS.NOM_DOK) as un_code, 
  ' ' as MOSC_OUT, 
  0 as KOD_POST, 
  1 as KOD_SOB, 
  13 as SOB_GD, 
  0 as tax_sale, 
  0 as price_get, 
  0 as sum_pget, 
  0 as nds_pget, 
  0 as gsm_pget, 
  0 as m_ss, 
  0 as y_ss, 
  0 as pr_divide, 
  0 as num_ss, 
  MAX(DATE_MOS) as DATE_MOS, 
  NVL(BILLS.isu_kod,' ') as nom_r3, 
  MAX(NVL(BILLS.PROTO_NUM,' ')) as PROTO_NUM, 
  MAX(BILLS.PROTO_DATE) as PROTO_DATE, 
  MAX(BILLS.NO_AKCIZ) as NO_AKCIZ, 
  0 as CENA_VOZN, 
  SUM(DECODE(BILL_POS_ID,13,SUMMA_BN,0)) AS DOP_TARIF, 
  SUM(DECODE(BILL_POS_ID,13,SUMMA_NDS20,0)) AS NDC_DOPTAR 
FROM BILLS,BILL_POS,MONTH,KLS_DOG,KLS_STAN,USL_DOG,KLS_VID_OTGR 
WHERE BILLS.DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy') 
  AND BILL_POS.NOM_DOK=BILLS.NOM_DOK 
  AND BILLS.DOG_ID=KLS_DOG.ID 
  AND BILLS.NOM_ZD=MONTH.NOM_ZD(+) 
  AND MONTH.STAN_ID=KLS_STAN.ID(+) 
  AND MONTH.DOG_ID=USL_DOG.DOG_ID(+) 
  AND MONTH.USL_NUMBER=USL_DOG.USL_NUMBER(+) 
  AND MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR(+) 
GROUP BY 
  NOM_SF, 
  BILLS.NOM_DOK, 
  NVL(BILLS.OLD_NOM_DOK,0), 
  DATE_VYP_SF, 
  BILLS.DATE_KVIT, 
  BILLS.PROD_ID_NPR, 
  NVL(BILLS.ISU_KOD,' ');


