--
-- V_PRIL_CIST_ALL_BEFORE  (View) 
--
CREATE OR REPLACE FORCE VIEW MASTER.V_PRIL_CIST_ALL_BEFORE
(BEG_DATE, END_DATE, MON_KVIT, NUM_5_DAY, IS_KORR, 
 IS_AGENT, PLAT_ID, PLAT_NAME, DOG_ID, DOG_NUMBER, 
 DOG_DATE, DATE_KVIT, DATE_MOS, NOM_DOK, ORIG_NOM_SF, 
 OLD_NOM_DOK, OLD_NOM_SF, DATE_VYP_SF, PROD_ID_NPR, PROD_NAME, 
 PROD_EDIZ, KVIT_ID, VES, NUM_KVIT, NUM_CIST, 
 CENA_BN, CENA, SUMMA_PROD_BN, SUMMA_PROD_NDS, SUMMA_PROD, 
 SUMMA_AGEN, SUMMA_AGEN_NDS, SUMMA_VOZN_11_BN, SUMMA_VOZN_12_BN, SUMMA_VOZN_BN, 
 SUMMA_TARIF, SUMMA_TARIF_NDS, SUMMA_OHRANA, SUMMA_OHRANA_NDS, TARIF_MPS, 
 TARIF_KVIT, SUMMA_RAZN_BN, NACENKA, SUMMA_STRAH, SUMMA_DOK, 
 SUMMA_DOK_NDS, NUM_STRAH, USL_SUM, VAGOWN_TYP_ID, VID_USL_ID)
AS 
SELECT
  -- Счета без отгрузки
  r.BEGIN_DATE AS BEG_DATE, -- Отетный период
  r.END_DATE AS END_DATE, -- Отчетный период
  TRUNC(BILLS.DATE_KVIT,'MONTH') as MON_KVIT, -- месяц отгрузки 
  TO_NUMBER(TO_CHAR(BILLS.date_mos,'MM'))*100+BILLS.NUM_5_DAY AS NUM_5_DAY, -- Отчетная пятидневка
  DECODE(TRUNC(BILLS.DATE_KVIT,'MONTH'),TRUNC(BILLS.DATE_MOS,'MONTH'),0,TO_NUMBER(TO_CHAR(BILLS.date_kvit,'MM'))*100+BILLS.KORR_5_DAY) AS IS_KORR, -- Какая пятидневка корректируется
  BILLS.IS_AGENT, 
  KLS_DOG.PREDPR_ID AS PLAT_ID,
  PLAT.SF_NAME AS PLAT_NAME,
  BILLS.DOG_ID AS DOG_ID,
  KLS_DOG.DOG_NUMBER AS DOG_NUMBER,
  KLS_DOG.DOG_DATE AS DOG_DATE,
  BILLS.DATE_KVIT,
  BILLS.DATE_MOS,
  BILLS.NOM_DOK,
  BILLS.NOM_SF AS ORIG_NOM_SF,
  NVL(BILLS.OLD_NOM_DOK,0) AS OLD_NOM_DOK,
  Get_Old_Sf(BILLS.NOM_DOK,BILLS.NOM_SF,BILLS.OLD_NOM_DOK,BILLS.OLD_NOM_SF) AS OLD_NOM_SF,
  BILLS.DATE_VYP_SF,
  KLS_PROD.ID_NPR AS PROD_ID_NPR,
  KLS_PROD.SF_NAME AS PROD_NAME,
  KLS_PROD.ED_IZ as PROD_EDIZ,
  0 AS KVIT_ID,
  NVL(b_p.ves,0) AS VES,
  0 AS NUM_KVIT,
  ' ' AS NUM_CIST,
  NVL(b_p.cena_bn,0) AS CENA_BN,
  ROUND(NVL(b_p.cena_bn,0)*(100+For_Bills.GetNDSValue(BILLS.date_kvit))/100,2) AS CENA,
  NVL(b_p.summa_prod_bn,0) AS SUMMA_PROD_BN,
  NVL(b_p.summa_prod_nds,0) AS SUMMA_PROD_NDS,
  NVL(b_p.summa_prod,0) AS SUMMA_PROD,
  NVL(b_p.summa_agen,0) AS SUMMA_AGEN,
  NVL(b_p.summa_agen_nds,0) AS SUMMA_AGEN_NDS,
  0 AS SUMMA_VOZN_11_BN,
  0 AS SUMMA_VOZN_12_BN,
  0 AS SUMMA_VOZN_BN,
  NVL(b_p.summa_tarif,0) AS SUMMA_TARIF,
  NVL(b_p.summa_tarif_nds,0) AS SUMMA_TARIF_NDS,
  NVL(b_p.summa_ohrana,0) AS SUMMA_OHRANA,
  NVL(b_p.summa_ohrana_nds,0) AS SUMMA_OHRANA_NDS,
  0 AS TARIF_MPS,
  0 AS TARIF_KVIT,
  0 AS SUMMA_RAZN_BN,
  NVL(b_p.NACENKA,0) AS NACENKA,
  NVL(b_p.summa_strah,0) AS SUMMA_STRAH,
  NVL(b_p.summa_dok,0) AS SUMMA_DOK,
  NVL(b_p.summa_dok_nds,0) AS SUMMA_DOK_NDS,
  DECODE(NVL(b_p.summa_strah,0),0,' ',TO_CHAR(BILLS.NOM_SF-100000)) AS NUM_STRAH,
  NVL(DECODE(BILLS.IS_AGENT,2,USL_DOG.USL_SUM_AREND,USL_DOG.USL_SUM),0) AS USL_SUM,
  NULL AS VAGOWN_TYP_ID,
  USL_DOG.VID_USL_ID
FROM (select * from V_MASTER_REPORTS where UPPER(REPORT_FILE)='PRIL_AGENT_2006.XLS') r,
  BILLS,
  (
   SELECT /*+ RULE */
     BILL_POS.NOM_DOK,
  DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.PROD_ID_NPR,BILLS.PROD_ID_NPR) AS PROD_ID_NPR,
  MAX(BILL_POS.NACENKA) AS NACENKA,
  MAX(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.CENA_BN,0)) AS cena_bn,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.SUMMA-BILL_POS.SUMMA_NDS20,0)) AS summa_prod_bn,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.SUMMA_NDS20,0)) AS summa_prod_nds,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.SUMMA,0)) AS summa_prod,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.VES,0)) AS ves,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA,12,BILL_POS.SUMMA,0)) AS summa_agen,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA_NDS20,12,BILL_POS.SUMMA_NDS20,0)) AS summa_agen_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA-BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_11_bn,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA,0)) AS summa_vozn_11,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_11_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,12,BILL_POS.SUMMA-BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_12_bn,
  SUM(DECODE(BILL_POS.BILL_POS_ID,12,BILL_POS.SUMMA,0)) AS summa_vozn_12,
  SUM(DECODE(BILL_POS.BILL_POS_ID,12,BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_12_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,10,BILL_POS.SUMMA,0)) AS summa_tarif,
  SUM(DECODE(BILL_POS.BILL_POS_ID,10,BILL_POS.SUMMA_NDS20,0)) AS summa_tarif_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,13,BILL_POS.SUMMA,0)) AS summa_ohrana,
  SUM(DECODE(BILL_POS.BILL_POS_ID,13,BILL_POS.SUMMA_NDS20,0)) AS summa_ohrana_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,20,BILL_POS.SUMMA,0)) AS summa_strah,
  SUM(BILL_POS.SUMMA_NDS20) AS summa_dok_nds,
  SUM(BILL_POS.SUMMA) AS summa_dok
    FROM (select * from V_MASTER_REPORTS where UPPER(REPORT_FILE)='PRIL_AGENT_2006.XLS') r,
       BILLS,BILL_POS
    WHERE BILL_POS.NOM_DOK=BILLS.nom_dok
   AND BILLS.DATE_KVIT BETWEEN r.BEGIN_DATE AND r.END_DATE
   AND BILLS.PROD_ID_NPR NOT IN ('10003','10006','10009','10041','10042')
   AND BILLS.PROD_ID_NPR<='10100' AND BILLS.PROD_ID_NPR<>'10080' 
 GROUP BY
   BILL_POS.NOM_DOK
   ,DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.PROD_ID_NPR,BILLS.PROD_ID_NPR)
    ) b_p,
  KLS_PROD, KLS_DOG, KLS_PREDPR PLAT, USL_DOG
WHERE b_p.NOM_DOK=BILLS.NOM_DOK
  AND b_p.PROD_ID_NPR = KLS_PROD.ID_NPR
  AND BILLS.DOG_ID = KLS_DOG.ID
  AND KLS_DOG.PREDPR_ID = PLAT.ID
  AND BILLS.DOG_ID=USL_DOG.DOG_ID (+)
  AND BILLS.USL_NUMBER=USL_DOG.USL_NUMBER (+)
  -- Условия отбора
  AND BILLS.DATE_KVIT BETWEEN r.BEGIN_DATE AND r.END_DATE
  AND BILLS.PROD_ID_NPR NOT IN ('10003','10006','10009','10041','10042')
  AND BILLS.PROD_ID_NPR='10001'  
  AND BILLS.IS_AGENT IN (2,4,5)
--  AND KLS_DOG.DOG_NUMBER LIKE r.DOG_NUMBER
--
UNION ALL

-- Вознаграждение + продукт + страховка (по DATE_KVIT)
SELECT /*+ RULE */
  r.BEGIN_DATE AS BEG_DATE, -- Отетный период
  r.END_DATE AS END_DATE, -- Отчетный период
  TRUNC(BILLS.DATE_KVIT,'MONTH') as MON_KVIT, -- месяц отгрузки 
  TO_NUMBER(TO_CHAR(BILLS.date_mos,'MM'))*100+BILLS.NUM_5_DAY AS NUM_5_DAY, -- Отчетная пятидневка
  DECODE(TRUNC(BILLS.DATE_KVIT,'MONTH'),TRUNC(BILLS.DATE_MOS,'MONTH'),0,TO_NUMBER(TO_CHAR(BILLS.date_kvit,'MM'))*100+BILLS.KORR_5_DAY) AS IS_KORR, -- Какая пятидневка корректируется
  BILLS.IS_AGENT,
  KLS_DOG.PREDPR_ID AS PLAT_ID,
  PLAT.SF_NAME AS PLAT_NAME,
  BILLS.DOG_ID AS DOG_ID,
  KLS_DOG.DOG_NUMBER AS DOG_NUMBER,
  KLS_DOG.DOG_DATE AS DOG_DATE,
  BILLS.DATE_KVIT,
  BILLS.DATE_MOS,
  BILLS.NOM_DOK,
  BILLS.NOM_SF AS ORIG_NOM_SF,
  NVL(BILLS.OLD_NOM_DOK,0) AS OLD_NOM_DOK,
  Get_Old_Sf(BILLS.NOM_DOK,BILLS.NOM_SF,BILLS.OLD_NOM_DOK,BILLS.OLD_NOM_SF) AS OLD_NOM_SF,
  BILLS.DATE_VYP_SF AS DATE_VYP_SF,
  KLS_PROD.ID_NPR AS PROD_ID_NPR,
  KLS_PROD.SF_NAME AS PROD_NAME,
  KLS_PROD.ED_IZ AS PROD_EDIZ,
  KVIT.ID as KVIT_ID,
  KVIT.VES_BRUTTO AS VES,
  KVIT.NUM_KVIT,
  DECODE(MONTH.LOAD_ABBR,'САМ',KVIT.NUM_DOVER,KVIT.NUM_CIST) AS NUM_CIST,
  NVL(KVIT.CENA,0) AS CENA_BN,
  ROUND(NVL(KVIT.CENA,0)*(100+For_Bills.GetNDSValue(BILLS.date_kvit))/100,2) AS CENA,
  NVL(KVIT.SUM_PROD,0) AS SUMMA_PROD_BN,
  NVL(KVIT.SUM_PROD_NDS,0) AS SUMMA_PROD_NDS,
  NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0) AS SUMMA_PROD,
  NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0) AS SUMMA_AGEN,
  NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0) AS SUMMA_AGEN_NDS,
  NVL(KVIT.SUM_VOZN11,0) AS SUMMA_VOZN_11_BN,
  NVL(KVIT.SUM_VOZN12,0) AS SUMMA_VOZN_12_BN,
  (CASE
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)=0 THEN 0
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)<>0 THEN NVL(KVIT.sum_vozn12,0)-(NVL(KVIT.TARIF_ALT,0)+NVL(KVIT.TARIF,0))
  ELSE NVL(KVIT.sum_vozn11,0)
   END) AS SUMMA_VOZN_BN,
  0 /*NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0)*/ AS SUMMA_TARIF,
  0 /*NVL(KVIT.TARIF_NDS,0)*/ AS SUMMA_TARIF_NDS,
  0 /*NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0)*/ AS SUMMA_OHRANA,
  0 /*NVL(KVIT.TARIF_GUARD_NDS,0)*/ AS SUMMA_OHRANA_NDS,
  NVL(KVIT.TARIF_ALT,0) AS TARIF_MPS,
  NVL(KVIT.TARIF,0) AS TARIF_KVIT,
  DECODE(NVL(KVIT.sum_vozn12,0),0,0,NVL(KVIT.TARIF_ALT,0)-NVL(KVIT.TARIF,0)) AS SUMMA_RAZN_BN,
  NVL(KVIT.NACENKA,0) AS NACENKA,
  NVL(KVIT.SUM_STRAH,0) AS SUMMA_STRAH,
  NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0)+
    NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)+
 /*NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0)+
 NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0)+*/
 NVL(KVIT.SUM_STRAH,0) AS SUMMA_DOK,
  NVL(KVIT.SUM_PROD_NDS,0)+
    NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)/*+
 NVL(KVIT.TARIF_NDS,0)+
 NVL(KVIT.TARIF_GUARD_NDS,0)*/ AS SUMMA_DOK_NDS,
  DECODE(NVL(KVIT.SUM_STRAH,0),0,' ',TO_CHAR(BILLS.NOM_SF-100000)) AS NUM_STRAH,
  NVL(DECODE(BILLS.IS_AGENT,2,USL_DOG.USL_SUM_AREND,USL_DOG.USL_SUM),0) AS USL_SUM,
  TO_NUMBER(CASE
              WHEN MONTH.LOAD_ABBR In ('САМ','РЕЗ','ТРУ') THEN NULL
     WHEN KLS_VAGOWNER.VAGOWN_TYP_ID=0 THEN KLS_VAGOWNER.VAGOWN_TYP_ID
     WHEN KLS_VAGOWNER.OWNER_ID IN (2,33) THEN 1
     ELSE 2
   END) AS VAGOWN_TYP_ID,
  USL_DOG.VID_USL_ID
FROM (select * from V_MASTER_REPORTS where UPPER(REPORT_FILE)='PRIL_AGENT_2006.XLS') r,
  BILLS, KVIT, KLS_DOG, KLS_PREDPR PLAT,
  KLS_PROD, MONTH, USL_DOG, KLS_VAGOWNER, KLS_VID_OTGR
WHERE BILLS.DOG_ID = KLS_DOG.ID
  AND KLS_DOG.PREDPR_ID = PLAT.ID
  AND BILLS.NOM_DOK = KVIT.BILL_ID
  AND KVIT.PROD_ID_NPR = KLS_PROD.ID_NPR
  AND KVIT.VAGOWNER_ID=KLS_VAGOWNER.ID(+)
  AND BILLS.NOM_ZD = MONTH.NOM_ZD
  AND MONTH.DOG_ID=USL_DOG.DOG_ID (+)
  AND MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)
  -- Условия отбора
  AND KVIT.DATE_KVIT BETWEEN r.BEGIN_DATE AND r.END_DATE
  AND BILLS.IS_AGENT IN (2,4,5)
--  AND KLS_DOG.DOG_NUMBER LIKE r.DOG_NUMBER
  AND MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR  
  AND KLS_VID_OTGR.LOAD_TYPE_ID IN (1,4,6)
  
--
UNION ALL

-- Тариф (по дате счета от РЖД)
SELECT /*+ RULE */
  r.BEGIN_DATE AS BEG_DATE, -- Отетный период
  r.END_DATE AS END_DATE, -- Отчетный период
  TRUNC(BILLS.DATE_KVIT,'MONTH') as MON_KVIT, -- месяц отгрузки 
  TO_NUMBER(TO_CHAR(BILLS.date_mos,'MM'))*100+BILLS.NUM_5_DAY AS NUM_5_DAY, -- Отчетная пятидневка
  DECODE(TRUNC(BILLS.DATE_KVIT,'MONTH'),TRUNC(BILLS.DATE_MOS,'MONTH'),0,TO_NUMBER(TO_CHAR(BILLS.date_kvit,'MM'))*100+BILLS.KORR_5_DAY) AS IS_KORR, -- Какая пятидневка корректируется
  BILLS.IS_AGENT,
  KLS_DOG.PREDPR_ID AS PLAT_ID,
  PLAT.SF_NAME AS PLAT_NAME,
  BILLS.DOG_ID AS DOG_ID,
  KLS_DOG.DOG_NUMBER AS DOG_NUMBER,
  KLS_DOG.DOG_DATE AS DOG_DATE,
  BILLS.DATE_KVIT,
  BILLS.DATE_MOS,
  BILLS.NOM_DOK,
  BILLS.NOM_SF AS ORIG_NOM_SF,
  NVL(BILLS.OLD_NOM_DOK,0) AS OLD_NOM_DOK,
  Get_Old_Sf(BILLS.NOM_DOK,BILLS.NOM_SF,BILLS.OLD_NOM_DOK,BILLS.OLD_NOM_SF) AS OLD_NOM_SF,
  BILLS.DATE_VYP_SF AS DATE_VYP_SF,
  KLS_PROD.ID_NPR AS PROD_ID_NPR,
  KLS_PROD.SF_NAME AS PROD_NAME,
  KLS_PROD.ED_IZ AS PROD_EDIZ,
  KVIT.ID as KVIT_ID,
  KVIT.VES_BRUTTO AS VES,
  KVIT.NUM_KVIT,
  DECODE(MONTH.LOAD_ABBR,'САМ',KVIT.NUM_DOVER,KVIT.NUM_CIST) AS NUM_CIST,
  NVL(KVIT.CENA,0) AS CENA_BN,
  ROUND(NVL(KVIT.CENA,0)*(100+For_Bills.GetNDSValue(BILLS.date_kvit))/100,2) AS CENA,
  0 /*NVL(KVIT.SUM_PROD,0)*/ AS SUMMA_PROD_BN,
  0 /*NVL(KVIT.SUM_PROD_NDS,0) */ AS SUMMA_PROD_NDS,
  0 /*NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0)*/ AS SUMMA_PROD,
  0 /*NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)*/ AS SUMMA_AGEN,
  0 /*NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)*/ AS SUMMA_AGEN_NDS,
  0 /*NVL(KVIT.SUM_VOZN11,0)*/ AS SUMMA_VOZN_11_BN,
  0 /*NVL(KVIT.SUM_VOZN12,0)*/ AS SUMMA_VOZN_12_BN,
  0 /*(CASE
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)=0 THEN 0
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)<>0 THEN NVL(KVIT.sum_vozn12,0)-(NVL(KVIT.TARIF_ALT,0)+NVL(KVIT.TARIF,0))
  ELSE NVL(KVIT.sum_vozn11,0)
   END)*/ AS SUMMA_VOZN_BN,
  NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0) AS SUMMA_TARIF,
  NVL(KVIT.TARIF_NDS,0) AS SUMMA_TARIF_NDS,
  NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_OHRANA,
  NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_OHRANA_NDS,
  0 /*NVL(KVIT.TARIF_ALT,0)*/ AS TARIF_MPS,
  0 /*NVL(KVIT.TARIF,0)*/ AS TARIF_KVIT,
  0 /*DECODE(NVL(KVIT.sum_vozn12,0),0,0,NVL(KVIT.TARIF_ALT,0)-NVL(KVIT.TARIF,0))*/ AS SUMMA_RAZN_BN,
  NVL(KVIT.NACENKA,0) AS NACENKA,
  0 /*NVL(KVIT.SUM_STRAH,0)*/ AS SUMMA_STRAH,
  /*NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0)+
    NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)+*/
 NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0)+
 NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0)/*+
 NVL(KVIT.SUM_STRAH,0)*/ AS SUMMA_DOK,
  /*NVL(KVIT.SUM_PROD_NDS,0)+
    NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)+*/
 NVL(KVIT.TARIF_NDS,0)+
 NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_DOK_NDS,
  DECODE(NVL(KVIT.SUM_STRAH,0),0,' ',TO_CHAR(BILLS.NOM_SF-100000)) AS NUM_STRAH,
  NVL(DECODE(BILLS.IS_AGENT,2,USL_DOG.USL_SUM_AREND,USL_DOG.USL_SUM),0) AS USL_SUM,
  TO_NUMBER(CASE
              WHEN MONTH.LOAD_ABBR In ('САМ','РЕЗ','ТРУ') THEN NULL
     WHEN KLS_VAGOWNER.VAGOWN_TYP_ID=0 THEN KLS_VAGOWNER.VAGOWN_TYP_ID
     WHEN KLS_VAGOWNER.OWNER_ID IN (2,33) THEN 1
     ELSE 2
   END) AS VAGOWN_TYP_ID,
  USL_DOG.VID_USL_ID
FROM (select * from V_MASTER_REPORTS where UPPER(REPORT_FILE)='PRIL_AGENT_2006.XLS') r,
  BILLS, KVIT, KLS_DOG, KLS_PREDPR PLAT,
  KLS_PROD, MONTH, USL_DOG, KLS_VAGOWNER, KLS_VID_OTGR,
(SELECT distinct nom_perech,dat_perech 
   FROM (select * from V_MASTER_REPORTS where UPPER(REPORT_FILE)='PRIL_AGENT_2006.XLS') r,REESTR_RAIL_RGD_SF 
  WHERE DATE_SCH BETWEEN r.BEGIN_DATE AND r.END_DATE -- По дате счета РЖД
    AND r21=95) rail_sf  
WHERE BILLS.DOG_ID = KLS_DOG.ID
  AND KLS_DOG.PREDPR_ID = PLAT.ID
  AND BILLS.NOM_DOK = KVIT.BILL_ID
  AND KVIT.PROD_ID_NPR = KLS_PROD.ID_NPR
  AND KVIT.VAGOWNER_ID=KLS_VAGOWNER.ID(+)
  AND BILLS.NOM_ZD = MONTH.NOM_ZD
  AND MONTH.DOG_ID=USL_DOG.DOG_ID (+)
  AND MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)
  AND KVIT.PERECH_TEXPD_DATE=rail_sf.dat_perech
  AND KVIT.PERECH_TEXPD_NUM=rail_sf.nom_perech
  -- Условия отбора
  AND BILLS.IS_AGENT IN (2,4,5)
--  AND KLS_DOG.DOG_NUMBER LIKE r.DOG_NUMBER
  AND MONTH.LOAD_ABBR=KLS_VID_OTGR.LOAD_ABBR  
  AND KLS_VID_OTGR.LOAD_TYPE_ID IN (1,4,6);


