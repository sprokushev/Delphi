--
-- V_LUKREP_SF_2005_BEFORE  (View) 
--
CREATE OR REPLACE FORCE VIEW MASTER.V_LUKREP_SF_2005_BEFORE
(NUM_5_DAY, IS_KORR, IS_AGENT, SOBSTV, PLAT_ID, 
 PLAT_INN, PLAT_NAME, PLAT_ADDR, DOG_ID, DOG_NUMBER, 
 DOG_DATE, DATE_KVIT, DATE_MOS, DATE_CHN_SOB, NOM_DOK, 
 NOM_SF, ORIG_NOM_SF, OLD_NOM_DOK, OLD_NOM_SF, NPO_SF, 
 DATE_VYP_SF, GR_NPR_ID, GR_NPR_NAME, PROD_ID_NPR, PROD_NAME, 
 PROD_EDIZ, KVIT_ID, VES, VES_KVIT, CNT_KVIT, 
 SVED_NUM, NUM_KVIT, NOM_AKT, NUM_CIST, STANOTP_ID, 
 STAN_NAME, HRAN_ID, HRAN_NAME, POLUCH_ID, POLUCH_NAME, 
 POLUCH_ADDR, IS_SF, CENA_BN, CENA, SUMMA_PROD_BN, 
 SUMMA_PROD_NDS, SUMMA_PROD, SUMMA_AGEN, SUMMA_AGEN_NDS, SUMMA_VOZN_11_BN, 
 SUMMA_VOZN_12_BN, SUMMA_VOZN_BN, SUMMA_TARIF, SUMMA_TARIF_NDS, SUMMA_OHRANA, 
 SUMMA_OHRANA_NDS, TARIF_MPS, TARIF_KVIT, SUMMA_RAZN_BN, NACENKA, 
 SUMMA_STRAH, SUMMA_DOK, SUMMA_DOK_NDS, PRICE_PROTOKOL, KOL_DN, 
 NAZN_OTG_ID, RAST, NUM_STRAH, USL_SUM, VAGOWN_TYP_ID, 
 KORR_PROD, VID_USL_ID, DATE_VIR)
AS 
SELECT /* ORDERED  INDEX(BILLS)  USE_NL(BILL,MONTH,KLS_DOG,KVIT,KV,STAN,STANOTP,POTREB,PLAT,POLUCH,KLS_PROD,GR_PROD,USL_DOG,KLS_VAGOWNER) */
  TO_NUMBER(TO_CHAR(BILLS.date_mos,'MM'))*100+BILLS.NUM_5_DAY AS NUM_5_DAY,
  DECODE(TRUNC(BILLS.DATE_KVIT,'MONTH'),TRUNC(BILLS.DATE_MOS,'MONTH'),0,TO_NUMBER(TO_CHAR(BILLS.date_kvit,'MM'))*100+BILLS.KORR_5_DAY) AS IS_KORR,
  BILLS.IS_AGENT,
  (CASE
  WHEN BILLS.PROD_ID_NPR<'10100' AND BILLS.PROD_ID_NPR<>'10080' THEN 5
  ELSE 1 /*NVL(KV.SOBSTV,1)*/
   END) AS SOBSTV,
  KLS_DOG.PREDPR_ID AS PLAT_ID,
  PLAT.INN AS PLAT_INN,
  PLAT.SF_NAME AS PLAT_NAME,
  PLAT.CITY_J || ',' || PLAT.ADDRESS_J AS PLAT_ADDR,
  BILLS.DOG_ID AS DOG_ID,
  KLS_DOG.DOG_NUMBER AS DOG_NUMBER,
  KLS_DOG.DOG_DATE AS DOG_DATE,
  BILLS.DATE_KVIT,
  BILLS.DATE_MOS,
  BILLS.DATE_KVIT AS DATE_CHN_SOB,
  BILLS.NOM_DOK,
  BILLS.NOM_SF,
  BILLS.NOM_SF AS ORIG_NOM_SF,
  NVL(BILLS.OLD_NOM_DOK,0) AS OLD_NOM_DOK,
  Get_Old_Sf(BILLS.NOM_DOK,BILLS.NOM_SF,BILLS.OLD_NOM_DOK,BILLS.OLD_NOM_SF) AS OLD_NOM_SF,
  BILLS.NPO_SF,
  BILLS.DATE_VYP_SF AS DATE_VYP_SF,
  gr_prod.ID_NPR AS gr_npr_id,
  gr_prod.NAME_NPR AS gr_npr_name,
  KLS_PROD.ID_NPR AS PROD_ID_NPR,
  KLS_PROD.SF_NAME AS PROD_NAME,
  KLS_PROD.ED_IZ AS PROD_EDIZ,
  KVIT.ID,
  KVIT.VES_BRUTTO AS VES,
  KVIT.VES_BRUTTO AS VES_KVIT,
  1 AS CNT_KVIT,
  KVIT.SVED_NUM,
  KVIT.NUM_KVIT,
  (CASE
 WHEN BILLS.IS_AGENT=4 THEN TO_CHAR(KVIT.NUM_AKT)
 ELSE ''
   END) AS NOM_AKT,
  DECODE(MONTH.LOAD_ABBR,'—¿Ã',KVIT.NUM_DOVER,KVIT.NUM_CIST) AS NUM_CIST,
  MONTH.STANOTP_ID,
  DECODE(MONTH.LOAD_ABBR,'—¿Ã','—¿ÃŒ¬€¬Œ«',DECODE(STANOTP.ID,1,'–≈«≈–¬”¿–',STANOTP.STAN_NAME)) AS STAN_NAME,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.ID,8),8) AS HRAN_ID,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.SF_NAME,'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"'),'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"') AS HRAN_NAME,
  MONTH.POLUCH_ID,
  POLUCH.SF_NAME AS POLUCH_NAME,
  POLUCH.CITY_P || ',' || POLUCH.ADDRESS_P AS POLUCH_ADDR,
  0 AS IS_SF,
  NVL(KVIT.CENA,0) AS CENA_BN,
  ROUND(NVL(KVIT.CENA,0)*(100+For_Bills.GetNDSValue(BILLS.date_kvit))/100,2) AS CENA,
  NVL(KVIT.SUM_PROD,0) AS SUMMA_PROD_BN,
  NVL(KVIT.SUM_PROD_NDS,0) AS SUMMA_PROD_NDS,
  NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0) AS SUMMA_PROD,
  NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0) AS SUMMA_AGEN,
  NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0) AS SUMMA_AGEN_NDS,
  NVL(KVIT.SUM_VOZN11,0) AS SUMMA_VOZN_11_BN,
  NVL(KVIT.SUM_VOZN12,0) AS SUMMA_VOZN_12_BN,
  (CASE
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)=0 THEN 0
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)<>0 THEN NVL(KVIT.sum_vozn12,0)-(NVL(KVIT.TARIF_ALT,0)+NVL(KVIT.TARIF,0))
  ELSE NVL(KVIT.sum_vozn11,0)
   END) AS SUMMA_VOZN_BN,
  NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0) AS SUMMA_TARIF,
  NVL(KVIT.TARIF_NDS,0) AS SUMMA_TARIF_NDS,
  NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_OHRANA,
  NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_OHRANA_NDS,
  NVL(KVIT.TARIF_ALT,0) AS TARIF_MPS,
  NVL(KVIT.TARIF,0) AS TARIF_KVIT,
  DECODE(NVL(KVIT.sum_vozn12,0),0,0,NVL(KVIT.TARIF_ALT,0)-NVL(KVIT.TARIF,0)) AS SUMMA_RAZN_BN,
  NVL(KVIT.NACENKA,0) AS NACENKA,
  NVL(KVIT.SUM_STRAH,0) AS SUMMA_STRAH,
  NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0)+
    NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)+
 NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0)+
 NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0)+
 NVL(KVIT.SUM_STRAH,0) AS SUMMA_DOK,
  NVL(KVIT.SUM_PROD_NDS,0)+
    NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)+
 NVL(KVIT.TARIF_NDS,0)+
 NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_DOK_NDS,
  DECODE(BILLS.PROD_ID_NPR,'10080',KV.PROTO_NUM,BILLS.PROTO_NUM) || ' ÓÚ ' || TO_CHAR(DECODE(BILLS.PROD_ID_NPR,'10080',KV.PROTO_DATE,BILLS.PROTO_DATE),'dd.mm.yy') || '„.' AS PROTO_NUM,
  BILLS.KOL_DN,
  MONTH.NAZN_OTG_ID,
  STAN.RAST,
  DECODE(NVL(KVIT.SUM_STRAH,0),0,' ',TO_CHAR(BILLS.NOM_SF-100000)) AS NUM_STRAH,
  NVL(DECODE(BILLS.IS_AGENT,2,USL_DOG.USL_SUM_AREND,USL_DOG.USL_SUM),0) AS USL_SUM,
  TO_NUMBER(CASE
              WHEN MONTH.LOAD_ABBR In ('—¿Ã','–≈«','“–”') THEN NULL
     WHEN KLS_VAGOWNER.VAGOWN_TYP_ID=0 THEN KLS_VAGOWNER.VAGOWN_TYP_ID
     WHEN KLS_VAGOWNER.OWNER_ID IN (2,33) THEN 1
     ELSE 2
   END) AS VAGOWN_TYP_ID,
  BILLS.KORR_PROD,
  USL_DOG.VID_USL_ID,
--  KVIT.DATE_VIR
  BILLS.DATE_KVIT AS DATE_VIR
FROM BILLS, KLS_DOG, KLS_PREDPR PLAT,
  (
   SELECT /*  */
       a.BILL_ID,
    a.PROD_ID_NPR,
--    a.DATE_VIR,
--      DECODE(a.OWNERSHIP_ID,1,1,3) AS SOBSTV,
    MAX(a.PROTO_NUM) AS PROTO_NUM,
    MAX(a.PROTO_DATE) AS PROTO_DATE,
    COUNT(*) AS CNT,
    SUM(VES_BRUTTO) AS VES
     FROM
  (SELECT /*+ INDEX(kvit KVIT_DATE_KVIT_BILLS_I) */ BILL_ID,PROD_ID_NPR,PROTO_NUM,PROTO_DATE,VES_BRUTTO FROM KVIT
   WHERE DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
   UNION ALL
   SELECT /*+ INDEX(dop_kvit) */ BILL_ID,PROD_ID_NPR,PROTO_NUM,PROTO_DATE,VES_BRUTTO FROM DOP_KVIT
   WHERE DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
  ) a
    GROUP BY a.BILL_ID,a.PROD_ID_NPR/*,a.DATE_VIR,DECODE(a.OWNERSHIP_ID,1,1,3)*/
 HAVING COUNT(*)>1 AND SUM(VES_BRUTTO)<>0
  ) KV,
  ( SELECT /*+ INDEX(kvit KVIT_DATE_KVIT_BILLS_I) */ * FROM KVIT
   WHERE DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
 UNION ALL
 SELECT /*+ INDEX(dop_kvit) */ * FROM DOP_KVIT
   WHERE DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
   )  KVIT,
  KLS_PROD, KLS_PROD gr_prod, MONTH, KLS_PREDPR POLUCH, KLS_STAN STANOTP, KLS_STAN STAN, KLS_PREDPR POTREB, USL_DOG, KLS_VAGOWNER
WHERE BILLS.DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
  AND BILLS.PROD_ID_NPR NOT IN ('10041')
  AND BILLS.DOG_ID = KLS_DOG.ID
  AND KLS_DOG.PREDPR_ID = PLAT.ID
  AND BILLS.NOM_DOK = KV.BILL_ID
  AND KV.BILL_ID = KVIT.BILL_ID
  AND KV.PROD_ID_NPR = KVIT.PROD_ID_NPR
--  AND KV.DATE_VIR=KVIT.DATE_VIR
--  AND KV.SOBSTV=DECODE(KVIT.OWNERSHIP_ID,1,1,3)
  AND KV.PROD_ID_NPR = KLS_PROD.ID_NPR
  AND KV.CNT<>1
  AND KLS_PROD.ID_GROUP_NPR = gr_prod.ID_NPR
  AND KVIT.VAGOWNER_ID=KLS_VAGOWNER.ID(+)
  AND BILLS.NOM_ZD = MONTH.NOM_ZD
  AND MONTH.POLUCH_ID = POLUCH.ID
  AND NVL(MONTH.POTREB_ID,MONTH.POLUCH_ID) = POTREB.ID
  AND MONTH.STANOTP_ID = STANOTP.ID
  AND MONTH.STAN_ID = STAN.ID
  AND MONTH.DOG_ID=USL_DOG.DOG_ID (+)
  AND MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)
--  and kvit.bill_id=6124876
--  and bills.nom_sf='100129'
--
UNION ALL
--
SELECT /*+ ORDERED INDEX(bills) USE_NL(b_p,KV,bills,PLAT, POLUCH, KLS_DOG, KLS_PROD, gr_prod, MONTH,STANOTP,STAN,POTREB, USL_DOG) */
  TO_NUMBER(TO_CHAR(BILLS.date_mos,'MM'))*100+BILLS.NUM_5_DAY AS NUM_5_DAY,
  DECODE(TRUNC(BILLS.DATE_KVIT,'MONTH'),TRUNC(BILLS.DATE_MOS,'MONTH'),0,TO_NUMBER(TO_CHAR(BILLS.date_kvit,'MM'))*100+BILLS.KORR_5_DAY) AS IS_KORR,
  BILLS.IS_AGENT,
  (CASE
  WHEN BILLS.PROD_ID_NPR<'10100' AND BILLS.PROD_ID_NPR<>'10080' THEN 5
  ELSE 1 /*NVL(KV.SOBSTV,1)*/
   END) AS SOBSTV,
  KLS_DOG.PREDPR_ID AS PLAT_ID,
  PLAT.INN AS PLAT_INN,
  PLAT.SF_NAME AS PLAT_NAME,
  PLAT.CITY_J || ',' || PLAT.ADDRESS_J AS PLAT_ADDR,
  BILLS.DOG_ID AS DOG_ID,
  KLS_DOG.DOG_NUMBER AS DOG_NUMBER,
  KLS_DOG.DOG_DATE AS DOG_DATE,
  BILLS.DATE_KVIT,
  BILLS.DATE_MOS,
  BILLS.DATE_KVIT AS DATE_CHN_SOB,
  BILLS.NOM_DOK,
  BILLS.NOM_SF,
  BILLS.NOM_SF AS ORIG_NOM_SF,
  NVL(BILLS.OLD_NOM_DOK,0) AS OLD_NOM_DOK,
  Get_Old_Sf(BILLS.NOM_DOK,BILLS.NOM_SF,BILLS.OLD_NOM_DOK,BILLS.OLD_NOM_SF) AS OLD_NOM_SF,
  BILLS.NPO_SF,
  BILLS.DATE_VYP_SF,
  NVL(gr_prod.ID_NPR,' ') AS gr_npr_id,
  NVL(gr_prod.NAME_NPR,' ') AS gr_npr_name,
  KLS_PROD.ID_NPR AS PROD_ID_NPR,
  KLS_PROD.SF_NAME AS PROD_NAME,
  KLS_PROD.ED_IZ,
  NVL(DECODE(NVL(KV.CNT,0),1,KV.ID,0),0) AS ID,
  NVL(KV.VES,NVL(b_p.ves,0)) AS VES,
  NVL(KV.VES,0) AS VES_KVIT,
  NVL(KV.CNT,0) AS CNT_KVIT,
  NVL(DECODE(NVL(KV.CNT,0),1,KV.SVED_NUM,0),0) AS SVED_NUM,
  NVL(DECODE(NVL(KV.CNT,0),1,KV.NUM_KVIT,0),0) AS NUM_KVIT,
  (CASE
 WHEN BILLS.IS_AGENT=4 THEN TO_CHAR(KV.NUM_AKT)
 ELSE ''
   END) AS NOM_AKT,
  NVL(DECODE(NVL(KV.CNT,0),1,DECODE(MONTH.LOAD_ABBR,'—¿Ã',KV.NUM_DOVER,KV.NUM_CIST),' '),' ') AS NUM_CIST,
  NVL(MONTH.STANOTP_ID,0) AS STANOTP_ID,
  NVL(DECODE(MONTH.LOAD_ABBR,'—¿Ã','—¿ÃŒ¬€¬Œ«',DECODE(STANOTP.ID,1,'–≈«≈–¬”¿–',STANOTP.STAN_NAME)),' ') AS STAN_NAME,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.ID,8),8) AS HRAN_ID,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.SF_NAME,'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"'),'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"') AS HRAN_NAME,
  NVL(MONTH.POLUCH_ID,0) AS POLUCH_ID,
  NVL(POLUCH.SF_NAME,' ') AS POLUCH_NAME,
  DECODE(NVL(MONTH.POLUCH_ID,0),0,' ',POLUCH.CITY_P || ',' || POLUCH.ADDRESS_P) AS POLUCH_ADDR,
  1 AS IS_SF,
  NVL(b_p.cena_bn,0) AS CENA_BN,
  ROUND(NVL(b_p.cena_bn,0)*(100+For_Bills.GetNDSValue(BILLS.date_kvit))/100,2) AS CENA,
  NVL(KV.SUMMA_PROD_BN,NVL(b_p.summa_prod_bn,0)) AS SUMMA_PROD_BN,
  NVL(KV.SUMMA_PROD_NDS,NVL(b_p.summa_prod_nds,0)) AS SUMMA_PROD_NDS,
  NVL(KV.SUMMA_PROD,NVL(b_p.summa_prod,0)) AS SUMMA_PROD,
  NVL(KV.SUMMA_AGEN,NVL(b_p.summa_agen,0)) AS SUMMA_AGEN,
  NVL(KV.SUMMA_AGEN_NDS,NVL(b_p.summa_agen_nds,0)) AS SUMMA_AGEN_NDS,
  NVL(KV.summa_vozn_11_bn,0) AS SUMMA_VOZN_11_BN,
  NVL(KV.summa_vozn_12_bn,0) AS SUMMA_VOZN_12_BN,
  (CASE
     WHEN NVL(KV.summa_vozn_11_bn,0)=0 AND NVL(KV.summa_vozn_12_bn,0)=0 THEN 0
  WHEN NVL(KV.summa_vozn_11_bn,0)=0 AND NVL(KV.summa_vozn_12_bn,0)<>0 THEN NVL(KV.summa_vozn_12_bn,0)-(NVL(kv.TARIF_MPS,0)+NVL(kv.TARIF_KVIT,0))
  ELSE NVL(KV.summa_vozn_11_bn,0)
   END) AS SUMMA_VOZN_BN,
  NVL(KV.summa_tarif,NVL(b_p.summa_tarif,0)) AS SUMMA_TARIF,
  NVL(KV.summa_tarif_nds,NVL(b_p.summa_tarif_nds,0)) AS SUMMA_TARIF_NDS,
  NVL(KV.summa_ohrana,NVL(b_p.summa_ohrana,0)) AS SUMMA_OHRANA,
  NVL(KV.summa_ohrana_nds,NVL(b_p.summa_ohrana_nds,0)) AS SUMMA_OHRANA_NDS,
  NVL(kv.TARIF_MPS,0) AS TARIF_MPS,
  NVL(kv.TARIF_KVIT,0) AS TARIF_KVIT,
  DECODE(NVL(KV.summa_vozn_12_bn,0),0,0,NVL(kv.TARIF_MPS,0)-NVL(kv.TARIF_KVIT,0)) AS SUMMA_RAZN_BN,
  NVL(b_p.NACENKA,0) AS NACENKA,
  NVL(KV.summa_strah,NVL(b_p.summa_strah,0)) AS SUMMA_STRAH,
  NVL(KV.summa_dok,NVL(b_p.summa_dok,0)) AS SUMMA_DOK,
  NVL(KV.summa_dok_nds,NVL(b_p.summa_dok_nds,0)) AS SUMMA_DOK_NDS,
  DECODE(BILLS.PROD_ID_NPR,'10080',KV.PROTO_NUM,BILLS.PROTO_NUM) || ' ÓÚ ' || TO_CHAR(DECODE(BILLS.PROD_ID_NPR,'10080',KV.PROTO_DATE,BILLS.PROTO_DATE),'dd.mm.yy') || '„.' AS PROTO_NUM,
  BILLS.kol_dn,
  MONTH.NAZN_OTG_ID,
  STAN.RAST,
  DECODE(NVL(b_p.summa_strah,0),0,' ',TO_CHAR(BILLS.NOM_SF-100000)) AS NUM_STRAH,
  NVL(DECODE(BILLS.IS_AGENT,2,USL_DOG.USL_SUM_AREND,USL_DOG.USL_SUM),0) AS USL_SUM,
--  TO_NUMBER(DECODE(MONTH.LOAD_ABBR,'—¿Ã',NULL,'–≈«',NULL,'“–”',NULL,KV.VAGOWN_TYP_ID)) AS VAGOWN_TYP_ID,
  TO_NUMBER(CASE
              WHEN MONTH.LOAD_ABBR In ('—¿Ã','–≈«','“–”') THEN NULL
     WHEN KV.VAGOWN_TYP_ID=0 THEN KV.VAGOWN_TYP_ID
     WHEN KV.OWNER_ID IN (2,33) THEN 1
     ELSE 2
   END) AS VAGOWN_TYP_ID,
  BILLS.KORR_PROD,
  USL_DOG.VID_USL_ID,
--  KV.DATE_VIR
  BILLS.DATE_KVIT AS DATE_VIR
FROM
  (
  SELECT /*+ ORDERED INDEX(bill_pos BILL_POS_DATE_REALIZ) USE_NL(bills,bill_pos) */
     BILL_POS.NOM_DOK,
  DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.PROD_ID_NPR,BILLS.PROD_ID_NPR) AS PROD_ID_NPR,
  MAX(BILL_POS.NACENKA) AS NACENKA,
  MAX(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.CENA_BN,0)) AS cena_bn,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.SUMMA-BILL_POS.SUMMA_NDS20,0)) AS summa_prod_bn,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.SUMMA_NDS20,0)) AS summa_prod_nds,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.SUMMA,0)) AS summa_prod,
  SUM(DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.VES,0)) AS ves,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA,12,BILL_POS.SUMMA,0)) AS summa_agen,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA_NDS20,12,BILL_POS.SUMMA_NDS20,0)) AS summa_agen_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA-BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_11_bn,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA,0)) AS summa_vozn_11,
  SUM(DECODE(BILL_POS.BILL_POS_ID,11,BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_11_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,12,BILL_POS.SUMMA-BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_12_bn,
  SUM(DECODE(BILL_POS.BILL_POS_ID,12,BILL_POS.SUMMA,0)) AS summa_vozn_12,
  SUM(DECODE(BILL_POS.BILL_POS_ID,12,BILL_POS.SUMMA_NDS20,0)) AS summa_vozn_12_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,10,BILL_POS.SUMMA,0)) AS summa_tarif,
  SUM(DECODE(BILL_POS.BILL_POS_ID,10,BILL_POS.SUMMA_NDS20,0)) AS summa_tarif_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,13,BILL_POS.SUMMA,0)) AS summa_ohrana,
  SUM(DECODE(BILL_POS.BILL_POS_ID,13,BILL_POS.SUMMA_NDS20,0)) AS summa_ohrana_nds,
  SUM(DECODE(BILL_POS.BILL_POS_ID,20,BILL_POS.SUMMA,0)) AS summa_strah,
  SUM(BILL_POS.SUMMA_NDS20) AS summa_dok_nds,
  SUM(BILL_POS.SUMMA) AS summa_dok
    FROM BILL_POS,BILLS
    WHERE BILL_POS.NOM_DOK=BILLS.nom_dok
   AND BILL_POS.DATE_REALIZ>=TO_DATE('01.01.2006','dd.mm.yyyy')
 GROUP BY
   BILL_POS.NOM_DOK
   ,DECODE(SIGN(BILL_POS.BILL_POS_ID-10),-1,BILL_POS.PROD_ID_NPR,BILLS.PROD_ID_NPR)
    ) b_p,
    (
  SELECT
    a.BILL_ID,
    a.PROD_ID_NPR,
--    a.DATE_VIR,
--      DECODE(a.OWNERSHIP_ID,1,1,3) AS SOBSTV,
    MIN(KLS_VAGOWNER.VAGOWN_TYP_ID) AS VAGOWN_TYP_ID,
    MIN(KLS_VAGOWNER.OWNER_ID) as OWNER_ID,
    COUNT(*) AS CNT,
    SUM(a.VES_BRUTTO) AS VES,
       SUM(NVL(a.SUM_PROD,0)) AS SUMMA_PROD_BN,
       SUM(NVL(a.SUM_PROD_NDS,0)) AS SUMMA_PROD_NDS,
       SUM(NVL(a.SUM_PROD_NDS,0)+NVL(a.SUM_PROD,0)) AS SUMMA_PROD,
       SUM(NVL(a.SUM_VOZN11,0)+NVL(a.SUM_VOZN12,0)+NVL(a.SUM_VOZN11_NDS,0)+NVL(a.SUM_VOZN12_NDS,0)) AS SUMMA_AGEN,
       SUM(NVL(a.SUM_VOZN11_NDS,0)+NVL(a.SUM_VOZN12_NDS,0)) AS SUMMA_AGEN_NDS,
       SUM(NVL(a.SUM_VOZN11,0)) AS SUMMA_VOZN_11_BN,
       SUM(NVL(a.SUM_VOZN12,0)) AS SUMMA_VOZN_12_BN,
       SUM(NVL(a.TARIF,0)+NVL(a.TARIF_NDS,0)) AS SUMMA_TARIF,
       SUM(NVL(a.TARIF_NDS,0)) AS SUMMA_TARIF_NDS,
       SUM(NVL(a.TARIF_GUARD,0)+NVL(a.TARIF_GUARD_NDS,0)) AS SUMMA_OHRANA,
       SUM(NVL(a.TARIF_GUARD_NDS,0)) AS SUMMA_OHRANA_NDS,
       SUM(NVL(a.TARIF_ALT,0)) AS TARIF_MPS,
       SUM(NVL(a.TARIF,0)) AS TARIF_KVIT,
       SUM(NVL(a.SUM_STRAH,0)) AS SUMMA_STRAH,
       SUM(NVL(a.SUM_PROD_NDS,0)+NVL(a.SUM_PROD,0)+
           NVL(a.SUM_VOZN11,0)+NVL(a.SUM_VOZN12,0)+NVL(a.SUM_VOZN11_NDS,0)+NVL(a.SUM_VOZN12_NDS,0)+
        NVL(a.TARIF,0)+NVL(a.TARIF_NDS,0)+
        NVL(a.TARIF_GUARD,0)+NVL(a.TARIF_GUARD_NDS,0)+
        NVL(a.SUM_STRAH,0)) AS SUMMA_DOK,
       SUM(NVL(a.SUM_PROD_NDS,0)+
           NVL(a.SUM_VOZN11_NDS,0)+NVL(a.SUM_VOZN12_NDS,0)+
           NVL(a.TARIF_NDS,0)+
           NVL(a.TARIF_GUARD_NDS,0)) AS SUMMA_DOK_NDS,
    MAX(a.ID) AS ID,
       MAX(a.SVED_NUM) AS SVED_NUM,
    MAX(a.NUM_KVIT) AS NUM_KVIT,
    MAX(a.NUM_DOVER) AS NUM_DOVER,
    MAX(a.NUM_CIST) AS NUM_CIST,
    MAX(a.PROTO_NUM) AS PROTO_NUM,
    MAX(a.PROTO_DATE) AS PROTO_DATE,
    MAX(a.NUM_AKT) AS NUM_AKT
     FROM
    (
    SELECT /*+ INDEX(kvit KVIT_DATE_KVIT_BILLS_I) */ * FROM KVIT
      WHERE DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
      UNION ALL
     SELECT /*+ INDEX(dop_kvit) */ * FROM DOP_KVIT
       WHERE DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
        ) a ,KLS_VAGOWNER
  WHERE a.VAGOWNER_ID=KLS_VAGOWNER.ID(+)
  GROUP BY a.BILL_ID,a.PROD_ID_NPR/*,a.DATE_VIR,DECODE(a.OWNERSHIP_ID,1,1,3)*/
    ) KV,
    BILLS, KLS_PROD, KLS_PROD gr_prod, KLS_DOG, KLS_PREDPR PLAT, MONTH, KLS_PREDPR POLUCH, KLS_STAN STANOTP, KLS_STAN STAN, KLS_PREDPR POTREB, USL_DOG
WHERE b_p.nom_dok=KV.BILL_ID(+)
  AND b_p.PROD_ID_NPR=KV.PROD_ID_NPR(+)
--  AND b_p.SOBSTV=KV.SOBSTV(+)
  AND b_p.NOM_DOK=BILLS.NOM_DOK
  AND b_p.PROD_ID_NPR = KLS_PROD.ID_NPR
  AND KLS_PROD.ID_GROUP_NPR = gr_prod.ID_NPR (+)
  AND bills.DATE_KVIT>=TO_DATE('01.01.2006','dd.mm.yyyy')
  AND BILLS.PROD_ID_NPR NOT IN ('10041')
  AND BILLS.DOG_ID = KLS_DOG.ID
  AND KLS_DOG.PREDPR_ID = PLAT.ID
  AND BILLS.NOM_ZD = MONTH.NOM_ZD(+)
  AND NVL(MONTH.POLUCH_ID,KLS_DOG.PREDPR_ID) = POLUCH.ID
  AND NVL(MONTH.POTREB_ID,NVL(MONTH.POLUCH_ID,KLS_DOG.PREDPR_ID)) = POTREB.ID
  AND MONTH.STANOTP_ID = STANOTP.ID(+)
  AND MONTH.STAN_ID = STAN.ID(+)
  AND MONTH.DOG_ID=USL_DOG.DOG_ID (+)
  AND MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)
--  and bills.nom_dok=6124876
  --  and bills.nom_sf='100129'
;


