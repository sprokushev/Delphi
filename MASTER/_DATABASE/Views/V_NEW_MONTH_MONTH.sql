/* This object may not be sorted properly in the script due to cirular references. */
--
-- V_NEW_MONTH_MONTH  (View) 
--
CREATE OR REPLACE FORCE VIEW MASTER.V_NEW_MONTH_MONTH
(ID, VBELN, NOM_ZD, DATE_RAZN, DATE_PLAN, 
 LOCK_STATUS, IS_EXP_NAME, IS_EXP, VBAK_VSBED, LOAD_NAME, 
 VBKD_TRATY, VAGONTYPE_NAME, LOAD_ABBR, LOAD_TYPE_ID, TYPE_OTGR_NAME, 
 VBAP_MATNR, PROD_NAME_NPR, PROD_ID_NPR, LUK_DOG_NUMBER, LUK_DOG_ID, 
 NPO_DOG_NUMBER, NPO_DOG_ID, DOG_NUMBER, DOG_ID, USL_NUMBER, 
 VBPA_KUNNR, PLAT_NAME, PLAT_ID, OT_LIFNR, GROTP_NAME, 
 GROTP_ID, TEX_PD_ID, VBAP_ROUTE, ROUTE_NAME, KNANF, 
 STANOTP_KOD, STANOTP_ID, STANOTP_NAME, KNEND, STAN_KOD, 
 STAN_ID, STAN_NAME, SH_KUNNR, POLUCH_NAME, POLUCH_ID, 
 POLUCH_GD_KOD, POTREB_NAME, POTREB_ID, VETKA_NAME, VETKA_ID, 
 OWNERSHIP_ID, VBAK_AUART, CONTRACTOR_ATTR, NAZN_OTG_ID, NAZN_OTG_NAME, 
 NP_OWNER, OWNER_NAME, OWNER_ID, NP_PRODR, PRODR_NAME, 
 PRODR_ID, SUPPLIER_ID, SUPPLIER_NAME, LGOBE, TARIF_CODE, 
 TRANSP_NUM, FORMA_2, FORMA_2_NAME, PRIM, GR4, 
 OSN_8, SLIV_V, DOP_CIST, OBOGR, VBKD_VSART, 
 VAGOWNER_NAME, TONN_DECLARED, CIST_DECLARED, TONN_ALLOW, CIST_ALLOW, 
 TONN_MIN, CIST_MIN, TONN_R, CIST_R, TONN_LOADED, 
 CIST_LOADED, GOSPROG_ID, GOSPROG_NAME, GP_NAPR_ID, GP_NAPR_NAME, 
 DATE_CEN, CENA, CENA_OTP, SUM_ZD, TARIF1TONN, 
 PLANSTRU_ID, PLANSTRU_NAME, UPDATE_DATE, UPDATE_FILE)
AS 
SELECT
  A.NOM_ZD AS ID, -- ID
  R3.VBELN, -- номер разнарядки R3
  A.NOM_ZD, -- номер разнарядки НПО
  A.INPUT_DATE AS DATE_RAZN, -- дата разнарядки
  A.DATE_PLAN, -- плановая дата
  DECODE(R3.V_TJ30_TXT04,NULL,'0010',R3.V_TJ30_TXT04) AS LOCK_STATUS, -- статус блокировки разнарядки
  DECODE(A.IS_EXP,1,'ЭКСПОРТ','ВНУТРЕННИЙ РЫНОК') AS IS_EXP_NAME, A.IS_EXP, -- направление
  R3.VBAK_VSBED, C.LOAD_NAME, R3.VBKD_TRATY, R3_TRATY.NAME AS VAGONTYPE_NAME, A.LOAD_ABBR AS LOAD_ABBR, C.LOAD_TYPE_ID AS LOAD_TYPE_ID,KLS_LOAD_TYPE.TYPE_OTGR_NAME, -- Тип транспортировки
  R3.VBAP_MATNR, KLS_PROD.NAME_NPR AS PROD_NAME_NPR, A.PROD_ID_NPR, -- продукт
  DECODE(NVL(dog.MAINDOG_ID,0),0,'',DECODE(NVL(dog.LUKDOG_ID,0),0,dog.DOG_NUMBER,luk_dog.DOG_NUMBER)) AS LUK_DOG_NUMBER, DECODE(NVL(dog.MAINDOG_ID,0),0,0,DECODE(NVL(dog.LUKDOG_ID,0),0,dog.ID,dog.LUKDOG_ID)) AS LUK_DOG_ID, -- Договор ЛУКОЙЛ-Клиент
  NPO_DOG.DOG_NUMBER AS NPO_DOG_NUMBER, A.NPODOG_ID AS NPO_DOG_ID, -- Договор НПО-Клиент
  dog.DOG_NUMBER AS DOG_NUMBER, A.DOG_ID, -- Договор разнарядки
  A.USL_NUMBER, -- Номер условия,
  R3.VBPA_KUNNR, plat.PREDPR_NAME AS plat_name, dog.PREDPR_ID AS plat_ID, -- Плательщик по договору разнарядки
  R3.OT_LIFNR, grotp.PREDPR_NAME AS grotp_name, A.GROTP_ID AS grotp_ID, -- грузоотправитель
  A.TEX_PD_ID, -- плательщик тарифа
  R3.VBAP_ROUTE, R3_ROUTES.BEZEI AS ROUTE_NAME, R3_ROUTES.KNANF, STANOTP.STAN_KOD AS STANOTP_KOD, STANOTP.ID AS STANOTP_ID, STANOTP.STAN_NAME AS STANOTP_NAME, R3_ROUTES.KNEND, STAN.STAN_KOD, STAN.ID AS STAN_ID, STAN.STAN_NAME, -- Маршрут
  R3.SH_KUNNR, poluch.PREDPR_NAME AS poluch_name, A.poluch_ID, -- грузополучатель
  poluch.GD_KOD AS POLUCH_GD_KOD,
  potreb.PREDPR_NAME AS POTREB_NAME, A.potreb_ID, -- Потребитель
  KLS_VETKA.VETKA_NAME, A.vetka_id, -- Ветка получателя
  DECODE(NVL(dog.MAINDOG_ID,0),0,2,0) AS OWNERSHIP_ID, -- отношения собственности (0-собс.продукт,1-покупной,2-чужой)
  R3.VBAK_AUART,
  R3.CONTRACTOR_ATTR,
  A.NAZN_OTG_ID, KLS_NAZN_OTG.NAZN_OTG_NAME, -- назначение отгрузки
  R3.NP_OWNER, owner.PREDPR_NAME AS owner_name, A.NPR_SOBSTV_ID AS owner_ID, -- собственник н/п
  R3.NP_PRODR, prodr.NAME AS prodr_name, 0 AS prodr_ID, -- производитель н/п
  A.SUPPLIER_ID, supplier.PREDPR_NAME AS SUPPLIER_NAME, -- поставщик н/п
  D.LGOBE, -- Завод/Склад
  A.K_TAR AS TARIF_CODE, -- Код искл.тарифа
  A.TRANSPORT AS TRANSP_NUM, -- N транспорта
  A.FLG_FORMA_2 AS FORMA_2, KLS_FORMA_2.NAME AS FORMA_2_NAME, -- Оплата по ф.2
  A.PRIM, -- Примечание
  A.GR4, -- Графа 4
  A.FLG_ALLOW_8_AXES AS osn_8, -- можно в 8-осные
  A.FLG_UPPER_SLIV AS sliv_v, -- можно верхний слив
  A.FLG_DOP_CIST AS dop_cist, -- д/ц
  A.FLG_OBOGR AS obogr, -- обогрев
  R3.VBKD_VSART, F.NAME AS VAGOWNER_NAME,
  A.TONN_DECLARED, -- Заявлено
  A.CIST_DECLARED, -- Заявлено цист.
  NVL(R3.VBAP_KBMENG,0) AS TONN_ALLOW, -- Разрешено
  CEIL(NVL(R3.VBAP_KBMENG,0)/60) AS CIST_ALLOW, -- Разрешено цист.
  DECODE(SIGN(A.TONN_R-A.TONN_LOADED),-1,A.TONN_LOADED,A.TONN_R) AS TONN_MIN, -- Минимально
  DECODE(SIGN(A.TONN_R-A.TONN_LOADED),-1,A.CIST_LOADED,A.CIST_R) AS CIST_MIN, -- Минимально цист.
  A.TONN_R, -- К отгрузке
  A.CIST_R, -- К отгрузке цист.
  A.TONN_LOADED, -- Отгружено
  A.CIST_LOADED, -- Отгружено цист.
  A.GOSPROG_ID, KLS_GOSPROG.GOSPROG_NAME, -- Госпрограмма
  A.GP_NAPR_ID, KLS_GP_NAPR.NAME AS GP_NAPR_NAME, -- Получатель по ГП
  A.DATE_CEN, -- Дата цены
  A.CENA, -- цена без НДС
  A.CENA_OTP, -- отпускная цена
  A.SUM_ZD, -- сумма по заданию
  A.TARIF1TONN, -- тариф за 1 тонну
  A.PLANSTRU_ID, KLS_PLANSTRU.NAME AS PLANSTRU_NAME, -- позиция плана поставки
  A.UPDATE_DATE, -- дата последнего обновления
  '' AS UPDATE_FILE -- файл
FROM MONTH A, R3_VBAK R3, KLS_DOG dog, KLS_STAN stan, KLS_STAN stanotp, KLS_DOG MAIN_DOG, KLS_VID_OTGR C, KLS_FORMA_2,
     KLS_NAZN_OTG, KLS_LOAD_TYPE, KLS_PROD, R3_TRATY, KLS_DOG LUK_DOG, KLS_DOG NPO_DOG, KLS_PREDPR plat, KLS_PREDPR grotp,
	 KLS_PREDPR poluch, KLS_PREDPR potreb, R3_ROUTES, KLS_VETKA, KLS_PREDPR owner, R3_VENDORS prodr, KLS_PREDPR supplier,
	 R3_WERKS_LGORT D,R3_VSART F, KLS_GOSPROG, KLS_GP_NAPR, KLS_PLANSTRU
WHERE A.nom_zd=R3.nom_zd(+)
  AND A.DOG_ID=dog.ID
  AND A.STANOTP_ID=stanotp.ID(+)
  AND A.STAN_ID=stan.ID(+)
  AND dog.MAINDOG_ID=MAIN_DOG.ID(+)
  AND A.LOAD_ABBR=C.LOAD_ABBR
  AND A.FLG_FORMA_2=KLS_FORMA_2.ID (+)
  AND A.NAZN_OTG_ID=KLS_NAZN_OTG.ID
  AND C.LOAD_TYPE_ID=KLS_LOAD_TYPE.ID
  AND A.PROD_ID_NPR=KLS_PROD.ID_NPR
  AND R3.VBKD_TRATY=R3_TRATY.VBKD_TRATY(+)
  AND dog.LUKDOG_ID=LUK_DOG.ID(+)
  AND A.NPODOG_ID=NPO_DOG.ID(+)
  AND dog.PREDPR_ID=plat.ID
  AND A.GROTP_ID=grotp.ID
  AND A.POLUCH_ID=poluch.ID
  AND A.POTREB_ID=potreb.ID
  AND R3.VBAP_ROUTE=R3_ROUTES.ROUTE(+)
  AND A.VETKA_ID=KLS_VETKA.ID(+)
  AND A.NPR_SOBSTV_ID=owner.ID(+)
  AND R3.NP_PRODR=prodr.ID(+)
  AND A.SUPPLIER_ID=supplier.ID(+)
  AND R3.VBAP_WERKS=D.VBAP_WERKS(+)
  AND R3.LGORT=D.LGORT(+)
  AND R3.VBKD_VSART=F.VBKD_VSART (+)
  AND A.GOSPROG_ID=KLS_GOSPROG.ID(+)
  AND A.GP_NAPR_ID=KLS_GP_NAPR.ID(+)
  AND A.PLANSTRU_ID=KLS_PLANSTRU.ID(+);


