unit ForTemp;

// Oracle Package Wizard 1.0.3
// File ForTemp.pas generated by SProkushev on 01.10.2002 15:44:08
// This unit contains interface objects for oracle package MASTER.FOR_TEMP
// WARNING: Modifications made to this file will be lost after regeneration!

interface

uses Classes, SysUtils, Oracle;

type
(*
PACKAGE FOR_TEMP AS

  /* Объявить временную переменную
     pVariName - имя переменной
     pVariValue - значение переменной
	 pAppName - приложение (можно не указывать)
	 pUnitName - модуль (можно не указывать)
  */
  FUNCTION SET_VARI(pVariName VARCHAR2, PVariValue NUMBER, pAppName VARCHAR2:='', pUnitName VARCHAR2:='', pTime NUMBER := 1) RETURN NUMBER;
  FUNCTION SET_VARI(pVariName VARCHAR2, PVariValue DATE, pAppName VARCHAR2:='', pUnitName VARCHAR2:='', pTime NUMBER := 1) RETURN NUMBER;
  FUNCTION SET_VARI(pVariName VARCHAR2, PVariValue VARCHAR2, pAppName VARCHAR2:='', pUnitName VARCHAR2:='', pTime NUMBER := 1) RETURN NUMBER;

  /* Прочитать значение временной переменной
     pVariName - имя переменной
	 pAppName - приложение (можно не указывать)
	 pUnitName - модуль (можно не указывать)
	 pVariId - ID переменной (указывать если pVariName=NULL)
  */
  FUNCTION GET_AS_NUM(pVariName VARCHAR2, pAppName VARCHAR2:='', PUnitName VARCHAR2:='', PVariId NUMBER:=NULL) RETURN NUMBER;
  FUNCTION GET_AS_DATE(pVariName VARCHAR2, pAppName VARCHAR2:='', PUnitName VARCHAR2:='', PVariId NUMBER:=NULL, pFormat VARCHAR2:='dd.mm.yyyy hh24:mi:ss') RETURN DATE;
  FUNCTION GET_AS_CHAR(pVariName VARCHAR2, pAppName VARCHAR2:='', PUnitName VARCHAR2:='', PVariId NUMBER:=NULL, pFormat VARCHAR2:='dd.mm.yyyy hh24:mi:ss') RETURN VARCHAR2;

  /* Подчистка временных переменных */
  PROCEDURE CLEAR_TEMP_VARI;

  /* */

END;
*)
  TTempVari = class(TOracleCustomPackage)
  public
    function  GetAsChar(const Pvariname: string; const Pappname: string='';
      const Punitname: string=''; Pvariid: Double=0; const Pformat: string='dd.mm.yyyy hh24:mi:ss'): string;
    function  GetAsDate(const Pvariname: string; const Pappname: string='';
      const Punitname: string=''; Pvariid: Double=0; const Pformat: string='dd.mm.yyyy hh24:mi:ss'): TDateTime;
    function  GetAsNum(const Pvariname: string; const Pappname: string='';
      const Punitname: string=''; Pvariid: Double=0): Double;
    function  SetVariNum(const Pvariname: string; Pvarivalue: Double;
      const Pappname: string=''; const Punitname: string=''; Ptime: Double=1): Double;
    function  SetVariDate(const Pvariname: string; Pvarivalue: TDateTime;
      const Pappname: string=''; const Punitname: string=''; Ptime: Double=1): Double;
    function  SetVariChar(const Pvariname: string; const Pvarivalue: string;
      const Pappname: string=''; const Punitname: string=''; Ptime: Double=1): Double;
  published
    property Name;
    property Session;
    property Cursor;
  end;

var
  DefaultPLSQLTableSize: Integer = 100; // Default size of a PL/SQL Table
  TempVari:TTempVari;

implementation

// FOR_TEMP.GET_AS_CHAR
function TTempVari.GetAsChar(const Pvariname: string; const Pappname: string='';
  const Punitname: string=''; Pvariid: Double=0; const Pformat: string='dd.mm.yyyy hh24:mi:ss'): string;
var S:string;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otString);
  OCPQuery.DeclareVariable('PVARINAME', otString);
  OCPQuery.SetVariable('PVARINAME', Pvariname);
  OCPQuery.DeclareVariable('PAPPNAME', otString);
  OCPQuery.SetVariable('PAPPNAME', Pappname);
  OCPQuery.DeclareVariable('PUNITNAME', otString);
  OCPQuery.SetVariable('PUNITNAME', Punitname);
  OCPQuery.DeclareVariable('PVARIID', otFloat);
  OCPQuery.SetVariable('PVARIID', Pvariid);
  OCPQuery.DeclareVariable('PFORMAT', otString);
  OCPQuery.SetVariable('PFORMAT', Pformat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "FOR_TEMP"."GET_AS_CHAR"(');
  OCPQuery.SQL.Add('    PVARINAME => :PVARINAME,');
  OCPQuery.SQL.Add('    PAPPNAME => :PAPPNAME,');
  OCPQuery.SQL.Add('    PUNITNAME => :PUNITNAME,');
  OCPQuery.SQL.Add('    PVARIID => :PVARIID,');
  OCPQuery.SQL.Add('    PFORMAT => :PFORMAT);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  S := ConvertVariant(OCPQuery.GetVariable('function_result'));
  Result:=S;
end;

// FOR_TEMP.GET_AS_DATE
function TTempVari.GetAsDate(const Pvariname: string; const Pappname: string='';
  const Punitname: string=''; Pvariid: Double=0; const Pformat: string='dd.mm.yyyy hh24:mi:ss'): TDateTime;
  var D:TDateTime;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otDate);
  OCPQuery.DeclareVariable('PVARINAME', otString);
  OCPQuery.SetVariable('PVARINAME', Pvariname);
  OCPQuery.DeclareVariable('PAPPNAME', otString);
  OCPQuery.SetVariable('PAPPNAME', Pappname);
  OCPQuery.DeclareVariable('PUNITNAME', otString);
  OCPQuery.SetVariable('PUNITNAME', Punitname);
  OCPQuery.DeclareVariable('PVARIID', otFloat);
  OCPQuery.SetVariable('PVARIID', Pvariid);
  OCPQuery.DeclareVariable('PFORMAT', otString);
  OCPQuery.SetVariable('PFORMAT', Pformat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "FOR_TEMP"."GET_AS_DATE"(');
  OCPQuery.SQL.Add('    PVARINAME => :PVARINAME,');
  OCPQuery.SQL.Add('    PAPPNAME => :PAPPNAME,');
  OCPQuery.SQL.Add('    PUNITNAME => :PUNITNAME,');
  OCPQuery.SQL.Add('    PVARIID => :PVARIID,');
  OCPQuery.SQL.Add('    PFORMAT => :PFORMAT);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  D := ConvertVariant(OCPQuery.GetVariable('function_result'));
  Result:=D;
end;

// FOR_TEMP.GET_AS_NUM
function TTempVari.GetAsNum(const Pvariname: string; const Pappname: string='';
  const Punitname: string=''; Pvariid: Double=0): Double;
var D:double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PVARINAME', otString);
  OCPQuery.SetVariable('PVARINAME', Pvariname);
  OCPQuery.DeclareVariable('PAPPNAME', otString);
  OCPQuery.SetVariable('PAPPNAME', Pappname);
  OCPQuery.DeclareVariable('PUNITNAME', otString);
  OCPQuery.SetVariable('PUNITNAME', Punitname);
  OCPQuery.DeclareVariable('PVARIID', otFloat);
  OCPQuery.SetVariable('PVARIID', Pvariid);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "FOR_TEMP"."GET_AS_NUM"(');
  OCPQuery.SQL.Add('    PVARINAME => :PVARINAME,');
  OCPQuery.SQL.Add('    PAPPNAME => :PAPPNAME,');
  OCPQuery.SQL.Add('    PUNITNAME => :PUNITNAME,');
  OCPQuery.SQL.Add('    PVARIID => :PVARIID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  D := ConvertVariant(OCPQuery.GetVariable('function_result'));
  Result:=D;
end;

// FOR_TEMP.SET_VARI, overload 1
function TTempVari.SetVariNum(const Pvariname: string; Pvarivalue: Double;
  const Pappname: string=''; const Punitname: string=''; Ptime: Double=1): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PVARINAME', otString);
  OCPQuery.SetVariable('PVARINAME', Pvariname);
  OCPQuery.DeclareVariable('PVARIVALUE', otFloat);
  OCPQuery.SetVariable('PVARIVALUE', Pvarivalue);
  OCPQuery.DeclareVariable('PAPPNAME', otString);
  OCPQuery.SetVariable('PAPPNAME', Pappname);
  OCPQuery.DeclareVariable('PUNITNAME', otString);
  OCPQuery.SetVariable('PUNITNAME', Punitname);
  OCPQuery.DeclareVariable('PTIME', otFloat);
  OCPQuery.SetVariable('PTIME', Ptime);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "FOR_TEMP"."SET_VARI"(');
  OCPQuery.SQL.Add('    PVARINAME => :PVARINAME,');
  OCPQuery.SQL.Add('    PVARIVALUE => :PVARIVALUE,');
  OCPQuery.SQL.Add('    PAPPNAME => :PAPPNAME,');
  OCPQuery.SQL.Add('    PUNITNAME => :PUNITNAME,');
  OCPQuery.SQL.Add('    PTIME => :PTIME);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// FOR_TEMP.SET_VARI, overload 2
function TTempVari.SetVariDate(const Pvariname: string; Pvarivalue: TDateTime;
  const Pappname: string=''; const Punitname: string=''; Ptime: Double=1): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PVARINAME', otString);
  OCPQuery.SetVariable('PVARINAME', Pvariname);
  OCPQuery.DeclareVariable('PVARIVALUE', otDate);
  OCPQuery.SetVariable('PVARIVALUE', Pvarivalue);
  OCPQuery.DeclareVariable('PAPPNAME', otString);
  OCPQuery.SetVariable('PAPPNAME', Pappname);
  OCPQuery.DeclareVariable('PUNITNAME', otString);
  OCPQuery.SetVariable('PUNITNAME', Punitname);
  OCPQuery.DeclareVariable('PTIME', otFloat);
  OCPQuery.SetVariable('PTIME', Ptime);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "FOR_TEMP"."SET_VARI"(');
  OCPQuery.SQL.Add('    PVARINAME => :PVARINAME,');
  OCPQuery.SQL.Add('    PVARIVALUE => :PVARIVALUE,');
  OCPQuery.SQL.Add('    PAPPNAME => :PAPPNAME,');
  OCPQuery.SQL.Add('    PUNITNAME => :PUNITNAME,');
  OCPQuery.SQL.Add('    PTIME => :PTIME);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// FOR_TEMP.SET_VARI, overload 3
function TTempVari.SetVariChar(const Pvariname: string; const Pvarivalue: string;
  const Pappname: string=''; const Punitname: string=''; Ptime: Double=1): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PVARINAME', otString);
  OCPQuery.SetVariable('PVARINAME', Pvariname);
  OCPQuery.DeclareVariable('PVARIVALUE', otString);
  OCPQuery.SetVariable('PVARIVALUE', Pvarivalue);
  OCPQuery.DeclareVariable('PAPPNAME', otString);
  OCPQuery.SetVariable('PAPPNAME', Pappname);
  OCPQuery.DeclareVariable('PUNITNAME', otString);
  OCPQuery.SetVariable('PUNITNAME', Punitname);
  OCPQuery.DeclareVariable('PTIME', otFloat);
  OCPQuery.SetVariable('PTIME', Ptime);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "FOR_TEMP"."SET_VARI"(');
  OCPQuery.SQL.Add('    PVARINAME => :PVARINAME,');
  OCPQuery.SQL.Add('    PVARIVALUE => :PVARIVALUE,');
  OCPQuery.SQL.Add('    PAPPNAME => :PAPPNAME,');
  OCPQuery.SQL.Add('    PUNITNAME => :PUNITNAME,');
  OCPQuery.SQL.Add('    PTIME => :PTIME);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

end.
